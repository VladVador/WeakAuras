--- WeakAura Strings ---
dCfdDfqiuukQfHuvxcfLSjuukYNqrPkJcP0PqQSkerEfsvmlQGBrcTluKFHuLgMk4yIkldr5zurMgvuxJeSnrbFtuvgNOiNtuY6qevVJeX8irI7HOAFiIYbrHwOkPhIizIOaxeryJKO(OOunsrvLtQk0kvPEPOuuntrrDtQq2jc(POkdfrQLQk4PsMksUkkQ2QOQQVIcASIsPZsIuVLejnxrPOCxrPWEH(lvAWGdJQfRc9yuAYK0Lf2SQ0NPQgncDAsTAuuk8AQqnBkUnvz3e9BknCv0XrrPQwUipNW0L66QQTJu8DvIXlk05vfTEuu8EuuknFrPi3hfLk7xzmhsHfhPWglbwKXezmLJPCy5HLkwQifwzmV3xr0ibYWIZ2AAcQK23psoYQgiHdyfz8Klvdv8kwPWxBLuppdS8t2)jwIW8sARw2yDnpkQ8CuMjHYuyXvv1T2k5g3oP99JKaPWgRN59(kIgvwrNZxMu4GZhiZzNDYzYYxMCgFv05mHL87rL0((rsGeYHLXYvrkSAUjKnsHL330AKcBSXI1WfcKclHw6BcSi9dpsIIcBSu1VVA2VPFIuy59nTgPWgBSswtGuy59nTgPWgBSE5ST2krkS8(MwJuyJnwN0C2CtiBKclVVP1if2yJvIZgifwEFtRrkSXgRViCznCHaRo9dSXsRIvrAsNSScSXIfPqc5qkS(YoP99JesHL4mmgcCVaj4KZo7KtyJfNT10eujTVFKCKvnqchWIZ2ARuGuyjAEQrkSuTU(g7f8kw(g7f33e3lWIHb3Xm(tCbjVuEaTwwv6WY3yV4YzBTvILGO9cwQwxVqi4(bEelvRRW(LQ4rSX6vl1cIifwQwxFJ9cEelFJ9IlNT1wjwe1Qbw(g7f33e3lWcBSXIl1E8wBLifwIMNAKcRZuiIglbXKw6ySXYJRLifwDIlfgEhuppdSoA)s2alU5KiN65zGf3CsKt6VreyXAn20vKqoSyTgBk7iHCyXnNe5k)LSynyWGbPO)j5G3VKT1wjTNjRFkechgiAEQDyGAyAoD7EWGbdgmWyz5MbCPVjgq(aAptw)uiediPbKnGKg4XBImDQPBGIdO1J3ez6upGEhqgD7EWGbdgmif9pjhiAEQhqpdOLwA94nrMeAjTCPVjOBa9mihD0lz0nGKgOgMMt3UhmyWGqQU7bdW6lc3oXLcdVd8kwFr4YnNe54vSeSCtq98mW68BebwFr4ky5MaVILGLBINiHCmPawDIlfgEhk)LSynyWGbPO)j5G3VKT1wjTNjRFkechgiAEQZwhgiAEQvAhgOgMMNTomqnmnxPPB3dgmyWGbgll3m4O9lzdgOfnxYgdiFGhVjYKqlP9mz9tHqmGKg4XBImDQPB3dgmyWGbPO)j5arZtD2oGEgq7r7xYgmqlAUKngqsdudtZZw6CyGO5PwPhqpdO9O9lzdgOfnxYgdiPbQHP5knD7EWGbdcP6UhmaRZuiIglXPoXnCP653icS4MtICKWbMCclwRXMEajKdRNibYuaRmIeoGLGLBImIeYXKcyXAn2eJiHCyjy5Mq5VKfRbdgmif9pjh8(LST2kP9mz9tHq4WarZtD26WarZtTs7Wabl3ezRddeSCtO00T7bdgmyWaJLLBgWL(Mya5dO9mz9tHqmGKgq2asAGhVjY0PMUbkoGwpEtKPt9a6Daz0T7bdgmyWGu0)KCGO5PoBhqpdOLwA94nrMeAjTCPVjOBa9mihD0lz0nGKgqRGLBISDGIdYrhDomq08uR0dONb0slTE8MitcTKwU03e0nGEgKJo6Lm6gqsdOvWYnHspqXb5OJUDpyWGbHuD3dgGvY28oqchWs9N4T2kX6at5tbSX6vl1cIifwNPqenwcIjT0XyJnwDs77hjKcl2VOTEUe1QbwT2luXQFEgyjAE)fyjodJHa3lqco5SZo5ewFzqtiBS4)2I1xeUcI2l5jXRyf0eYglszTgv7f5asNS(PqigqBDggdDyLcUPodJHa3lWQiYvTxE1HufRViCfNHXqG7f4vSeeTxYtILGO9sEYhcU6tS(IW9l1nEfBSETYglgzz1QHS5MbKofcTAizFIfXq7tSrcoRawglxfPW6lcxzqtKWJyXA4cbsHLql9nbwK(HhjrrHL330AKcls)WJKOOWRyJnwFr42CtiB8iwFr4YA4cbEfReNnqkS8(MwJuyJnwFr4kodw8kwFr4AcAcdEeRMBczJuy59nTgPqc5YhEfjKld4vSXglXzWIuyj0sFtGeCclVVP1ifsWj8k2yJLQ(9vZ(n9tKclVVP1if2yJ1xeUmJvg4rSoP5S5Mq2ifwEFtRrkSXgRViCLCVapI1xeUSwVJ8gVIvYAcKclVVP1if2yJ1lNT1wjsHL330AKcBSXgRxRSlnZeiHCzalvT40WFwnN1XcSgGvk81wj1ZZalnRvIfxvv3ARKBC7K23pscKcBSyTwJQ9IepIfZyTEiHdmrMcyPvXQuEaTwwv6W6zEVVIOrckMlRdyDrR2ercoRawYVhvs77hjbsihwzmV3xr0ibfvGmSrcKHuy9LDs77hjKclXzyme4EbsihzoDW5dyJfNT10eujTVFKCKvnqchWIZ2ARuGuyjAEQrkSuTU(g7f8kw(g7fxoBRTsSeeTxWY3yV4(M4Ebwmm4oMXFIli5o64aATSQ0HLQ11lecUFGhXs16kSFPkEeBSE1sTGisHLQ113yVGhXY3yV4YzBTvIfrTAGLVXEX9nX9cSWgBS4sThV1wjsHLO5PgPW6mfIOXsqmPLogBS84AjsHvN4sHH3b1ZZaRJ2VKnWIBojYPEEgyXnNe5K(BebwSwJnDfjKdlwRXMYosihwCZjrUYFjlwdgmyqk6Fso49lzBTvs7zY6NcHWHbIMNAhgOgMMt3UhmyWGbdmwwUzax6BIbKpG2ZK1pfcXasAazdiPbE8MitNA6gO4aA94nrMo1dO3bKr3UhmyWGbdsr)tYbIMN6b0ZaAPLwpEtKjHwslx6Bc6gqpdYrh9sgDdiPbQHP50T7bdgmiKQ7EWaS(IWTtCPWW7aVI1xeUCZjroEflbl3euppdSo)grGLGLBcL)swSgmyWGu0)KCW7xY2ARK2ZK1pfcHddenp1zRddenp1kTddeSCtKTomqWYnHst3UhmyWGbdmwwUzax6BIbKpG2ZK1pfcXasAazdiPbE8MitNA6gO4aA94nrMo1dO3bKr3UhmyWGbdsr)tYbIMN6SDa9mGwAP1J3ezsOL0YL(MGUb0ZGC0rVKr3asAaTcwUjY2bkoihD05WarZtTspGEgqlT06XBImj0sA5sFtq3a6zqo6OxYOBajnGwbl3ek9afhKJo629Gbdges1DpyawSwJn9asihwDIlfgEhk)LSynyWGbPO)j5G3VKT1wjTNjRFkechgiAEQZwhgiAEQvAhgOgMMNTomqnmnxPPB3dgmyWGbgll3m4O9lzdgOfnxYgdiFGhVjYKqlP9mz9tHqmGKg4XBImDQPB3dgmyWGbPO)j5arZtD2oGEgq7r7xYgmqlAUKngqsdudtZZw6CyGO5PwPhqpdO9O9lzdgOfnxYgdiPbQHP5knD7EWGbdcP6UhmaRZuiIglXPoXnCP653icS4MtICKWbMCcRViCfSCtGxX6jsGmfWkJiHdyjy5MiJiHCmPawSwJnXisihwcwUjEIeYXKcyLSnVdKWbSu)jERTsSoWu(uaBSE1sTGisH1zkerJLGyslDm2yJvN0((rcPWsCggdbUxGeYrMthC(aw9ZZalrZ7Val2VOTEUe1QbwT2luX6ldAczJf)3wS(IWvq0EjpjEfRGMq2yrkR1OAVihq6K1pfcXaARZWyOdRuWn1zyme4Ebwoslvpgs1iH1xeUIZWyiW9c8kwcI2l5jXsq0Ejp5dbx9jwFr4(L6gVInwVwzJfJSSA1q2CZasNcHwnKSpXIyO9j2ibNvalJLRIuy9fHRmOjs4rSynCHaPWsOL(Mals)WJKOOWY7BAnsHfPF4rsuu4vSXgRViCBUjKnEeRViCznCHaVIvYAcKclVVP1if2yJ1xeUIZGfVI1xeUMGMWGhXQ5Mq2ifwcT03eiHCzalVVP1ifsixMWRyJnwIZGfPWsOL(Maj4ewEFtRrkKGt4vSXgRViCLCVapIvIZgifwEFtRrkSXgRtAoBUjKnsHL330AKcBSXsv)(Qz)M(jsHL330AKcBSX6lcxwR3rEJxX6lcxMXkd8iwVC2wBLifwEFtRrkSXgBSETYU0mtGeYLbSu1Itd)z1CwhlWAawPWxBLuppdS0SwjwAvSC0Xb0AzvPdlwR1OAViXJyXmwRhs4atKPawCvvDRTsUXTtAF)ijqkSX6zEVVIOrckMlRdyDrR2ercoRawYVhvs77hjbsihwzmV3xr0ibfvGmSrcoHuy9mV3xr0ibfZL1bS4STMMGkP99JKJSQbs4awCP2J3ARePWs08uJuyDMcr0yjiM0shJnwVAPwqePW6mfIOXsqmPLogBSXQtAF)iHuyX(fT1ZLOwnWQ1EHkw9ZZalrZ7ValXzyme4EbsWjND2jNW6ldAczJf)3wS(IWvq0EjpjEfRGMq2yrkR1OAVihq6K1pfcXaARZWyOdRuWn1zyme4EbwfrUQ9YRoKQy9fHR4mmgcCVaVILGO9sEsSeeTxYtskR1OAViX6lc3Vu34vSXsne8(N4DGxX6mz9tHqq6uWQfARejCaRxRSXIrwwTAiBUzaPtHqRgs2Nyrm0(eBKGZkGLXYvrkS(IWvg0ej8iwSgUqGuyj0sFtGfPF4rsuuy59nTgPWI0p8ijkk8k2yJ1xeUn3eYgpI1xeUSgUqGxXkXzdKclVVP1if2yJ1xeUIZGfVI1xeUMGMWGhXQ5Mq2ifwEFtRrkKqUmGxrc5dVIeYLp8k2yJL4myrkSeAPVjqcoHL330AKcj4eEfBSXsv)(Qz)M(jsHL330AKcBSX6lcxMXkd8iwN0C2CtiBKclVVP1if2yJ1xeUsUxGhX6lcxwR3rEJxXkznbsHL330AKcBSX6LZ2ARePWY7BAnsHn2yJ1Rv2LMzcKqUmGLQwCA4pRMZ6ybwmRtSsHV2kPEEgyPzTsSygR1djCGjYualoBRTsbsHLO5PgPWs166fcb3pWJyPADf2VufpInwVAPwqePWs166BSxWJy5BSxC5ST2kXIOwnWY3yV4(M4EbwyJnwCvvDRTsUXTtAF)ijqkSX6l7K23psifwIZWyiW9cKGto7StoHnwx0QnrKGZkGL87rL0((rsGeYHLwfRs5bKIbyLX8EFfrJeuubYWI1AnQ2ls8kwDKXMuwJnHuibNrchWgBKGZifwFzN0((rcPWsCggdbUxGeYrMthC(a2yXzBnnbvs77hjhzvdKWbS4sThV1wjsHLO5PgPW6mfIOXsqmPLogBSE1sTGisH1zkerJLGyslDm2yJvN0((rcPWsCggdbUxGeYrMthC(aw9ZZalrZ7Val2VOTEUe1QbwT2luX6ldAczJf)3wS(IWvq0EjpjEfRGMq2yrkR1OAVihq6K1pfcXaARZWyOdRuWn1zyme4Ebwoslvpgs1iH1xeUIZWyiW9c8kwcI2l5jXsq0EjpjPSwJQ9IeRViC)sDJxXgl1qW7FI3bEfRZK1pfcbPtbRwOTsKWbSETYglgzz1QHS5MbKofcTAizFIfXq7tSrcoRawglxfPW6lcxzqtKWJyXA4cbsHLql9nbwK(HhjrrHL330AKcls)WJKOOWRyJnwFr42CtiB8iwFr4YA4cbEfRK1eifwEFtRrkSXgRViCfNblEfRViCnbnHbpIvZnHSrkS8(MwJuiHCzcVIn2yjodwKclHw6BcKGty59nTgPqcoHxXgBS(IWvY9c8iwjoBGuy59nTgPWgBSoP5S5Mq2ifwEFtRrkSXglv97RM9B6NifwEFtRrkSXgRViCzTEh5nEfRViCzgRmWJy9YzBTvIuy59nTgPWgBSX61k7sZmbsixgWsvlon8NvZzDSalM1jwPWxBLuppdS0SwjwSwRr1ErIxXIzSwpKWbMitbS4ST2kfifwIMNAKclvRRxieC)apILQ1vy)sv8i2y9QLAbrKclvRRVXEbpILVXEXLZ2ARelIA1alFJ9I7BI7fyHn2yXvv1T2k5g3oP99JKaPWgRN59(kIgjOyUSoG1fTAtej4ScyLX8EFfrJeuubYWs(9OsAF)ijqc5WsRILJooGumaRoYytkRXMqkKGZiHdyJnsqbKcl2VOTEurgBSuuXboslvhubpnGIN8JwmGgN3TIkoGnf8ouhC85GmBc(RIKifQ8eTKG50T7D)(LST2kPLUDpyWGbPO)j5a(pXDdjnm18KF0IDhsvS(YoP99JesHf7x0wpSuuXbSPG3H6GJphKztWFvKePqLNOLemNUDV73VKT1wjTUomO1Er1CVt629GbdgOOIdyUStAF)inq)sY39GbdgOOId6K23psd0IbE2umOjYL5uqmqlh0eJbNCrpiVh29GbdgOOIdK2bE2umO5j)OfdEtwVbgUOh0jTVFKgWnAAIDpyWGbPO)j5Gw7fvZ9ohO4aA5)e3nK0WuR9IQ5ENdSPbhOBajBqofgytd4)e3nK0WuZt(rlgqo5doS7qQInwC2wttqL0((rYrw1ajCalUu7XBTvIuy5X1sKcR(5zGf7x0wpSyTgB6bKqoSu)jERTsSoWuoS(IWL1ASj8kwSwJnr98mWI9lARhwcwUjYisihwCZjros4awSwJnDfjKdRNiHdyLrKWbSyTgBk7iHCyXAn2eJiHCyXAn2KYFjlwPO)j5afvCaBk4DOo44Zbz2e8xfjrku5jAjbZPB37(9lzBTvslD7EWGbduuXbSCd73W7yqBBUza3Z(L9a77ap7rXaI62HbCJWoqlznFvT0FWX)7RyqBhubpT7bdgmq)oqA7b8FI7gsAyY7BA9PrhPbnXqU7bdgmyWGbd0VdK2Ea)N4UHKgM8ShfdAIHCqk6FsoiNddY5WGComi3GqQU7bdgmyWGbd4)e3nK0WK3306tJosdiFWHDpyWGbdgmyWRnni7m)rg4Wa3bA5GtUojOL)tC3qsdtE2Jc6gOA39GbdgmyWGbdgmyGXYYnd8ShD0306tJosdiFqUDpyWGbdgmyWGbdgOFhW)jUBiPHjw75aUuDG02d4)e3nK0WK4YPsn7m)rgKngWLQdK2Ea)N4UHKgMOPvQzN5pYGSXGMyi39GbdgmyWGbdgmyWGbdg4zp6OVP1NgDKgq(GCm58UhmyWGbdgmyWGbdcP6UhmyWGbdgmyWGbd0Vd4)e3nK0WK3Rsn7m)rgKng0ed5UhmyWGbdgmyWGbdgmyWap7rh9nT(0OJ0aYh4zp6OVP1NgDKgqsdOn3a6za)N4UHKgMs2ldiPb8FI7gsAyY7vPMDM)idYg0T7bdgmyWGbdgmyWGqQU7bdgmyWGbdgmyWa(pXDdjnm59nT(0OJ0aYhW)jUBiPHjVVP1NgDKgqpd8ShD0306tJos7EWGbdgmyWGqQU7bdgmiKQ7EWGbd0Vd4)e3nK0WK3306tJosdiN8bhg0ed5Gu0)KCqohgKZHb5CyqUbHuD3dgmyWUhmyWafvCGF0do(FFfomqno(FFfomGLixkdJWHbIM3cMyIPDpyWGbgll3mGix0XaYhKBa9mi7rNFCrh0s3a6DqUdh29GbdgySSCZapUOJ0ZbKpi3a6zq2J2rCrhPNK49nyBAPBa9oi3Hd7EWGbdmwwUzGpR6aYh4XBIm5XZiT5CyqoMuGEjYfDq3UhmyWaJLLBgWsKlLHXHbUdiFaZL6Mue5szyEu(APL(Ng(ZirF629GbdgySSCZaTuWL6(5aYhWCPUV(FFPL(Ng(ZirFhgW)jUBiPHPhLcUu3pV(FFRoPL(0T7bdgmWyz5MbUomW1HbUomWlKn3OmV1()ya5dyUu3mio(FFPL(np5hn9Dya)N4UHKgMCuiBUrzER9)r1jT0NUDpyWGb7EWGbduuXbSCd73W7yGJ0s1bvWtdyaPjb1UhmyWaJLLBgicEIsZ6yXaYhql)N4UHKgMmCrxbpnGlvhqB2JMs7f0s3afhW)jUBiPHjdx0vWtdizdiJEjYfDqhDd4s1bzyGnnqHDpyWGbgll3mWtlvfbpnG8b8FI7gsAyY7BA9PrhPbK0GdmrMcdiPbIGNO0SowmGEh4XBIm5XZiT5CyGc0lrUOd6gmqrfhqMcmRbfPhCgPbTM1XkzGcIbSe5szy29GbdgOFhOLcUu3phytdyjYLYWmGCYhW)jUBiPHPk4jT0)rPGl19ZQtAP)GMyi39GbdgmyWGbEAPQi4PbKpGSbK0apTuve80UhmyWGqQU7bdgmy3dgmyGIkoGLBy)gEhdE1gtKgq7JsbxQ7N0RJ0s1b1P2Xb9wwgmWrf96iTuDGYg(t6gWastcQDpyWGbgll3m4vBmrAa5doS7bdgmq)oqlfCPUFoWMgWsKlLHza5KpG)tC3qsdtpkfCPUFwDsl9h0ed5UhmyWGbdgm4vBmrAa5dCIPCzitdO3bE8MitE8msBohg4e9sKl6GUbduuXb0(OuWL6(jDdiBajnWrAP6aLn8NkzGtIbSe5szy29GbdgegrS7bdgmyWGbdmwwUzGWQ6Waxhg46WaHvTAoRJfomW1HbUomqyvjrgp1PqmG8bmxQ7R)3xAP)PH)ms03Hb8FI7gsAyQ(j)iVxgWtowgcr1jT0NUDpyWGbdgmyG(Da)N4UHKgMyTNdAIHC3dgmyWGbdgmyWGbVAJjsdiFqoMCEWa6DGpR6GbkQ4aADKwQoOo1ooOBqUdhywdiPb5yYzLmihtkigWYf9UhmyWGbdgmyWGbd0Vdew1bCP6aAfw1Q5SowmGCYh40aBAGWQsImEQtHyGIdYE0uAVGw6gOug4mtkqVcRA1CwhlOBqtmK7EWGbdgmyWGbdgmyWGbdE1gtKgq(GxTXePbK0GCmPWGbkQ4afoWSgOY94(XGJw5xm4nz9guwgS7bdgmyWGbdgmyWGqQU7bdgmyWGbdcJi29GbdgmyWGbdgmyG(DGWQoGlvhqRWQwnN1XIbKt(aNgytdewvsKXtDkekM9OP0EbT0nqPmWzMuGEfw1Q5Sowq3GMyi39GbdgmyWGbdgmyWGbdg8QnMinG8b5ysHb07aFw1bduuXb06iTuDqDQDCq3GChoWSgqsdYXKckzqoMuqmi7KIb7EWGbdgmyWGbdgmimIy3dgmyWGbdgmyWGbdgmyWR2yI0aYhKJjfYKZdO3bE8MitE8msBohg4e9sKl6GUbduuXb06iTuDGYg(t6g4uwmLbM1asAGZdAnRJfkzGtIbSe5szy29GbdgmyWGbdgmyqiv39GbdgmyWGbHuD3dgmyqiv39Gbdg8QnMinG8bVAJjsdiPbECrhPN7EWGbd0Vd8czZnkZBT)pg0ed5GxTXePbKp4vBmrAajnG2CdONb8FI7gsAykzVmGKg4fYMBuM3A)Fq3GqQU7bdgmy3dgmyGIkoGLBy)gEhdCkJdCKwQo4QHl6b0ZGCzCadcAS)Kw6pG0gU)pgWastcQDpyWGbgll3mW7O65aYhKJPmOWasAGhx0r65GbkQ4aADKwQo4QHlA6g4e968asAazKDGzT7bdgmq)oWlKn3OmV1()yqtmKd8oQEoG8bEhvphqsdOn3a6za)N4UHKgMs2ldiPbEHS5gL5T2)h0niKQ7EWGbd8oQEoG8bEhvphqpdYXKZkq2GbkQ4aAzqqJ9N0s)bK2W9)bDdYrVopGKgOqMoWuMyw7EWGbd8oQEoG8bEhvphqVd8zv39GbdgS7bdgmqrfhOgh)((AP)UhmyWafv8mPLnT03rAP6Gk4Pb0NjM80svrWtmXe9ZMjvwBmrAa9zIPxTXejMyI(zZKo6kdi9a6ZetEhvpPB3dgmyWUhmyWafvCalrRvedyTgBA3dgmyG(DGNwQkcEAGszWR2yI0GMyi39GbdgmyWGbPO)j5GCom4Gddo4WGCdgOOIdsH6UhmyWGWic97apTuve80aLYaVJQNdAIHC3dgmyWGbdgKI(NKdY5WGCom4GddYnyGIko4zym2l7EWGbdcJi29GbdgmyWGbPO)j5GdomiNddo4WGCdgOOId8tri39Gbdges1DhsvSs2M3bs4awcwUjEIeYHn2y1jTVFKqkS6NNbwSFrB9WI9lARNB)8mWkOjKnwSFrB9CjQvdSy)I26HL6pXBTvIvofWkOjKTalsLNJUYiLBMZl7UKi)jbbkxMtq5hZmfjEGemal2VOTEyPOIdytbVd1bhFoiZMG)QijsHkprljyoD7E3VFjBRTsADDyqR9IQ5ENomiOjKTddCDyGW(tSr2z(JmWHbUomW1HbUomqneD2z(JmWbxhg46WaxhgWetmr3UhmyWGDpyWGb63bc7pXgzN5pYGbKt(aMl1D2z(JmGw6FA4pJe9PBWGMyi39GbdgmyWGb7EWGbdgmyWa97GGMq2diN8b0VinjYCMDzaJoIXStc6pOjgYDpyWGbdgmyWGbdgS7bdgmyWGbdgmyWaJLLBgiodJ5rvhg46Waxhg46Waxhg46Waxhg46Waxhg46Waxhg46Waxhg49nTw0jTJJbKpGjMyA3dgmyWGbdgmyWGb63bEFtRfDs74yqtmKdsr)tYbHuD3dgmyWGbdgmyWGb7EWGbdgmyWGbdgmqrfh4iTuDqf8e9wbpPL(dEuk4sD)C3dgmyWGbdgmyWGb63bIZWyEuDa5KpW5SYez5gytdeNHX8O6aYjFqU8LLtoLVbnXqU7bdgmyWGbdgmyWGbdgmWyz5MbAzhjA4MbKpO1Er1CVZbkoGw(pXDdjnm1AVOAU35aBAWb629GbdgmyWGbdgmyWGbdgW)jUBiPHPw7fvZ9ohq(Gw7fvZ9o39GbdgmyWGbdgmyWGbdgOFhOLDKOHBgqYgCGPCdAIHC3dgmyWGbdgmyWGbdgmyWGbdgOOIdsb7twtmO5hnXUhmyWGbdgmyWGbdgmyWGbdgm41Mg4yhChOLdo56KGw(pXDdjnm5zpkOBGQD3dgmyWGbdgmyWGbdgmyWGbdgmyWGb8FI7gsAyYZEuOuDC2ya5dKAZUhmyWGbdgmyWGbdgmyWGbdgmiKQ7EWGbdgmyWGbdgmyWGbdgmyWa(pXDdjnm18KF0IbKp4WUhmyWGbdgmyWGbdgmyWGqQoy3dgmyWGbdgmyWGbdgmya)N4UHKgM8Shfkv1q0zN5pYGSXaYh0PFS7bdgmyWGbdgmyWGbdgmG)tC3qsdtEFtRpn6inG8bsTz3dgmyWGbdgmyWGbdgmya)N4UHKgMAEYpAXaYhW)jUBiPHPMN8JwmGEgKB3dgmyWGbdgmyWGbdgmyqk6FsoOt)y3dgmyWGbdgmyWGbHuD3dgmyWGbdgmyWGb7EWGbdgmyWGqQU7bdgmyWGbd29GbdgmyWGb7EWGbdgmyWafvCW5VhWnMbE2JIbx0nXbmWsjg8MSEdon8NrAGw22bn)Oje7EWGbdgmyWa97GGMq2diN8b0VinjYCMDzK5pWOlJKM0z(rsWa6pWMge0eYEa5KpG(fPjrMZSlJm)bgDzK0KoZpscg4YG8ksq)bnXqU7bdgmyWGbdgmyWa97aMyIPbKt(afYuwdAIHCWafvCqXqsoP39GbdgmyWGbdgmyWGbdgW)jUBiPHjXLtLQAi6SZ8hzq2ya5d60p29GbdgmyWGbdgmyWGbdgW)jUBiPHjVVP1NgDKgq(aP2S7bdgmyWGbdgmyWGbdgmy3dgmyWGbdgmyWGbHre63bmXetdiN8bo5Cw5CEqtmKdgOOIdYFQDpyWGbdgmyWGbdgmyWGb8FI7gsAyIMwPQgIo7m)rgKngq(Go9JDpyWGbdgmyWGbdgmyWGb8FI7gsAyY7BA9PrhPbKpqQn7EWGbdgmyWGbdgmyWGbd29GbdgmyWGbdgmyqyeH(DatmX0aYjFqUmPqUdopOjgYbduuXbokKn3mqzER9)XUhmyWGbdgmyWGbdgmyWaJLLBg46Waxhg46WaxhgW9SFzpG8bmXet7EWGbdgmyWGbdgmyWGbd4)e3nK0WK3RsvneD2z(JmiBmG8bCp7x2dSPb529GbdgmyWGbdgmyWGbdgW)jUBiPHjVVP1NgDKgq(aP2S7bdgmyWGbdgmyWGbdgmy3dgmyWGbdgmyWGbHre63bmXetdiN8boNPdoRWaBAatmX0aYjFqU8LLtoLPbnXqoyGIkoWrAP6Gk4j6TcEsl9h8OuWL6(5UhmyWGbdgmyWGbdgmyWa(pXDdjnmz4IUcEAa5dKAZUhmyWGbdgmyWGbdgmyWa(pXDdjnm59nT(0OJ0aYhi1MDpyWGbdgmyWGbdgmyWGb7EWGbdgmyWGbdgmiKQ7EWGbdgmyWGbdgmif9pj39GbdgmyWGbHuD3dgmyWGbdgS7bdgmyWGbduuXbPWZstmWZEum4nz9g08JMqm4cXqoqAhySs)inG)(gSDOo44ZbmWsj29GbdgmyWGb63bbnHShqo5dOFrAsK5m7YiZFGr3hiHJYl)jbdO)GMyi39GbdgmyWGbdgmyG(DatmX0aYjFGczkRbnXqU7bdgmyWGbdgmyWGbdgmG)tC3qsdtIlNkv1q0zN5pYGSXaYhi1MDpyWGbdgmyWGbdgmyWGb8FI7gsAyY7BA9PrhPbKpqQn7EWGbdgmyWGbdgmyWGbd29GbdgmyWGbdgmyqyeH(DatmX0aYjFGtoNvoNh0ed5UhmyWGbdgmyWGbdgmyWa(pXDdjnmrtRuvdrNDM)idYgdiFGuB29GbdgmyWGbdgmyWGbdgW)jUBiPHjVVP1NgDKgq(aP2S7bdgmyWGbdgmyWGbdgmy3dgmyWGbdgmyWGbHre63bmXetdiN8b5YKc5o48GMyi39GbdgmyWGbdgmyWGbdgW)jUBiPHjVxLQAi6SZ8hzq2ya5dKAZUhmyWGbdgmyWGbdgmyWa(pXDdjnm59nT(0OJ0aYhi1MDpyWGbdgmyWGbdgmyWGb7EWGbdgmyWGbdgmimIq)oGjMyAa5KpW5mDWzfgytdyIjMgqo5dYLVSCYPmnOjgYDpyWGbdgmyWGbdgmyWGb8FI7gsAyYWfDf80aYhK9OP0EbT0T7bdgmyWGbdgmyWGbdgmy3dgmyWGbdgmyWGbHuD3dgmyWGbdgmyWGbPO)j5UhmyWGbdgmiKQ7EWGbdgmyWGDpyWGbHuD3dgmyWUhmyWGDpyWGbkQ4GMN8JEWBY6nWrAP6Gk4Pbn)OjgOQdXUhmyWa97aAdAczpGCYhqFMt4rkxg8ijya9hytdcAczpGCYhqFMt4rkxgqII6H8uAsWa6pWMge0eYEa5KpG(KMXhOuA3S5pM5mt)b20GGMq2diN8b0VinjYCMDFKqrXy28hZCMPpDd4s1b8FI7gsAyYZEumGlvhW)jUBiPHjp7rHsvneD2z(JmiBmOjgYDpyWGbdgmya)N4UHKgM8Shfkv1q0zN5pYGSXaYhi1MDpyWGbdgmya)N4UHKgMexovQQHOZoZFKbzJbKpqQn7EWGbdgmyWa(pXDdjnmrtRuvdrNDM)idYgdiFGuB29GbdgmyWGb8FI7gsAyY7vPQgIo7m)rgKngq(aP2S7bdgmyWGbd4)e3nK0WK3306tJosdiFGuB29GbdgmyWGb8FI7gsAyQ5j)OfdiFa)N4UHKgMAEYpAXafhKB3dgmyWGbdgKI(NKdgmyWGbdgS7bdgmiKQ7EWGbd2DivhS7DJf7x0wVQ5SowG1U3n2yrm0(eBKGZkGLXYvrkS(IWvg0ej8kwSgUqGuyj0sFtGfPF4rsuuy59nTgPWI0p8ijkk8k2yJ1xeUSgUqGxXkznbsHL330AKcBSX6lcxXzWIxXYe0egSYD4awFr4AcAcdEeRMBczJuy59nTgPWgBSeNblsHLql9nbsWjS8(MwJuibNWRyJnwQ63xn730prkS8(MwJuyJnwFr4k5EbEeRtAoBUjKnsHL330AKcBSXYe0egx7zK4TnHfjJCSE5ST2krkS8(MwJuyJnwjoBGuy59nTgPWgBS(IWLzSYapInwVwzxAMjqcK5mwQAXPH)SAoRJfyXSyXkf(ARK65zGLM1kXsne8(N4DGxXIZ2ARuGuyjAEQrkSuTUEHqW9d8iwQwxH9lvXJyJLwQBKclvRl7x0wp8kwSFrB9Wsrfh8Ou3AUrZmXGMF0eIDZ)jUBiPHjp7rXaYhWSLz3GbkQ4aUXmWZEumGOUhC85ahPLQdQGN2n)N4UHKgMexohq(aMTm7gmqrfhue5Q2ldyOnPsYhqAUwUB(pXDdjnmrtpG8bmBz2nyGIkoi)5EN6KMDaL9ZsC38FI7gsAyY7Da5dy2YSBWafvCGJczZnduM3A)FS7DVBSX6vl1cIifwQwxFJ9cEelFJ9IlNT1wjwe1Qbw(g7f33e3lWcBSXIRQQBTvYnUDs77hjbsHeYHuy1jTVFKqkSe)JbnHSjDkE1zeRI0KiZzgR(5zGf7x0wpSy)I26H17xY2ARK2GMq20nyWGb7EWGbd0VdcAczpGCYhqFsNzgvAs8G7dKi7KGGljiW41mtcgq)bnXqoif9pjhes1DpyWGb7EWGbd4)e3nK0WKHl6k4PbKpG)tC3qsdtgUORGNgytdYE0uAVGw629GbdgS7bdgmqrfhWsmyD8a97aXzWYgQd0Y2oGugEs3phyFhqA7LiT7bdgmW1HbUomW1Hb8FI7gsAyI1EoG8bzpAkUjK9JYxlT5ZHb5Cyq2JMr2wttuNbB2t2)jT0r3UhmyWGDpyWGb7EWGbduuXbSPG3XazCzqZpAcXGxBAaFWBkeehWLQdynbxoq08uV7bdgmG)tC3qsdtE2JIbKpGzlZUDpyWGb8FI7gsAysC5Ca5dy2YSB3dgmya)N4UHKgMOPhq(aMTm729GbdgW)jUBiPHjV3bKpGzlZUDpyWGb7EWGbd29GbdgOOIdEio)QAERTYb23bmKN29GbdgOFhiT9a(pXDdjnm9qC(v18wBL59YqEQ6Kw6pOjgYbPO)j5Go9JbHuD3dgmyGXYYnd6Kw64OZ5Waxhg46WaTHgtUbKpi7r)yhEpkFT0M9OFustiBB65JD4LzT0X0s)td)zKOVddY5eDdSPb0N(0T7bdgmWyz5MbDslDC0K5Waxhg46WaTHgdzdiFq2J(Xo8Eu(APn7r)OKMq220Zh7WlZAPJPL(Ng(ZirFhgKZz6gytdOp9PB3dgmyGXYYnds2lpAOXmG8bh29GbdgS7bdgmq)oOtAPJJo3aYjFa)N4UHKgMEio)QAERTY8EzipvDsl9h0ed5UhmyWGbdgmizV8OHgZaYhOn0yYT7bdgmimIq)oOtAPJJMSbKt(a(pXDdjnm9qC(v18wBL59YqEQ6Kw6pOjgYDpyWGbdgmyqYE5rdnMbKpqBOXq2UhmyWGqQU7bdgmy3dgmyG(DqYE5rdnMbKt(GSuyqtmKdgOOIdUsQbuAV4c34yT0F3dgmyWGbdgW)jUBiPHPK9YaYhCGPdkq2UhmyWGWic97GK9YJgAmdiN8b5YWHbnXqoyGIkoGH2oZzZhqP9IlCJJ1s)DpyWGbdgmya)N4UHKgMs2ldiFWbMoKbYCE3dgmyqyeXUhmyWGbdgmG)tC3qsdtj7LbKp4athoCihz5ijpEtKPiJN0EGPdhYYPdzAajnizV8OHgdD7EWGbdcP6UhmyWGDpyWGbPO)j5Go9JDhsvSe)JbnHSR)7RoJy5skglk3IIXhOWkOjKTalsNzgvAs8G7dKi7KGGldESy8AMjbdCG0zMrLMep4(ajYoji4sccmEnZKGbyX(fT1ZTFEgyf0eYgRGMq2yLFb30eXI9lARNlrTAGf7x0wpSX6l7K23psifwSFrB9W69lzBTvslD7EWGbdsr)tYbD6h7oKQ7E37E37E37E37E37E3yJnsGmKcRoP99JesHf7x0wpxIA1al2VOTEy1ppdSy)I26HvqtiBbwKoZmQ0K4bxsqGIep8iHS7YW8EiZmalX)yqti76)(QZiwUKIXIYTOy8bkSy)I26H17xY2ARKw629GbdgOOIdYE0dmwwUrZmH6arN0sFXUhmyWa(pXDdjnm9qC(v18wBL59YqEQ6Kw6pG8bzp6h7W7r5RL2CK5Sc5YIUDpyWGb8FI7gsAy6rPGl19ZR)33QtAP)aYhK9ORZWyEu(APnNtKPq(CIUDpyWGb8FI7gsAy6rPGl19ZQtAP)aYhK9ORZWyEu(APnhzzLlR8r3UhmyWa(pXDdjnm5Oq2CJY8w7)JQtAP)aYhK9ORZWyEu(APnxMui3bNPB3dgmya)N4UHKgMQGN0s)hLcUu3pRoPL(diFq2JUodJ5r5RL2C5llNCkt0T7bdgmG)tC3qsdt1p5h59YaEYXYqiQoPL(diFq2JUodJ5r5RL2mLVCz4aDdgmyWUhmyWGu0)KCqN(XUdPkwSFrB9C7NNbwbnHSXkOjKnw5xWnnrSe)JbnHSjDkE1zeRI0KiZzgBS(YoP99JesHn2yJfZyTEiHdmrMcy9mV3xr0ibfZL1bS0Qy5iTuDqf80akEYpAbwx0QnrKGZkGL87rL0((rsGeCclvTGzJVKT10eyXngSYyEVVIOrc5C(awQAXPH)8rwReRhLDKE5Sr2ShzTsr2S6mmg3Iix1EX1rAPArm4jSenN1XcsB1YglsrccuK4bSrczaPWkJ59(kIgvwrfCktor2HmKVmrwUd5ldkKp8vrNvaRN59(kIgjOyofidRxRSv2W9fyLhZPY8JeibwFrqzTMwFIhX6iprkRXMqkKqou5mqwMYNt5ltoDWjNoKLZhCcFvubNqcKHk7C(CYPCz5CwhiZ5SY5KchWxfvWzKGtiHCyJLXYvrkSynCHaPWsOL(Mals)WJKOOWY7BAnsHfPF4rsuu4vSXgRViCnbnHbpIvZnHSrkSeAPVjqc5CclVVP1if2yJ1xeUsUxGhXsCgSifwcT03eibNWY7BAnsHeCcVIn2yL4SbsHL330AKcBSX6lc3MBczJxX6lcxwdxiWRyLSMaPWY7BAnsHn2y9fHR4myXRy9YzBTvIuy59nTgPWgBSoP5S5Mq2ifwEFtRrkSXgRViCzgRmWJyPQFF1SFt)ePWY7BAnsHn2yJvk81wj1ZZal(pXpYtyXzBnnbvs77hjhzvdKWbS6K23psifwIZWyEufRChYkNZKHLK7fcKcjKdlQlArpW(oqzEhyJ1xeUIZWyEufVILK7fyrDrl6b23bkZ7alXzympQkqkKqoKqoYCImfCgBSXQJm24rSigAFInQCwhoKVCzrgz5tbNZLvoNDcFv05mHL87rL0((rsGeYHLM1kDfA1aRmtcLPWsRIfLvzS4QQ6wBLCJBN0((rsGuyJ1fTAtevoFhCkdzkF5YLvguW5dz5Co8vrNvaloBRTsbsHLO5PgPWs166fcb3pWJyPADf2VufpInwVAPwqePWs166BSxWJy5BSxC5ST2kXIOwnWY3yV4(M4EbwyJnwmJ16HeoWezkGnsiFifwSFrB9OIm2yPOIdYFRwDWd8NdOsCwhhPbkQ4GRphqDrlB75afhuTn5L4(HImVCyazhYLb69GZ0lzoT73VKT1wjT0T7bdgmWyz5MbgEhs2NdiFWbMYPKbkQyM5DizFoOTd4SS2VSh8AtdUOBIdyTgBAG4IUzjgIDpyWGbgll3mO1ErIuwJnnG8b0xzLvwzLvwzLPVsgmyWafvCaPSgBAG9DqR9IetdyirDhd0VdizKpWjrW6WaLomg7Lb63bKmYhKDsXasISb0ZadVdj7Zb02e1shpGF0(7bP4nfcIAPpDom4HqDG(DajJ8bzNumGKYrVKnGEgy4DizFoG2qA)(eh0AVyqBh4yP9YGMOwmqlg80(tdsXBkeehCrlvTxOZHbzpfphOFhOugKDsXaskh9s2a6zGH3HK95aAZnWrkpO1So2Hbs7Gl8NdA7Gu8McbXbA5Gw7fdi5m7r7a629GbdgySSCZarZzDmPSgBAWaYhqFLvwzLvwzLvM(kzWGbduuXbKYASPb23bS)ukK9arZzDmtdyirDhd0VdukKpWzhgK9ueYb63bKt(af29GbdgS7bdgmWyz5Mb(SQdiFqoMuGEPnh9WCPURZWyYpUOdAP)PH)ms0No6n3Hd0PKDpyWGbgll3mqCggdbUxmG8bzp66mmMhLVwAj7GcoLVC0PKDpyWGbgll3mW1HbUomW1Hbh)VVKY(LTddCDyWX)7ld(jERTshgC8)(sImEoG8bmxQ7R)3xAP)PH)ms03HbIZWyiW9c6uYUhmyWGDpyWGb63bh)VVKiJNdiN8bsTzqtmK7EWGbdgmyWGu0)KC3dgmyqiv39GbdgS7bdgmWyz5Mbh)VVpeECTumG8bh)VVKiJNduCq2JMs7f0sNs29GbdgS7bdgmy3dgmyG(DWX)7lPSFzpGCYhOWGMyi39GbdgmyWGbIMZ6yszn20aYhqFLv(WbLv(Wb6RKbdgS7bdgmiKQ7EWGbd29GbdgOFhC8)((q4X1sXasg5dCAqtmK7EWGbdgmyWGw7fjszn20aYhqFLvwzLvwzLvM(kz3dgmyqyeH(DWX)77dHhxlfdizKpGwFwvsISb0ZadVdj7t6g0ed5UhmyWGbdgmO1ErIuwJnnG8b0xzLvwzLv(Wb6RKDpyWGbHre63bh)VVpeECTumGKr(aA9zvjPC0lzdONbgEhs2N0nOjgYDpyWGbdgmyqR9IePSgBAa5dOVYkRSYhoC4a9vYUhmyWGWiIDpyWGbdgmyqR9IePSgBAa5dOVYkNHmKHmKHmqFLS7bdgmiKQ7EWGbd29GbdgS7bdgmif9pjhi6Kw6Z0Rn5XBAPF2elZsWSyk3B2ukBMmBILzjywQztj67WGw7fjszn2Kddo(FFFi84APWHbIMZ6yszn2Kddo(FFjL9lB6uYGDhs1DV7DV7DV7DV7DV7DV7DV7DV7DV7DV7DV7DJ1x2jTVFKqkSeNHXqG7fibYYYzNXgloBRPjOsAF)i5iRAGeoGfxQ94T2krkSenp1ifwNPqenwcIjT0XyJ1RwQferkSotHiASoA)s2Gbbl)j2yJvN0((rcPWkfEyDaRViC1sAIKiWJyLcpUwQL(yDal2VOTEUe1QbwT2luX6lc3Vu34vS(IWnfECTul9XRyzViZtAEIxX6ldAczJf)3wSsHhxl1sFx7zK4TnHfjdl1FI3AReRSYkRSYkRSYklScAczJfPSwJQ9ICaPtw)uiedOTodJHoSeNHXqG7fibYYYzNX6lcxXzyme4EbEfRu4L3zK4TnHfjJCSKCVqGuiHCyL)wT6Gh4pXgRViEi8WRyJfXq7tSrcoRawglxfPWI1WfcKclHw6BcSi9dpsIIclVVP1ifwK(HhjrrHxXgBSswtGuy59nTgPWgBS(IW1e0eg8iwn3eYgPWsOL(MajKJmS8(MwJuyJnwFr4k5EbEelXzWIuyj0sFtGeCclVVP1ifsGm8k2yJ1xeUmJvg4rS(IWT5Mq24vS(IWL1Wfc8kwjoBGuy59nTgPWgBSE5ST2krkS8(MwJuyJnwN0C2CtiBKclVVP1if2yJ1xeUIZGfVILQ(9vZ(n9tKclVVP1if2yJ1xeUYGMiHhXgRxRSlnZeibYCglvT40WFwnN1XcSywSyLcFTvs98mWsZALyXvv1T2k5g3oP99JKaPWglwR1OAViXJyXmwRhs4atKPawC2wBLcKclrZtnsHLQ11lecUFGhXs16kSFPkEeBSE1sTGisHLQ113yVGhXY3yV4YzBTvIfrTAGLVXEX9nX9cSWgBS0QyL)wT6Gh4pXkJ59(kIgjKltkG1BI7fvN4nhjOawx0QnrKGZkGL87rL0((rsGeYH1Z8EFfrJeumxwhWs0CwhliTvlBSifjiqrIhWgjKjKcRxRSlnZeibYCglvT40WFsfzSXIzXIf7x0wpQiJnwkQ4GIix1EzadTjvs(G83QvhqkI8KFigWSPbKYAnQ2lYbujoRJJ0afvCW1NdOUOLT9CGIdQ2M8sC)qrMxomGSd5Ya9EWz6LmN397xY2ARCaT0T7bdgmy3dgmyGXYYndyjYt(bPSgBAa5dOVYkRSYkRSYktFLS7bdgmWyz5MbfdZFxwI8KFiCyqXW831JNrsrKN8dHddkgM)UIMNAhgumm)Dv)jERTYbKpi7rxNHXqkI8KFiOLSdk4Kc5Otj7EWGbd29GbdgOFhumm)DzjYt(Hya5KpWPbnXqU7bdgmyWGbdyjYt(bPSgBAa5dOVYkF4GYkF4a9vYUhmyWGWic97GIH5VllrEYpediN8bhg0ed5UhmyWGbdgmGLip5hKYASPbKpG(kRSYkF4WHd0xj7EWGbdcJi0VdkgM)USe5j)qmqPmWPbnXqU7bdgmyWGbdyjYt(bPSgBAa5dOVYkRSYkR8Hd0xj7EWGbdcP6GbdgS7bdgmy3dgmyqk6Fsoq0jT0NPxBYJ30s)SjwMLGzX0Hx67WawI8KFqkRXMCyqXW83LLip5hc6uYUhmyWGDhs1DV7DV7DV7DV7DV7DV7DV7DV7DV7DV7DV7DV7DV7DJ1Z8EFfrJeuKSCzaRu4RTsQNNbwDKXgloBRPjOsAF)i5iRAGeoGfNT1wPaPWs08uJuyPAD9cHG7h4rSuTUc7xQIhXgRxTuliIuyPAD9n2l4rS8n2lUC2wBLyruRgy5BSxCFtCValSXgRVStAF)iHuyjiAVKNelbr7fgnx4pfyjodJHa3lqcKDqbNuih2yLX8EFfrJeiZzfWsRIvXW8FGIdifrEYpey9M4Er1jEZrckG1fTAtevwbNCothilFK5CUmPq(oqMZ4RIoNjS4QQ6wBLCJBN0((rsGuyJL87rL0((rsGeYHfXq7tSrLZq(uqbNZrwMYazzISmPGZoJVk6CMWYy5QifwFr4kdAIeEelwdxiqkSeAPVjWI0p8ijkkSX6lc3MBczJxX6lcxwdxiWRy9fHlZyLbEeRViCfNblEfRViCnbnHbpIvZnHSrkSeAPVjqcoHL330AKcBSXsCgSifwcT03eibNWgRViCLCVapIvYAcKclVVP1if2yJ1lNT1wjsHL330AKcBSXsv)(Qz)M(jsHL330AKcBSX6lcxwR3rEJxXkXzdKclVVP1if2yJ1jnNn3eYgPWY7BAnsHn2yJvN0((rcPW6lcxwI8KFiWJyjodJHa3lqcKDqbNuihw9ZZalrZ7VaRViCfeTxYtIxXI9lARNlrTAGvR9cvScAczJfPSwJQ9ICaPtw)uiedOTodJHoS(IW9l1nEfRuWn1zyme4EbwfrUQ9YagAtQK8b5VvRI1xeUIZWyiW9c8kwFzqtiBS4)2ILGO9sEsSeeTxy0CH)uGn2iHSqkS(YoP99JesHLGO9sEsSeeTxYt(qWvFIL4mmgcCVajq2bfCsHCyJfNT10eujTVFKCKvnqchWIl1E8wBLifwIMNAKcRZuiIglbXKw6ySXYJRLifwcwUju(lzXAWGbdsr)tYbVFjBRTsAptw)uieomq08uNTomq08uR0omqWYnr26Wabl3eknD7EWGbdgmWyz5MbCPVjgq(aAptw)uiediPbKnGKg4XBImDQPBGIdO1J3ez6upGEhqgD7EWGbdgmif9pjhiAEQZ2b0ZaAPLwpEtKjHwslx6Bc6gqpdYrh9sgDdiPb0ky5MiBhO4GC0rNddenp1k9a6zaT0sRhVjYKqlPLl9nbDdONb5OJEjJUbK0aAfSCtO0duCqo6OB3dgmyqiv39GbyXnNe5uppdS4MtICs)nIalwRXMyejKdlwRXMYosihwCZjrUYFjlwdgmyqk6Fso49lzBTvs7zY6NcHWHbIMNAhgOgMMt3UhmyWGbdmwwUzax6BIbKpG2ZK1pfcXasAazdiPbE8MitNA6gO4aA94nrMo1dO3bKr3UhmyWGbdsr)tYbIMN6b0ZaAPLwpEtKjHwslx6Bc6gqpdYrh9sgDdiPbQHP50T7bdgmiKQ7EWaS(IWTtCPWW7aVI1xeUCZjroEflbl3euppdSo)grGL6pXBTvIft5tbS6exkm8ou(lzXAWGbdsr)tYbVFjBRTsAptw)uieomq08uNTomq08uR0omqnmnpBDyGAyAUst3UhmyWGbdmwwUzWr7xYgmqlAUKngq(apEtKjHws7zY6NcHyajnWJ3ez6ut3UhmyWGbdsr)tYbIMN6SDa9mG2J2VKnyGw0CjBmGKgOgMMNT05WarZtTspGEgq7r7xYgmqlAUKngqsdudtZvA629Gbdges1DpyawcwUjEIeYXKcyXnNe5iHdm5ewSwJnDfjKdRNibYuaRmIeoGvN4sHH3b1ZZaRJ2VKnWsWYnrgrc5ysbSyTgB6bKqoSs2M3bs4awFr4ky5MaVInwVAPwqePW6mfIOX6O9lzdgeS8NyJnwDs77hjKcRu4HLcm5mw2lY8KMN4vS(IW9l1nEfRu4X1sT0hlYysbSsHhxl1sFx7zK4TnHfjdl144)9L65zGv(X4doszMNzSeNHXqG7fibYoOGtkKdlbr7L8KyjiAVKN8HGR(eRViCtHhxl1sF8iw9ZZalrZ7VaRVmOjKnw8FBX6lcxbr7L8K4vSu)jERTsSYkRSYkRSYkRSWkOjKnwKYAnQ2lYbKoz9tHqmG26mmg6WsY9cbsHeYHvrKRAVmGH2KkjFaP5Aj2yLcUPodJHa3lWQiYvTxgWqBsLKpi)TAvS(IWvCggdbUxGxXkfE5DgjEBtyrYW6l1nwnp5hnwSFrB9CjQvdSATxOI1xepeE4vSXIyO9j2ibNvalJLRIuy9fHRmOjs4rSynCHaPWsOL(Mals)WJKOOWY7BAnsHfPF4rsuu4vSXgRViCBUjKnEfRViCznCHaVIvYAcKclVVP1if2yJ1xeUIZGfVI1xeUMGMWGhXQ5Mq2ifwcT03eibNWY7BAnsHeYDaVIeYrgEfBSXsCgSifwcT03eibNWY7BAnsHeidVIeCcVIn2y9fHRK7f4rSsC2aPWY7BAnsHn2yDsZzZnHSrkS8(MwJuyJnwQ63xn730prkS8(MwJuyJnwFr4YA9oYB8kwVC2wBLifwEFtRrkSXgRViCzgRmWJyJ1Rv2LMzcKazoJLQwCA4pRMZ6ybwdWkf(ARK65zGLM1kXI1AnQ2ls8kwC2wBLcKclrZtnsHLQ11lecUFGhXs16kSFPkEeBSE1sTGisHLQ113yVGhXY3yV4YzBTvIfrTAGLVXEX9nX9cSWgBSygR1djCGjYualTkwfdZ)CyDrR2ercoRawQAbZgFjBRPjWIBmyj)EujTVFKeiHCyLX8EFfrJeiZPdy9mV3xr0ibfZL1bS4QQ6wBLCJBN0((rsGuyJLO5SowqARw2yDnpkQ8CewDKXMuwJnHuiHCiHdibNqchyImSXgjK7asHf7x0wpQiJnw7E3y9mV3xr0ibfZL1bS4STMMGkP99JKJSQbs4awCP2J3ARePWs08uJuyDMcr0yjiM0shJnwECTePW6mfIOX61OpXgRxTuliIuyDMcr0yD0(LSbdcw(tSXgRoP99JesHvk8WsbMCgl7fzEsZt8kwPWJRLAPpwzal1FI3AReRSYkRSYkRSYklSy)I265suRgy1AVqflXzyme4EbsGSdk4Kc5Wsq0EjpjwcI2l5jjL1AuTxKy9fHBk84APw6JxXsno(FFPEEgyLFm(GJuM5zgRVmOjKnw8FBX6lcxbr7L8K4vS6NNbwIM3FbwbnHSXIuwRr1EroG0jRFkeIb0wNHXqhwPWJRLAPVR9ms82MWIKHvk4M6mmgcCVaRIix1EzadTjvs(G83QvX6lcxXzyme4EbEfRViC)sDJxXkfE5DgjEBtyPuihlj3leifsihwfrUQ9YagAtQK8bmi4nrSX6lIhcp8k2yrm0(eBKGZkGLXYvrkS(IWvg0ej8iwSgUqGuyj0sFtGfPF4rsuuy59nTgPWI0p8ijkk8k2yJ1xeUn3eYgVI1xeUSgUqGxXkznbsHL330AKcBSX6lcxXzWIxX6lcxtqtyWJy1CtiBKclHw6BcKGty59nTgPWgBSeNblsHLql9nbsWjS8(MwJuibYWRibNWRyJnwFr4k5EbEeReNnqkS8(MwJuyJnwN0C2CtiBKclVVP1if2yJLQ(9vZ(n9tKclVVP1if2yJ1xeUSwVJ8gVI1lNT1wjsHL330AKcBSX6lcxMXkd8i2y9ALDPzMajKltyPQfNg(ZQ5SowGfZ6eRu4RTsQNNbwAwRelUQQU1wj342jTVFKeif2yjAoRJfK2QLnwu5rASygR1djCGjYualoBRTsbsHLO5PgPWs166fcb3pWJyPADf2VufpInwVAPwqePWs166BSxWJy5BSxC5ST2kXIOwnWY3yV4(M4EbwyJnwAvSkgM)KH1x2jTVFKqkSeNHXqG7fibYoOGtkKdBSUOvBIibNvaRmM37RiAKazoDal53JkP99JKajKdlwR1OAViXRy1rgBszn2esHeYHkNjfYrwgYugCsbNDothY3Hd4RIk4esGmu5m5u(Y5uwzilfC25dzWjNYHVkQGtyJnsixoKcRN59(kIgjOyUSoGfNT10eujTVFKCKvnqchWIl1E8wBLifwIMNAKcRZuiIglbXKw6ySXYJRLifwNPqenwVg9j2y9QLAbrKcRZuiIgRJ2VKnyqWYFIn2y1jTVFKqkSsHhwkWKZyP(t8wBLyLvwzLvwzLvwzHvk84APw6JvgWkfECTul9DTNrI32ewkfYXsno(FFPEEgyLFm(GJuM5zglXzyme4EbsGSdk4Kc5Wsq0EjpjwcI2l5jjL1AuTxKy1ppdSenV)cSy)I265suRgy1AVqfRVmOjKnw8FBX6lcxbr7L8K4vS(IWnfECTul9XRyf0eYglszTgv7f5asNS(PqigqBDggdDyzViZtAEIxXkfCtDggdbUxGvrKRAVmGH2KkjFq(B1Qy9fHR4mmgcCVaVILK7fcKcjKdRIix1EzadTjvs(age8Mi2yLcV8oJeVTjSukKJ1xeUFPUXRy9fXdHhEfBSigAFInsWzfWYy5QifwFr4kdAIeEelwdxiqkSeAPVjWI0p8ijkkS8(MwJuyr6hEKeffEfBSX6lc3MBczJxX6lcxwdxiWRyL4SbsHL330AKcBSX6lcxXzWIxX6lcxtqtyWJy1CtiBKclHw6BcKGty59nTgPWgBSeNblsHLql9nbsWjS8(MwJuibYWRibNWRyJnwFr4k5EbEeRK1eifwEFtRrkSXgRtAoBUjKnsHL330AKcBSXsv)(Qz)M(jsHL330AKcBSX6lcxwR3rEJxX6LZ2ARePWY7BAnsHn2y9fHlZyLbEeBSETYU0mtGeiZzSu1Itd)z1CwhlWIzDIvk81wj1ZZalnRvIvgZ79vensGmNoGfR1AuTxK4vSygR1djCGjYualUQQU1wj342jTVFKeif2yPvXQyy(7ewC2wBLcKclrZtnsHLQ11lecUFGhXs16kSFPkEeBSE1sTGisHLQ113yVGhXY3yV4YzBTvIfrTAGLVXEX9nX9cSWgBSUOvBIibNval53JkP99JKajKdRVStAF)iHuyjodJHa3lqcKDqbNuih2yjAoRJfK2QLnwu5rAS6iJnPSgBcPqcKHeoGeCcvoFo5C(o4CMY0bNYugYxUSYcFvuHmGn2iHCKHuyPQfNg(tQiJnwy9mV3xr0OYkMpNYLjNuGSmKtH8DGmfYPa(QOZkGvk81wj1ZZaRoYyJfNT10eujTVFKCKvnqchWIZ2ARuGuyjAEQrkSuTUEHqW9d8iwQwxH9lvXJyJ1RwQferkSuTU(g7f8iw(g7fxoBRTsSiQvdS8n2lUVjUxGf2yJvN0((rcPWQFEgyX(fT1dRVmOjKnw8FBXI9lARNlrTAGvR9cvSy)I2652ppdSenV)cScAczJfPiY7bokecUFGvqtiBbwKkphDLrk3mNx2Djr(tccuUmNGYpMzks8ajyWasNzgvAs8G7dKi7KGGljiW41mtcgGf7x0wpSuuXbm(fNAwT9lguN6KUfdO3bfrUQ9YZbmEEYt6wBLdOsCwhhPbkQ4GRphqDrlB75afh8OXOv5sfzE5WaYoKld07H8rVKDy3VFjBRTsAdAcz7qR9ch6NNHdUoiS)eBKDM)idCqy)j2qY9chCDW1b1q0zN5pYahudrl5EHdUo46G4mmgTQdIZWyKCVWbxhCDW1bxhCDW1bxheNHXWM0TMLBCW1bxhCDqCggJ330ArN0ooOB3dgmyGXYYndi1pLcztP9IbKpi7rtP9cAPtj7EWGbd29GbdgWqgDlgDjWCh5YCcpsvdiFadz0Ty0LaZDKlZj8ivnWMgCqj7EWGbdyiJUfJUu5rXyMhq(agYOBXOlvEumM5b20Gdkz3dgmyWUhmyWafvCq18wm44)9ns7EWGbdyiJUfJUffJu1aYhWqgDlgDlkgPQb20aMTm7uYUhmyWGDpyWGbmKr3IrxgqcgzWaYhWqgDlgDzajyKbdSPbmBz2PKDpyWGb7EWGbdyiJUzMXIYLu5rG6rcm)rkL2Lu5hjiv28bKpGHm6MzglkxsLhbQhjW8hPuAxsLFKGuzZhytdYE0uAVGw6uYUhmyWGDpyWGbmKr3IrxszcU8FoG8bmKr3IrxszcU8FoWMg8(LST2kP1)RvPB3dgmyWGbdgOFhWqgDlgDlkgPkLQ)xRMng0ed5UhmyWGbdgmyWGbdyiJUfJUu5rXyMhq(agYOBXOlvEumM5bkoGHm6wm6wumsvkv)VwnBWePSFzRKDpyWGbdgmyWGbdgS7bdgmyWGbdgmyWa97agYOBXOlvEumM5bkLbhg0ed5UhmyWGbdgmyWGbdgmyWagYOBXOlvEumM5bKp4Gs29GbdgmyWGbdgmyqiv39GbdgmyWGbdgmyWUhmyWGbdgmyWGbdyiJUfJUffJuLs1)RvZgmrk7x2diFGuBuYUhmyWGbdgmyWGbdyiJUfJUffJuLs1)RvZgmLzUOz(PkVJbKpqQnkz3dgmyWGbdgmyWGbmKr3Ir3IIrQsP6)1QzJbKpqQnkz3dgmyWGbdgmyWGb7EWGbdgmyWGbdgmGHm6wm6sG5oYL5eEKQgq(agYOBXOlbM7ixMt4rQAGIdYPKDpyWGbdgmyWGbdgS7bdgmyWGbdgmyWa97agYOBXOlbM7ixMt4rQAGszWHbnXqU7bdgmyWGbdgmyWGbdgmGHm6wm6sG5oYL5eEKQgq(Gdkz3dgmyWGbdgmyWGbHuD3dgmyWGbdges1DpyWGbHuDWGbd29GbdgS7bdgmq)oiOjK9aYjFa9jvEo6kJuUzoVS7sI8NeeOCzobLFmZuK4bsWa6pGlvhiS)eBKDM)idgqo5dyUu3zN5pYaAP)PH)ms0NUbnXqU7bdgmyWGbd0VdeNHXOvhqo5dY5C(YLLtd4s1b9ZZya5KpG(fPjrMZSlPySOClMtksrIQO)GMyihOOIdkICv7LNdy88KN0T2khuN8lYqD3dgmyWGbdgmyWGb63bsBpGHm6wm6wumsvkv1q0zN5pYGSXaBAadz0Ty0TOyKQuQQHOZoZFKbzJbKt(aP2mOjgYDpyWGbdgmyWGbdgmyWGbmKr3Ir3IIrQsPQgIo7m)rgKngq(aMTm7uYUhmyWGbdgmyWGbdgmyWagYOBXOBrXivPuvdrNDM)idYgmrk7x2diFWbLS7bdgmyWGbdgmyWGbdgmGHm6wm6sG5oYL5eEKQgq(agYOBXOlbM7ixMt4rQAa9miNs29GbdgmyWGbdgmyqiv39GbdgmyWGbdgmyWUhmyWGbdgmyWGbdyiJUfJUu5rXyMhq(agYOBXOlvEumM5b0ZGCkz3dgmyWGbdgmyWGbmKr3Ir3IIrQsPQgIo7m)rgKnyIu2VShq(agYOBXOBrXivPuvdrNDM)idYgmrk7x2dONb5uYUhmyWGbdgmyWGbdyiJUfJUffJuLsvneD2z(JmiBWuM5IM5NQ8ogq(as9tPq2uAVqj7EWGbdgmyWGWic97aXzymA1bKt(GCoNPmPqwd4s1b9ZZya5KpG(fPjrMZSldy0rmMDsq)bnXqoqrfz8lo1SA7xmOo1jDpi)09UhmyWGbdgmyWGbdyiJUfJUu5rXyMhq(agYOBXOlvEumM5bkoiNs29GbdgmyWGbdgmyG(Dadz0Ty0TOyKQuQQHOZoZFKbzJbCP6agYOBXOBrXivPuvdrNDM)idYgmrk7x2dizdomOjgYbdgS7bdgmyWGbdgmyWGbdgmGHm6wm6wumsvkv1q0zN5pYGSbtKY(L9aYhWqgDlgDlkgPkLQAi6SZ8hzq2Gjsz)YEGIdYPKDpyWGbdgmyWGbdgmyWGbmKr3Ir3IIrQsPQgIo7m)rgKnykZCrZ8tvEhdiFaP(PuiBkTxOKDpyWGbdgmyWGbdgmyWGb7EWGbdgmyWGbdgmyWGbd0VdyiJUfJUffJuLsvneD2z(JmiBWePSFzpqPq(GddAIHC3dgmyWGbdgmyWGbdgmyWGbdgWqgDlgDjLj4Y)jTQHOZoZFKb0PKDpyWGbdgmyWGbdgmyWGbHuD3dgmyWGbdgmyWGbHuD3dgmyWGbdges1DpyWGbHuD3dgmyWUhmyWa97agYOBXOlvEumM5bkLbhg0ed5UhmyWGbdgmGHm6wm6sLhfJzEa5doOKDpyWGbHuD3dgmyWUhmyWGxBAG)xR6aR9l7bA5GtUojOLHm6wm6wumsv0nq1U7bdgmyWGbd0VdOLu)ukKnL2lgO4agYOBXOBrXivPu9)A1SbtzMlAMFQY7GUbKSb5omOjgYDpyWGbdgmyWGbdgOOIp(o4smGiNMqYSxpGixDaFGmUmOyCG4KFroqlhK7GiyDyqtK3d8cUumGBmdkgfdAI8EapfdS)EaronXaI6Eqtmg08KF0dO9l(CJ5jDomWMCyqtmg08KF0du1c(5zWtHkt7EWGbdgmyWGbdgmGHm6wm6sktWL)tA9)Av6uYUhmyWGbdgmiKQ7EWGbdcP6UhmyWGDpyWGb7EWGbd0VdcAczpGCYhqFsLNJUYiLBMZl7UKi)jbbkxMtq5hZmfjEGemG(d4s1b02ppJbKt(a6ZCcps5YGhjbdO)aBAq)8mgqo5dOpZj8iLldirr9qEknjya9hytd6NNXaYjFa9lstImNz3hjuumMn)XmNz6t3GMyihOOIdyUu3dyGouDyqk8S0edAIH3G3K1Bqtmg08KF0dmArZ0UhmyWGbdgmGHm6wm6sktWL)tAvdrNDM)idOtj7EWGbdcP6UhmyWGDpyWGb63bmxQ7hfmi4Q5LYorROPL(Ng(ZirF6gytdK2EaZL6MX33GT1sFsz9oYBAP)PH)ms0NUb20GGMq2diN8b0N0zMrLMep4(ajYoji4sccmEnZKGb0FqtmKduuXbmmgOQdvhgytomiYOUd1bSwVJ82Hb(2bCIbxDaxQo48N8JbnXyGrl6DpyWGbdgmyWRnnW)RvDG1(L9aTCWjxNe0YqgDlgDlkgPk6gOAhS7bdgmyWGbdgmyWagYOBXOlPmbx(pP1)RvPtj7EWGbdgmyWGqQU7bdgmyWGbd29GbdgmyWGbmKr3Ir3IIrQAa5dy2YStj7EWGbdgmyWagYOBXOlbM7ixMt4rQAa5doOKDpyWGbdgmyadz0Ty0LkpkgZ8aYhCqj7EWGbdcP6UhmyWGDpyWGb63bK6NsHSP0EXafhWqgDZmJfLlPYJa1Jey(JukTlPYpsqQS5dizdYDyqtmKduurLTj2yalXG1XdSVd(sDpG1(L9GGMi9CqUdIGD3dgmyWGbdgySSCZazCH5sDlgq(Gdkz3dgmyWGbdg8Atd8)AvhyTFzpqlhCY1jbTmKr3Ir3IIrQIUbQ2DpyWGbdgmyWGbdgiJlmxQBXaYhiJlmxQBXa6zqoLS7bdgmyWGbdcP6UhmyWGbdgmGHm6wm6sG5oYL5eEKQgq(azCH5sDluYUhmyWGbdgmGHm6MzglkxsLhbQhjW8hPuAxsLFKGuzZhq(as9tPq2uAVqj7EWGbdcP6UhmyWGDpyWGb63bmKr3Irxcm3rUmNWJu1as2GddAIHCWUhmyWGbdgmWyz5MbTT5MIrXaYhCqj7EWGbdgmyWGDpyWGbdgmyWRnnW)RvDG1(L9aTCWjxNe0YqgDlgDlkgPk6gOA39GbdgmyWGbdgmyG(Dadz0Ty0TOyKQuQ(FTA2Gjsz)YEGsH8bhgytdOL5sD)OGbbxnVu2jAfnT(FTkD0nOjgYDpyWGbdgmyWGbdgmyWGbmKr3IrxgqcgzGs1)RvZgdiFqN(Hs29GbdgmyWGbdgmyqyeXUhmyWGbdgmyWGbdgmyWG22CtXOya5dABZnfJIb0ZagYOBXOBrXivPu9)A1SbtKY(LTs29GbdgmyWGbdgmyqiv39GbdgmyWGbHuD3dgmyWGbdgS7bdgmyWGbd0VdABZnfJIbKSbhgWLQdyiJUfJUu5rXyMhqYgCyqtmK7EWGbdgmyWGbdgmif9pjh0PFOKDpyWGbdgmyqiv39Gbdges1DpyWGb7EWGbdsr)tYbVCJiuYUdPkwSedwhJvqtiBSXIRQQBTvYnUDs77hjbsHnwx0QnruzNv4GtzWjNCwHdK5u(YsbYWxfvGmSKFpQK23pscKqoSigAFInQSZkCWPm4KtoRWbYCkFzPaz4RIkqgwzmV3xr0ibYY6awglxfPWsCgSifwcT03eibNWglv97RM9B6NifwEFtRrkSXgRViCnbnHbpIvZnHSrkSeAPVjqc5CglVVP1if2yJ1xeUsUxGhXI1WfcKclHw6BcSi9dpsIIcBS(IWLzSYapI1xeUn3eYgVI1xeUSgUqGxXkznbsHL330AKcBSX6LZ2ARePWY7BAnsHn2y9fHR4myXRyDsZzZnHSrkS8(MwJuyJnwjoBGuy59nTgPWgBS(IWvg0ej8i2yPvXIXAavs77hjSrc5CcPWI9lARhvKXglfvCaJFXPMvB)Ib1PoPBXa6DqrKRAV8CaJNN8KU1w5aQeN1XrAGIko46Zbux0Y2EoqXbpAmAvUurMxomGSd5Ya9EiF0lzKT73VKT1wjT0T7bdgmWyz5MbmKr3hibfZFGWaYhOyoLS7bdgmWyz5MbTT5MIrXaYhCqjdgmyWUhmyWaJLLBgKzUOP0EXaYhK9OP0EbT0PKDpyWGbgll3mGu)ukKnL2lgq(GShnL2lOLoLS7bdgmWyz5MbSwJnnG8b0xzLvwzLvwzLPVs29GbdgySSCZaTuWL6(jPSgBAa5dOVYkRSYkRSYktFLS7bdgmWyz5MbS)ukK9JsbxQ7NdiFaZL6M02lrIw6FA4pJe9DyqrAsK5m7s68yijEWTYpgzqEm0nVhUwom41MydMFQY7GoLS7bdgmWyz5MbIZGn7j7)Ca5dYE0mY2AAI6myZEY(pPLoLS7bdgmWyz5MbArMTD(xHjy7qDa5deHjyBAD2HbzpAkUjK9JYxlT5ZHb5CyG4myZEY(pPJoLS7bdgmWyz5MbK(rcCVya5deHjyBAjZHbzpAkUjK9JYxlTzWHb5CyG4myZEY(pPJoLS7bdgmWyz5MbAbPFKr2wttmG8bIWeSnT5Y5WaMl191)7lT0)0WFgj67Was)ibUxqhDkz3dgmyGXYYndkYCebUxmG8bIWeSnTK5WGShnf3eY(r5RL285WaNCyG4myZEY(pPJoLS7bdgmWyz5MbArrMJyKT10ediFGimbBtBUComG5sDF9)(sl9pn8NrI(omOiZre4EbD0PKDpyWGbgll3mW1HbUomW1Hb08sk7x2omW1Hb08YGFI3AR0HbUomW1HbUomW1Hb08wNHX8O6aYhWCPUV(FFPL(Ng(ZirFhOF(B1QV2Kh9Ptj7EWGbdmwwUzaPF01rw1bKpiNs29GbdgySSCZGImh56iR6aYhKtj7EWGbdmwwUzqXO7JsbxQ7NdiFGZkz3dgmyWUhmyWaJLLBgWqgDFGeum)bcUf1dpsi7kz3dgmyadz0Ty0LaZDKlZj8ivnG8bmKr3Irxcm3rUmNWJu1aBAWbLS7bdgmy3dgmyG(Dadz0Ty0LaZDKlZj8ivnGKn4WGMyi39GbdgmyWGbV20a)Vw1bw7x2d0YbNCDsqldz0Ty0TOyKQOBGQD3dgmyWGbdgmyWGbTT5MIrXaYh02MBkgfdONbmKr3Ir3IIrQsP6)1QzdMiL9lBLS7bdgmyWGbdgmyWGmZfnL2lgq(agYOBXOBrXivPu9)A1SbtzMlAMFQY7qj7EWGbdgmyWGqQU7bdgmyWGbd29GbdgmyWGb63bTT5MIrXas2agYOBXOlvEumM5bnXqU7bdgmyWGbdgmyWagYO7dKGI5pqya5dyiJUfJUu5rXyMhytdoOKDpyWGbdgmyqyeXUhmyWGbdgmyWGbdyiJUpqckM)aHbKpOTn3umkgytdoOKDpyWGbdgmyqiv39GbdgegrS7bdgmyWGbdyiJUpqckM)aHbKpqrYuYUhmyWGqQU7bdgmy3dgmyG(Dadz09bsqX8himqPq(GddAIHC3dgmyWGbdgKI(NKdO)b6RKDpyWGbHuD3dgmyWUhmyWa97aTG0pYiBRPjg0ed5UhmyWGbdgmG0p66iR6aYhKJjYuqj7EWGbdcP6UhmyWGDpyWGb63bArrMJyKT10edAIHC3dgmyWGbdguK5ixhzvhq(aNuYUhmyWGqQU7bdgmy3dgmyGXYYndABZnpkfCPUFoG8bmKr3hibfZFGajvm6(OuWL6(jjr6hDDKvLKkYCKRJSQkz3dgmyWUhmyWa97aPThqlnV1zympQoGCYhi1g6g0ed5afv8r5G83QvFTjphgOALm71dy5Pya)O93dS0ePxJ9ctdYEkc5aJ2NyZS5DpyWGbdgmyGwk4sD)KuwJnnG8b0xzLpCqzLpCG(kz3dgmyqyeH(DaTS)ukK9JsbxQ7NdONbTT5MhLcUu3pPBajJ8b5oCyqtmKduuX8JNuhyPjsVg7Lb23bpkfCPUFY0Ghc1bgTpXMzZ7EWGbdgmyWaTuWL6(jPSgBAa5dOVYkRSYhoC4a9vYUhmyWGWic97aA1ImB78VctW2H6aUuDa7pLcz)OuWL6(5asg5dY3b6gmOjgYbkQidJbSC5aoBRPjgK)wT6Rn5n44VhWtHKzVEGLMi9ASx0s)bpJMPbkDym2ldmAFInZM39GbdgmyWGbAPGl19tszn20aYhqFLvwzLvw5dhOVs29GbdgegrS7bdgmyWGbd0sbxQ7NKYASPbKpG(kRSYkRSYkRm9vYUhmyWGqQU7bdgmy3dgmyadz09bsqX8hi4wup8iHSpG8bIoPL(m9AtE8Mw6NnXYSemlr2ukBMmBILzjOhMLA2uI(omG1ASjhgWqgDFGeum)bcomqlfCPUFskRXMCyqBBU5rPGl19t6uYUhmyWGu0)KCadz09bsqX8hi4wup8iHSRKDhs1DV7DV7DV7DV7DV7DV7DV7DV7DV7DV7DV7DV7DV7DV7DVBSEM37RiAKGI5Y6awC2wttqL0((rYrw1ajCaloBRTsbsHLO5PgPWs166fcb3pWJyPADf2VufpInwVAPwqePWs166BSxWJy5BSxC5ST2kXIOwnWY3yV4(M4EbwyJnwDs77hjKcR(5zGf7x0wpSy)I265suRgyX(fT1dl2VOTEU9ZZalrZ7Val2VOTEvZzDSaRDVBSu)jERTsSuaRGMq2cSivEo6kJuUzoVS7sI8NeeOCzobLFmZuK4bsWGbKoZmQ0K4b3hir2jbbxsqGXRzMemyaPZmJknjEW9bsKDsqWLbpwmEnZKGbyX(fT1dlfvCaJFXPMvB)Ib1PoPBXa6DqrKRAV8CaJNN8KU1w5aQeN1XrAGIko46Zbux0Y2EoqXbpAmAvUurMxomGSd5Ya9EiF0lzKT73VKT1wjT0T7bdgmWyz5MbTT5MIrXaYhCqj7EWGbd29GbdgOFhiT9agYOBXOBrXivnWMgWqgDlgDlkgPQbKt(aP2mOjgYDpyWGbdgmyqk6Fso4LBeHs29GbdgegrS7bdgmyWGbd0VdyiJUfJUeyUJCzoHhPQbKSbhg0ed5UhmyWGbdgmyWGbdETPb(FTQdS2VShOLdo56KGwgYOBXOBrXivr3av7UhmyWGbdgmyWGbdgmyWG22CtXOya5dABZnfJIb0ZagYOBXOBrXivPu9)A1SbtKY(LTs29GbdgmyWGbdgmyqiv39GbdgmyWGbHre7EWGbdgmyWGbdgmif9pjh8YnIqj7EWGbdgmyWGqQU7bdgmiKQ7EWGbd29GbdgOFhWqgDlgDjWCh5YCcpsvdukKp4WaBAqBBUPyumqPq(GddSPbmKr3IrxQ8OymZdukKp4WGMyi39GbdgmyWGbPO)j5GxUrekz3dgmyqiv39GbdgS7bdgmif9pjh0PFOKDhsvSyjgSogR)PkVdSXIyO9j2ibNvalJLRIuyjodwKclHw6BcKGtyJvYAcKclVVP1if2yJ1xeUYGMiHhXQ5Mq2ifwcT03eiHCoJL330AKcBSX6lcxj3lWJyXA4cbsHLql9nbwK(HhjrrHnwFr4YmwzGhX6lc3MBczJxXsv)(Qz)M(jsHL330AKcBSXkXzdKclVVP1if2yJ1lNT1wjsHL330AKcBSX6lcxXzWIxX6KMZMBczJuy59nTgPWgBS(IWL1Wfc8kwFr4AcAcdEeBSETYU0mtGeiZzSu1Itd)z1CwhlWIzXIvk81wj1ZZalnRvIfZyTEiHdmrMcyXvv1T2k5g3oP99JKaPWglTkwfJIbKY(Lnwx0QnrKGZkGvgZ79vensGS8PawYVhvs77hjbsihwFzN0((rcPWI9lARhwkQ4ag)ItnR2(fdQtDs3Ib07GIix1E55agpp5jDRTYbujoRJJ0afvCW1NdOUOLT9CGIdE0y0QCPImVCyazhYLb69q(OxYiB3VFjBRTsAPB3dgmyGXYYndyiJUpqckM)abLS7bdgmy3dgmyGXYYndABZnfJIbKp4GsgmyWGDpyWGbgll3miZCrtP9IbKpi7rtP9cAPtj7EWGbdmwwUzaP(PuiBkTxmG8bzpAkTxqlDkz3dgmyWUhmyWa97agYOBXOBrXivnGCYhi1MbnXqU7bdgmyWGbdyiJUpqckM)aHbKpqXCkz3dgmyqyeXUhmyWGbdgmq)oGHm6wm6sG5oYL5eEKQgqYgCyqtmK7EWGbdgmyWGbdgm41Mg4)1QoWA)YEGwo4KRtcAziJUfJUffJufDduT7EWGbdgmyWGbdgmyWGbdABZnfJIbKpOTn3umkgqpdyiJUfJUffJuLs1)RvZgmrk7x2kz3dgmyWGbdgmyWGbdgmyqM5IMs7fdiFadz0Ty0TOyKQuQ(FTA2GPmZfnZpv5DOKDpyWGbdgmyWGbdges1DpyWGbdgmyWGbdgS7bdgmyWGbdgmyWa97G22CtXOyajBadz0Ty0LkpkgZ8GMyi39GbdgmyWGbdgmyWGbdgWqgDFGeum)bcdiFadz0Ty0LkpkgZ8aBAWbLS7bdgmyWGbdgmyWGWiIDpyWGbdgmyWGbdgmyWGbmKr3hibfZFGWaYh02MBkgfdSPbhuYUhmyWGbdgmyWGbdcP6GbdgmyWGbdgmyWUhmyWGbdgmimIy3dgmyWGbdgmyWGbmKr3hibfZFGWaYhOizkz3dgmyWGbdges1DpyWGbHuD3dgmyWUhmyWa97agYO7dKGI5pqyGsH8bhg0ed5UhmyWGbdgmif9pjh0PFOKDpyWGbHuD3dgmyWUhmyWGu0)KCWl3icLS7qQInwQAXPH)8rwReRhjqrIhuMrsrISzpsQ8iuzZ4h1gD)09mPdr7kiYvTxEYpp5jDRTsSenN1XcsB1YglsrccuK4bSrc5CgPW6zEVVIOrLvmFziFhYLvMCotoFiFoRWHSWxfDwbS4STMMGkP99JKJSQbs4awC2wBLcKclrZtnsHLQ11lecUFGhXs16kSFPkEeBSE1sTGisHLQ113yVGhXY3yV4YzBTvIfrTAGLVXEX9nX9cSWgBS6K23psifwsUxiqkKqoSYFRw91M8WgBSigAFInsWzfWYy5QifwFr4AcAcdEeRMBczJuy59nTgPWgBSynCHaPWsOL(Mals)WJKOOWglXzWIuyj0sFtGeCcBSu1VVA2VPFIuy59nTgPWgBSsC2aPWY7BAnsHn2y9fHlRHle4vSswtGuy59nTgPWgBS(IWvCgS4vSE5ST2krkS8(MwJuyJnwN0C2CtiBKclVVP1if2yJ1xeUsUxGhX6lcxMXkd8i2yLcFTvs98mWsZALyXmwRhs4atKPawzmV3xr0OYkQqgYezKLV8Lldz4qMYuUmLj8vrNDglUQQU1wj342jTVFKeif2yDrR2ercoRawYVhvs77hjbsihwAvSYFRw91M8giAoRJfyJeYPasHfNT10eujTVFKCKvnqchWQtAF)iHuyj5EHaPqc5WkZAPFK0s)bpkfCPUFIn2yrm0(eBKGZkGLXYvrkS(IW1e0eg8iwn3eYgPWY7BAnsHn2yXA4cbsHLql9nbwK(HhjrrHnwIZGfPWsOL(Maj4e2yPQFF1SFt)ePWY7BAnsHn2yL4SbsHL330AKcBSX6lcxwdxiWRyLSMaPWY7BAnsHn2y9fHR4myXRy9YzBTvIuy59nTgPWgBSoP5S5Mq2ifwEFtRrkSXgRViCLCVapI1xeUmJvg4rSXkf(ARK65zGLM1kXsRIvM1s)iPL(dEuk4sD)elwR1OAViXRyXmwRhs4atKPawC2wBLcKclrZtnsHLQ11lecUFGhXs16kSFPkEeBSE1sTGisHLQ113yVGhXY3yV4YzBTvIfrTAGLVXEX9nX9cSWgBS4QQ6wBLCJBN0((rsGuyJ1Z8EFfrJeuKSCzH1fTAtej4Scyj)EujTVFKeiHCyLX8EFfrJeuKS8LjSrc5YasH1x2jTVFKqkSeNHXqG7fiHmDilYWgloBRPjOsAF)i5iRAGeoGfxQ94T2krkSenp1ifwNPqenwcIjT0XyJ1RwQferkSotHiASeetAPJXgBS6K23psifwFr4YsKN8dbEfRViCtHhxl1sF8iwIZWyiW9cKqMoKfzyXsKN8dHR9ms82MWICYXQFEgyjAE)fyX(fT1ZLOwnWQ1EHkwFr4kiAVKNeVIvqtiBSiL1AuTxKdiDY6NcHyaT1zym0H1xg0eYgl(VTyLcUPodJHa3lWYrAP6GRgUOX6lcxXzyme4EbEflwI8KFiW6awcI2l5jXsq0EjpjPSwJQ9IeRViC)sDJxXgl1qW7FI3bEfRZK1pfcbPtbRwOTsKWbSigAFInsWzfWYy5QifwIZGfPWsOL(Maj4ewEFtRrkKaz4vSXgRViCLCVapI1xeUMGMWGhXQ5Mq2ifwcT03eiHC5dlVVP1ifsix(WRyJnwN0C2CtiBKclVVP1if2yJfRHleifwcT03eyr6hEKeffwEFtRrkSinJzMrg8ib8k2yJ1xeUSgUqGxX6lcxXzWIxXsv)(Qz)M(jsHL330AKcBSX6lcxMXkd8iwjRjqkS8(MwJuyJnwVC2wBLifwEFtRrkSXgReNnqkS8(MwJuyJnwFr4YA9oYB8kwFr4kdAIeEeBSETYU0mtGeYLjSsHV2kPEEgyPzTsS4QQ6wBLCJBN0((rsGuyJfR1AuTxK4vSygR1djCGjYuaRN59(kIgjOyUSoGLwflhPLQdUA4IEaPyawx0QnrKGZkGvgZ79venQSIzkxgilFzkFKDilfYDilNoGVk6Scyj)EujTVFKeiHCyXzBTvkqkSenp1ifwQwxVqi4(bEelvRRW(LQ4rSX6vl1cIifwQwxFJ9cEelFJ9IlNT1wjwe1Qbw(g7f33e3lWcBSXs0CwhliTvlBSifjiqrIhWgjKlFifwFzN0((rcPWsq0EjpjwcI2l5jFi4QpXsCggdbUxGeY0HSidBS4STMMGkP99JKJSQbs4awCP2J3ARePWs08uJuyDMcr0yjiM0shJnwVAPwqePW6mfIOXsqmPLogBSXQtAF)iHuy9fHllrEYpe4rS(IWnfECTul9XJyjodJHa3lqcz6qwKHflrEYpeU2ZiXBBclsg5y1ppdSenV)cSy)I265suRgy1AVqfRViCfeTxYtIxXkOjKnwKYAnQ2lYbKoz9tHqmG26mmg6W6ldAczJf)3wSsb3uNHXqG7fy5iTuDWvdx0y9fHR4mmgcCVaVIflrEYpeyLdlbr7L8KyjiAVKN8HGR(eRViC)sDJxXglIH2NyJeCwbSmwUksHL4myrkSeAPVjqcoHL330AKcjqgEfBSX6lcxj3lWJy9fHRjOjm4rSAUjKnsHLql9nbsix(WY7BAnsHeYLp8k2yJ1jnNn3eYgPWY7BAnsHn2yXA4cbsHLql9nbwK(HhjrrHnwFr4YA4cbEfRViCfNblEflv97RM9B6NifwEFtRrkSXgRViCzgRmWJyLSMaPWY7BAnsHn2y9YzBTvIuy59nTgPWgBSsC2aPWY7BAnsHn2y9fHlR17iVXRy9fHRmOjs4rSXkf(ARK65zGLM1kXIRQQBTvYnUDs77hjbsHnwmJ16HeoWezkG1Z8EFfrJeumxwhWsRILJ0s1bxnCrp4HGR(eRlA1MisWzfWIZ2ARuGuyjAEQrkSuTU(g7f8iw(g7f33e3lWIHb3Xm(tCbj3rAP6GRgUOh8qWvFILVXEXLZ2ARelbr7fSuTUEHqW9d8iwQwxH9lvXJyJ1RwQferkSuTU(g7f8iw(g7fxoBRTsSiQvdS8n2lUVjUxGf2yJL87rL0((rsGeYHvgZ79vensqrYCImSyTwJQ9IeVInsixMqkSEM37RiAuzfZqgYKchCkx(Y3HmKlRSoCaFv0zfWIZ2AAcQK23psoYQgiHdyXLApERTsKclrZtnsH1zkerJLGyslDm2y9QLAbrKcRZuiIglbXKw6ySXgRoP99JesH1xeUSe5j)qGxXsCggdbUxGeY0HSidl2VOTEUe1QbwT2luXILip5hcx7zK4TnHf5KJflrEYpey5ew9ZZalrZ7VaRViCfeTxYtIxXkOjKnwKYAnQ2lYbKoz9tHqmG26mmg6W6ldAczJf)3wSsb3uNHXqG7fy5iTuDWvdx0y9fHR4mmgcCVaVI1xeUPWJRLAPpEelbr7L8KyjiAVKN8HGR(eRViC)sDJxXglIH2NyJeCwbSmwUksH1xeUMGMWGhXsCgSifwcT03eibNWY7BAnsHeidVIn2y9fHRmOjs4vSAUjKnsHLql9nbsix(WY7BAnsHeYLp8k2yJ1xeUsUxGhXI1WfcKclHw6BcSi9dpsIIcBSsC2aPWY7BAnsHn2yDsZzZnHSrkS8(MwJuyJnwFr4YA4cbEfRViCzgRmWJyLSMaPWY7BAnsHn2y9YzBTvIuy59nTgPWgBSu1VVA2VPFIuy59nTgPWgBS(IWL16DK34vS(IWvCgS4vSXkf(ARK65zGLM1kXsRILJ0s1bxnCrpWe(yXATgv7fjEflMXA9qchyImfWIZ2ARuGuyjAEQrkSuTU(g7f8iw(g7fxoBRTsSeeTxWY3yV4(M4Ebwmm4oMXFIli5oslvhC1Wf9at4JLQ11lecUFGhXs16kSFPkEeBSE1sTGisHLQ113yVGhXY3yV4YzBTvIfrTAGLVXEX9nX9cSWgBS4QQ6wBLCJBN0((rsGuyJ1fTAtej4Scy9LDs77hjKclbr7L8KyjiAVKN8HGR(elXzyme4EbsithYImSXs(9OsAF)ijqc5WkJ59(kIgvwXmLldKLV8LbNZhzhYISmKbNWxfDwbSrc5YcPW6zEVVIOrLvmdzitkCWPC5lFhYqUSY6Wb8vrNvaloBRPjOsAF)i5iRAGeoGvN0((rcPW6lcxwI8KFiWRyXsKN8dbwoHf7x0wpxIA1aRw7fQyXsKN8dHR9ms82MWICYX6lc3u4X1sT0hpIL4mmgcCVajKPdzrgwFr4kiAVKNeVIvqtiBSiL1AuTxKdiDY6NcHyaT1zym0H1xg0eYgl(VTyLcUPodJHa3lWYrAP6GRgUOX6lcxXzyme4EbEfR(5zGLO59xGLGO9sEsSeeTxYt(qWvFI1xeUFPUXRyJfXq7tSrcoRawglxfPWI1WfcKclHw6BcSi9dpsIIcBS(IWL1Wfc8kwFr4AcAcdEeRMBczJuyj0sFtGeYLpS8(MwJuiHC5dVIn2y9YzBTvIuy59nTgPWgBSeNblsHLql9nbsWjS8(MwJuibYWRyJnwQ63xn730prkS8(MwJuyJnwN0C2CtiBKclVVP1if2yJ1xeUsUxGhXkXzdKclVVP1if2yJvYAcKclVVP1if2yJ1xeUIZGfVI1xeUmJvg4rS(IWL16DK34vS(IWvg0ej8k2yLcFTvs98mWsZALyXLApERTsKclrZtnsH1xeUcwUjWJyDMcr0yjiM0shJLGLBImIeCMPCyjy5M4jsqbSeSCtq98mW6L)ZO4ulXglpUwIuyDMcr0yD(nIaR(5zG1zkerJ1xeUcwUjWRyjy5MG65zG153icSeSCtKrKGcyjy5M4jsqbS(IWLBojYXJyJ1RwQferkSotHiASeetAPJXgBSyTwJQ9IeVIfZyTEiHdmrMcy9LDs77hjKclbr7L8KyjiAVKN8HGR(elXzyme4EbsithYImSXsRILJ0s1bxnCrpWe(dQhX6IwTjIeCwbSYyEVVIOrLvmt5Yaz5lFzW58r2HSildzWj8vrNvalwRXMqkKazOYzsbNZ0HdzkFhC25SYYPd5WxfvWzKGtOY5lFhoqw(iZPdoFqbNoKPmGVkQGZyJL87rL0((rsGeidloBRTsbsHLO5PgPWs166BSxWRy5BSxCFtCValggChZ4pXfKChPLQdUA4IEGj8XY3yV4YzBTvILGO9cwQwxVqi4(bEelvRRW(LQ4rSX6vl1cIifwQwxFJ9cEelFJ9IlNT1wjwe1Qbw(g7f33e3lWcBSXIRQQBTvYnUDs77hjbsHeYHuy1jTVFKqkS6NNbw8FIJL4mmMhvXkhzo7SthWs8pg0eYU(VV6mILlPySOClkgFGcRGMq2yLFb30eXs8pg0eYM0P4vNrSkstImNzS(IWvCggZJQ4vSeNHX8OQaPWgl144)9L65zGv(rImtALzEMX6l1nwNg(ZiHLK7fcKcBSKCVaRIix1E55GhLcTpXgR3VXiy5s8k2y9LDs77hjKcBSXgBKazhqkS4STMMGkP99JKJSQbsihwC2wBLcKclrZtnsHLQ113yVGxXY3yV4YzBTvILGO9cw(g7f33e3lWIHb3Xm(tCbjVyidYXXs166fcb3pWJyPADf2VufpInwVAPwqePWs166BSxWJy5BSxC5ST2kXIOwnWY3yV4(M4EbwyJnwCP2J3ARePWs08uJuyDMcr0yjiM0shJnwECTePWsWYnHYFjlwdgmyqk6Fso49lzBTvs7zY6NcHWHbIMN6S1HbIMNAL2HbcwUjYwhgiy5MqPPB3dgmyWGbgll3mGl9nXaYhq7zY6NcHyajnGSbK0apEtKPtnDduCaTE8MitN6b07aYOB3dgmyWGbPO)j5arZtD2oGEgqlT06XBImj0sA5sFtq3a6zqo6OxYOBajnGwbl3ez7afhKJo6CyGO5PwPhqpdOLwA94nrMeAjTCPVjOBa9mihD0lz0nGKgqRGLBcLEGIdYrhD7EWGbdcP6UhmalU5KiN65zGf3CsKt6VreyXAn2eJiHCyXAn2u2rc5WIBojYv(lzXAWGbdsr)tYbVFjBRTsAptw)uieomq08u7Wa1W0C629GbdgmyGXYYnd4sFtmG8b0EMS(PqigqsdiBajnWJ3ez6ut3afhqRhVjY0PEa9oGm629Gbdgmyqk6Fsoq08upGEgqlT06XBImj0sA5sFtq3a6zqo6OxYOBajnqnmnNUDpyWGbHuD3dgG1xeUDIlfgEh4vS(IWLBojYXRyjy5MG65zG153icSyTgB6bKqoS6exkm8ou(lzXAWGbdsr)tYbVFjBRTsAptw)uieomq08uNTomq08uR0omqnmnpBDyGAyAUst3UhmyWGbdmwwUzWr7xYgmqlAUKngq(apEtKjHws7zY6NcHyajnWJ3ez6ut3UhmyWGbdsr)tYbIMN6SDa9mG2J2VKnyGw0CjBmGKgOgMMNT05WarZtTspGEgq7r7xYgmqlAUKngqsdudtZvA629Gbdges1DpyawcwUjEIeYXKcyXnNe5iHdm5ewSwJnDfjKdRNibYuaRmIeoG1xeUcwUjWRy1jUuy4Dq98mW6O9lzdSu)jERTsSykFkGvY28oqchWsWYnrgrc5ysbSX6vl1cIifwNPqenwhTFjBWGGL)eBSXQtAF)iHuy1ppdSy)I26H1xg0eYgl(VTyX(fT1ZLOwnWQ1EHkwbnHSXIue59ahfcb3pWI9lARNB)8mWs08(lWI9lARhwVFjBRTsAPB3dgmyGXYYndeNbB2t2)5aYhK9OzKT10e1zWM9K9FslDkz3dgmyGXYYnd0IhSvfMGTd1bKpqeMGTP1zhgK9OP4Mq2pkFT06SddiZHbIZGn7j7)Ko6uYGDpyWGb7EWGbd0VdOL5sDNFb30eDepJ0s)MN8JM(0nGKn4aDdAIHCWGbdgmyWUhmyWGbdgmWyz5Mbnp5hD(fCttK0rInK9aYhWCPUZVGBAI0s)MN8JM(0nGEhWCPUZVGBAIoINrAPFZt(rtF6uYUhmyWGbdgmy3dgmyWGbdgOFhOfpyRkmbBhQd4s1bnp5hD(fCttK0rInK9aLYGdm5KcdAIHC3dgmyWGbdgmyWGbPO)j5Go9dLS7bdgmyWGbdcJi0VdK2EGw8GvuHjy7qDaxQoO5j)OZVGBAIKosSHShOugCGjYg0ed5UhmyWGbdgmyWGbdsr)tYbD6hkz3dgmyWGbdgegrS7bdgmyWGbdgmyWGu0)KCWl3icLS7bdgmyWGbdcP6UhmyWGWiIDpyWGbdgmyqk6Fso4LBeHs29Gbdges1Dhs1DV7DV7DV7DV7DV7DV7DV7DV7DV7DV7DV7DV7DV7DV7DV7DV7DV7DV7DV7DV7DV7DVBSyjgSogR)PkVdSXIyO9j2ibNvalJLRIuy9fHRmOjs4rSynCHaPWsOL(Mals)WJKOOWY7BAnsHfPF4rsuu4vSXgRViCBUjKnEeRViCznCHaVI1xeUmJvg4rS(IWvCgS4vS(IW1e0eg8iwn3eYgPWsOL(Maj4ewEFtRrkKqUd4vKqoYWRyJnwIZGfPWsOL(Maj4ewEFtRrkKaz4vKGt4vSXgRViCLCVapIvYAcKclVVP1if2yJ1lNT1wjsHL330AKcBSXsv)(Qz)M(jsHL330AKcBSX6lcxwR3rEJxXkXzdKclVVP1if2yJ1jnNn3eYgPWY7BAnsHn2yJ1Rv2LMzcKazoJLQwCA4pRMZ6ybwKHvk81wj1ZZalnRvILO5SowqARw2yDnpkQ8CewmJ16HeoWezkG1Z8EFfrJkRygYqMu4Gt5Yx(oKHCzL1Hd4RIoRawAvSkgYGCCSUOvBIibNval53JkP99JKajqgwQAbZgFjBRPjWIBmyLX8EFfrJeumNZKHfxvv3ARKBC7K23pscKcjKdPWQtAF)iHuy9fHllrEYpe4vS(IW9l1nEflXzyme4EbsWjYCkFzHflrEYpeU2ZiXBBclYjhR(5zGLO59xG1xg0eYgl(VTy9fHRGO9sEs8kwbnHSXIr2wBLdyUGF0eyX(fT1ZLOwnWQ1EHkwPGBQZWyiW9cSkICv7Lbm0Muj5dyqWBIy9fHR4mmgcCVaVIflrEYpeyrgwFPUX60WFgjSeeTxYtILGO9sEYhcU6tS(IWT5j)OFiy2)RtHkEflX)yqtiBsNIxDgXQinjYCMXs8pg0eYU(VV6mILlPySOClkgFGcBS(YoP99JesHLGO9sEsSeeTxYt(qWvFIL4mmgcCVaj4ezoLVSWgBSXI1AnQ2ls8kwDKXMuwJnHuiHCiHdibNqchyImSXgjqwoKclvTGzJVKT10eyXngS(YoP99JesHLGO9sEsSeeTxYt(qWvFIL4mmgcCVaj4ezoLVSWgloBRPjOsAF)i5iRAGeum3bS4ST2kfifwIMNAKclvRRVXEbVILVXEX9nX9cSyyWDmJ)exqYlgYGCCS8n2lUC2wBLyjiAVGLQ11lecUFGhXs16kSFPkEeBSE1sTGisHLQ113yVGhXY3yV4(M4Ebwy5BSxC5ST2kXIOwnWgBS4sThV1wjsHLO5PgPW6mfIOXsqmPLogBS84AjsHLGLBcL)swSgmyWGu0)KCW7xY2ARK2ZK1pfcHddenp1zRddenp1kTddeSCtKTomqWYnHst3UhmyWGbdmwwUzax6BIbKpG2ZK1pfcXasAazdiPbE8MitNA6gO4aA94nrMo1dO3bKr3UhmyWGbdsr)tYbIMN6SDa9mGwAP1J3ezsOL0YL(MGUb0ZGC0rVKr3asAaTcwUjY2bkoihD05WarZtTspGEgqlT06XBImj0sA5sFtq3a6zqo6OxYOBajnGwbl3ek9afhKJo629Gbdges1DpyawcwUjYisihtkGf3CsKt98mWIBojYj93icSyTgB6ksihwSwJnLDKqoS4MtICL)swSgmyWGu0)KCW7xY2ARK2ZK1pfcHddenp1omqnmnNUDpyWGbdgySSCZaU03ediFaTNjRFkeIbK0aYgqsd84nrMo10nqXb06XBImDQhqVdiJUDpyWGbdgKI(NKdenp1dONb0slTE8MitcTKwU03e0nGEgKJo6Lm6gqsdudtZPB3dgmyqiv39Gby9fHBN4sHH3bEfRViC5MtIC8kwcwUjOEEgyD(nIaRoXLcdVdL)swSgmyWGu0)KCW7xY2ARK2ZK1pfcHddenp1zRddenp1kTddudtZZwhgOgMMR00T7bdgmyWaJLLBgC0(LSbd0IMlzJbKpWJ3ezsOL0EMS(Pqigqsd84nrMo10T7bdgmyWGu0)KCGO5PoBhqpdO9O9lzdgOfnxYgdiPbQHP5zlDomq08uR0dONb0E0(LSbd0IMlzJbK0a1W0CLMUDpyWGbHuD3dgGLGLBINiHCmPawCZjros4atoH1tKazkGvgrchW6lcxbl3e4vSu)jERTsSykFkGvN4sHH3b1ZZaRJ2VKnWkzBEhiHdyXAn20diHCyXAn2eJiHCyJ1RwQferkSotHiASoA)s2Gbbl)j2yJvN0((rcPW6lcxwI8KFiWJy9fH7xQB8kwIZWyiW9cKGtK5u(YclwI8KFiCTNrI32ewKtowSe5j)qGfzy9fHBZt(r)qWS)xNcv8iwFr4kiAVKNeVI1xeUAjnrse4vScAczJfJST2khWCb)OjW6ldAczJf)3wSsb3uNHXqG7fyve5Q2ldyOnPsYhWGG3eX6lcxXzyme4EbEfR(5zGLO59xGLGO9sEsSeeTxYt(qWvFIf7x0wpxIA1aRw7fQyJLAi49pX7aVIfXq7tSrcoRawglxfPW6lcxzqtKWJyXA4cbsHLql9nbwK(HhjrrHL330AKcls)WJKOOWRyJnwFr42CtiB8iwFr4YA4cbEfRViCzgRmWJy9fHR4myXRy9fHRjOjm4rSAUjKnsHLql9nbsWjS8(MwJuiHChWRiHCKHxXgBSeNblsHLql9nbsWjS8(MwJuibYWRibNWRyJnwFr4k5EbEeRtAoBUjKnsHL330AKcBSX6LZ2ARePWY7BAnsHn2yL4SbsHL330AKcBSX6lcxwR3rEJxXsv)(Qz)M(jsHL330AKcBSXkznbsHL330AKcBSXgRxRSlnZeibYCglvT40WFwnN1XcSywNyLcFTvs98mWsZALyXATgv7fjEfRmM37RiAKGI5CMmSygR1djCGjYualUQQU1wj342jTVFKeif2yPvXQyidOhNuaRlA1MisWzfWs(9OsAF)ijqc5W6zEVVIOrLvmdzitkCWPC5lFhYqUSY6Wb8vrNvalrZzDSG0wTSX6AEuu55iS6iJnPSgBcPqc5qchqcoHeoWezyJnsGmYqkSETYU0mtGeiZzSu1Itd)jvKXglMflwSFrB9OIm2yPOIdkICv7Lbm0Muj5dYFRwDaPiYt(HyaZMgqkR1OAVihqL4SoosduuXbxFoG6Iw22ZbkoOABYlX9dfzE5WaYoKld07bNPxYCE3VFjBRTYb0s3UhmyWGDpyWGbgll3mGLip5hKYASPbKpG(kRSYkRSYkRm9vYUhmyWaJLLBgumKbUSe5j)q4WGIHmW1JNrsrKN8dHddkgYaxrZtTddkgYax1FI3ARCa5dYE01zymKIip5hcADImNYxw0PKDpyWGb7EWGbd0VdkgYaxwI8KFigqo5diBqtmK7EWGbdgmyWawI8KFqkRXMgq(a6RSYhoOSYhoqFLS7bdgmyWGbdsr)tYb0N(kz3dgmyqyeH(DqXqg4YsKN8dXaYjFWHbnXqU7bdgmyWGbdyjYt(bPSgBAa5dOVYkRSYhoC4a9vYUhmyWGWic97GIHmWLLip5hIbkLbKnOjgYDpyWGbdgmyalrEYpiL1ytdiFa9vwzLvwzLpCG(kz3dgmyqivhmyWGDpyWGb7EWGbdsr)tYbIoPL(m9AtE8Mw6NnXYSemlMo8sFhgWsKN8dszn2KddkgYaxwI8KFiOtj7EWGbd2Div39U39U39U39U39U39U39U39U39U39U39U39U39U3nwFzN0((rcPWsCggdbUxGeYLvwzLlh2yLcFTvs98mWQJm2yXzBnnbvs77hjhzvdKWbS4ST2kfifwIMNAKclvRRxieC)apILQ1vy)sv8i2y9QLAbrKclvRRVXEbpILVXEXLZ2ARelIA1alFJ9I7BI7fyHn2y9mV3xr0OYkMVm4KchY5CUC5YktkKH8Lp8vrNvaRmM37RiAKGI5C6awAvSkgYGbkoGue5j)qKdR3e3lQoXBosqbSUOvBIOYkKbYYsHdo7ugYWbfY5ezzcFv05SWQtAF)iHuy9fHRwstKebEfl2VOTEUe1QbwT2luXsCggdbUxGeYLvwzLlhwSe5j)q4ApJeVTjSukKJv)8mWs08(lW6lcxwI8KFiWRy9fHRGO9sEs8kwbnHSXIr2wBLdyUGF0ey9LbnHSXI)BlwPGBQZWyiW9cSkICv7Lbm0Muj5dyqWBIy9fHR4mmgcCVaVIflrEYpeyLdlbr7L8KyjiAVKNKuwRr1ErI1xeUFPUXRyJL87rL0((rsGeidlIH2NyJkNH8PGcoNJSmLbYYezzsbNDgFv05mHLXYvrkSynCHaPWsOL(Mals)WJKOOWgRViCznCHaVI1xeUYGMiHhXQ5Mq2ifwcT03eibNWY7BAnsHeCcVIn2y9fHRK7f4rSeNblsHLql9nbsWjS8(MwJuibNWRyJnwFr4YmwzGhX6KMZMBczJuy59nTgPWgBSu1VVA2VPFIuy59nTgPWgBSswtGuy59nTgPWgBSE5ST2krkS8(MwJuyJnwFr4kodw8kwjoBGuy59nTgPWgBS(IWL16DK34vS(IW1e0eg8i2yXvv1T2k5g3oP99JKaPqc5qkS6K23psifw9ZZal2VOTEy9LbnHSXI)BlwbnHSXIue59ahfcb3pWs8pg0eYM0P4vNrSkstImNzSy)I26H17xY2ARKw629GbdgySSCZaXzWM9K9FoG8bzpAgzBnnrDgSzpz)N0sNs29GbdgySSCZaT4bBvHjy7qDa5deHjyBAD2HbzpAkUjK9JYxlTo7WaYCyG4myZEY(pPJoLmy3dgmyG(DaTmxQ78l4MMOJ4zKw638KF00NUbKSbhOBqtmKdgmyWGbd29GbdgmyWGbgll3mO5j)OZVGBAIKosSHShq(aMl1D(fCttKw638KF00NUb07aMl1D(fCtt0r8msl9BEYpA6tNs29GbdgmyWGb7EWGbdgmyWa97aT4bBvHjy7qDaxQoO5j)OZVGBAIKosSHShqYiFWbMCsHbnXqU7bdgmyWGbdgmyWGu0)KCqN(Hs29GbdgmyWGbHre63bsBpqlEWkQWeSDOoGlvh08KF05xWnnrshj2q2dizKp4atKnOjgYDpyWGbdgmyWGbdgKI(NKd60puYUhmyWGbdgmimIy3dgmyWGbdgmyWGbPO)j5GxUrekz3dgmyWGbdges1DpyWGbHre7EWGbdgmyWGu0)KCWl3icLS7bdgmiKQ7oKQyX(fT1ZTFEgyjAE)fyXsmyDmw)tvEhy9fH7xQB8kwI)XGMq21)9vNrSCjfJfLBrX4duy9L6gRtd)zKWgRVStAF)iHuyJn2yJeiZjKcl2VOTEurgBS29UX6l7K23psifwIZWyiW9cKqUSYkRC5WgloBRPjOsAF)i5iRAGeoGfNT1wPaPWs08uJuyPAD9n2l4rS8n2lUVjUxGfddUJz8N4csEXqgqgw(g7fxoBRTsSeeTxWs166fcb3pWJyPADf2VufpInwVAPwqePWs166BSxWJy5BSxC5ST2kXIOwnWY3yV4(M4EbwyJnwCP2J3ARePWs08uJuyDMcr0yjiM0shJnwECTePW6mfIOX61OpXgRxTuliIuyDMcr0yD0(LSbdcw(tSXgRoP99JesHvk8WsbMCgRu4X1sT031EgjEBtyrYWkfECTul9XYzS(IW9l1nEfl7fzEsZt8kwPWlVZiXBBclLc5y1ppdSenV)cSu)jERTsSYkRSYkRSYkRSWI9lARNlrTAGvR9cvSyjYt(HW1EgjEBtyrYihRViCtHhxl1sF8kwFzqtiBS4)2I1xeUcI2l5jXRyjodJHa3lqc5YkRSYLdRGMq2yrkR1OAVihq6K1pfcXaARZWyOdRViCzjYt(HaVIvk4M6mmgcCVaRIix1EzadTjvs(age8MiwFr4kodJHa3lWRyXsKN8dbw5Wsq0EjpjwcI2l5jjL1AuTxKyj5EHaPqc5WQiYvTxgWqBsLKpGbbVjInwQXX)7l1ZZaR8JXhCKYmpZy9fXdHhEfBSigAFInsWzfWYy5QifwSgUqGuyj0sFtGfPF4rsuuy59nTgPWI0p8ijkk8k2yJ1xeUsUxGhX6lcxtqtyWJy1CtiBKclHw6BcKGty59nTgPqcoHxXgBSE5ST2krkS8(MwJuyJnwIZGfPWsOL(Maj4ewEFtRrkKaz4vKGt4vSXgRViCznCHaVI1xeUIZGfVILQ(9vZ(n9tKclVVP1if2yJ1xeUmJvg4rSswtGuy59nTgPWgBSoP5S5Mq2ifwEFtRrkSXgReNnqkS8(MwJuyJnwFr4YA9oYB8kwFr4kdAIeEeBSETYU0mtGeYLjSu1Itd)z1CwhlWIzDIvk81wj1ZZalnRvIfxvv3ARKBC7K23pscKcBSyTwJQ9IepIfZyTEiHdmrMcyPvXQyididRN59(kIgvwXmKHmPWbNYLV8Did5YkRdhWxfDwbSUOvBIibNvaRmM37RiAKGI5CMmSKFpQK23pscKqoSenN1XcsB1YglQ8inwDKXMuwJnHuiHCOYzsHCKLHmLbNuWzNZ0H8D4a(QOcoHeidvotoLVCoLvgYsbND(qgCYPC4RIk4e2yJeiZzKcl2VOTEurgBS29UX6zEVVIOrLvmdzitkCWPC5lFhYqUSY6Wb8vrNvaloBRPjOsAF)i5iRAGeoGfNT1wPaPWs08uJuyPAD9n2l4rS8n2lUC2wBLyjiAVGLVXEX9nX9cSyyWDmJ)exqYlgYaYWs166fcb3pWJyPADf2VufpInwVAPwqePWs166BSxWJy5BSxC5ST2kXIOwnWY3yV4(M4EbwyJnwCP2J3ARePWs08uJuyDMcr0yjiM0shJnwECTePW6mfIOX61OpXgRxTuliIuyDMcr0yD0(LSbdcw(tSXgRoP99JesHvk8WsbMCgl1FI3AReRSYkRSYkRSYklSKCVqGuiHCyve5Q2ldyOnPsYhWGG3eXgRu4X1sT0hlNXYErMN08eVIf7x0wpxIA1aRw7fQyjiAVKNelbr7L8KKYAnQ2lsSuJJ)3xQNNbw5hJp4iLzEMXILip5hcSoGL4mmgcCVajKlRSYkxoSyjYt(HW1EgjEBtyro5y9fHBk84APw6JhX6ldAczJf)3wS(IWvq0EjpjEfRViCzjYt(HaVIvqtiBSiL1AuTxKdiDY6NcHyaT1zym0Hvk84APw67ApJeVTjSizyLcUPodJHa3lWQiYvTxgWqBsLKpGbbVjI1xeUIZWyiW9c8kwFr4(L6gVIvk8Y7ms82MWsPqow9ZZalrZ7VaRViEi8WRyJLAi49pX7aVIfXq7tSrcoRawglxfPWI1WfcKclHw6BcSi9dpsIIclVVP1ifwK(HhjrrHxXgBSu1VVA2VPFIuy59nTgPWgBS(IWvg0ej8iwn3eYgPWsOL(Maj4ewEFtRrkKGt4vSXgRViCLCVapIL4myrkSeAPVjqcoHL330AKcjqgEfj4eEfBSX6lcxMXkd8iwVC2wBLifwEFtRrkSXgRViCznCHaVIvYAcKclVVP1if2yJ1xeUIZGfVI1jnNn3eYgPWY7BAnsHn2yL4SbsHL330AKcBSX6lcxwR3rEJxX6lcxtqtyWJyJ1Rv2LMzcKqUmHLQwCA4pRMZ6ybwmRtSsHV2kPEEgyPzTsSyTwJQ9IepIfZyTEiHdmrMcyXvv1T2k5g3oP99JKaPWgRlA1MisWzfWkJ59(kIgjOyoNjdl53JkP99JKajKdRVStAF)iHuyjodJHa3lqc5YkRSYLdBS0QyvmKbhWs0CwhliTvlBSOYJ0y1rgBszn2esHeYHkNjfYrwgYugCsbNDothY3Hd4RIk4esGmu5m5u(Y5uwzilfC25dzWjNYHVkQGtyJnsGmfqkSETYU0mtGeiZzSu1Itd)jvKXglMflwSFrB9OIm2yPOIdkICv7Lbm0Muj5dYFRwDaPiYt(HyaZMgqkR1OAVihqL4SoosduuXbxFoG6Iw22ZbkoOABYlX9dfzE5WaYoKld07bNPxYCE3VFjBRTYb0s3UhmyWGDpyWGbgll3mGLip5hKYASPbKpG(kRSYkRSYkRm9vYUhmyWaJLLBgumKbUSe5j)q4WGIHmW1JNrsrKN8dHddkgYaxrZtTddkgYax1FI3ARCa5dYE01zymKIip5hcADImNYxw0PKDpyWGb7EWGbd0VdkgYaxwI8KFigqo5diBqtmK7EWGbdgmyWawI8KFqkRXMgq(a6RSYhoOSYhoqFLS7bdgmyWGbdsr)tYb0N(kz3dgmyqyeH(DqXqg4YsKN8dXaYjFWHbnXqU7bdgmyWGbdyjYt(bPSgBAa5dOVYkRSYhoC4a9vYUhmyWGWic97GIHmWLLip5hIbkLbKnOjgYDpyWGbdgmyalrEYpiL1ytdiFa9vw5dhuw5dhOVs29Gbdges1bdgmy3dgmyWUhmyWGu0)KCGOtAPptV2KhVPL(ztSmlbZIPdV03HbSe5j)GuwJn5WGIHmWLLip5hc6uYUhmyWGDhs1DV7DV7DV7DV7DV7DV7DV7DV7DV7DV7DV7DV7DV7DJ1x2jTVFKqkSeeTxYtILGO9sEsszTgv7fjwIZWyiW9cKqUSYkRC5WgRu4RTsQNNbwDKXgloBRPjOsAF)i5iRAGeoGfNT1wPaPWs08uJuyPAD9cHG7h4rSuTUc7xQIhXgRxTuliIuyPAD9n2l4rS8n2lUC2wBLyruRgy5BSxCFtCValSXgRN59(kIgjOiz5YhwzmV3xr0ibfZ50bS0QyvmKbduCaPiYt(HGmSEtCVO6eV5ibfW6IwTjIkRqgillfo4StzidhuiNtKLj8vrNZcRoP99JesH1xeUSe5j)qGxXsCggdbUxGeYLvwzLlhwSFrB9CjQvdSATxOIflrEYpeU2ZiXBBclLc5yXsKN8dbw5W6lcxTKMijc8iwFr4kiAVKNeVIvqtiBSyKT1w5aMl4hnbwFzqtiBS4)2Ivk4M6mmgcCVaRIix1EzadTjvs(age8MiwFr4kodJHa3lWRy1ppdSenV)cSeeTxYtILGO9sEsszTgv7fjwFr4(L6gVInwYVhvs77hjbsGmSigAFInQCgYNck4CoYYugiltKLjfC2z8vrNZewglxfPWI1WfcKclHw6BcSi9dpsIIcBS(IWvY9c8iwFr4AcAcdEeRMBczJuyj0sFtGeCclVVP1ifsWj8k2yJ1lNT1wjsHL330AKcBSXsCgSifwcT03eibNWY7BAnsHeCcVIn2yPQFF1SFt)ePWY7BAnsHn2yDsZzZnHSrkS8(MwJuyJnwFr4YA4cbEfRViCzgRmWJyLSMaPWY7BAnsHn2y9fHR4myXRyL4SbsHL330AKcBSX6lcxwR3rEJxX6lcxzqtKWJyJfxvv3ARKBC7K23pscKcjKdPWQtAF)iHuyX(fT1ZLOwnWQ1EHkw9ZZal2VOTEyX(fT1dR3VKT1wjT0T7bdgmWyz5MbIZGn7j7)Ca5dYE0mY2AAI6myZEY(pPLoLS7bdgmWyz5MbAXd2QctW2H6aYhictW206SddYE0uCti7hLVwAD2HbK5WaXzWM9K9FshDkzWUhmyWa97aAzUu35xWnnrhXZiT0V5j)OPpDdizdoq3GMyihmyWGbdgS7bdgmyWGbdmwwUzqZt(rNFb30ejDKydzpG8bmxQ78l4MMiT0V5j)OPpDdO3bmxQ78l4MMOJ4zKw638KF00NoLS7bdgmyWGbd29GbdgmyWGb63bAXd2QctW2H6aUuDqZt(rNFb30ejDKydzpqPm4atoPWGMyi39GbdgmyWGbdgmyqk6FsoOt)qj7EWGbdgmyWGWic97aPThOfpyfvyc2ouhWLQdAEYp68l4MMiPJeBi7bkLbhyISbnXqU7bdgmyWGbdgmyWGu0)KCqN(Hs29GbdgmyWGbHre7EWGbdgmyWGbdgmif9pjh8YnIqj7EWGbdgmyWGqQU7bdgmimIy3dgmyWGbdgKI(NKdE5grOKDpyWGbHuD3HuflX)yqti76)(QZiwUKIXIYTOy8bkSyjgSogR)PkVdSy)I2652ppdSenV)cScAczJv(fCttelX)yqtiBsNIxDgXQinjYCMXgRVStAF)iHuyJn2yJeildifwFzN0((rcPWsCggdbUxGeYLvwzLlh2yXzBnnbvs77hjhzvdKWbS4sThV1wjsHLO5PgPW6mfIOXsqmPLogBS84AjsH1zkerJ1RrFInwVAPwqePW6mfIOX6O9lzdgeS8NyJnwDs77hjKcRViCzjYt(HaVIvk84APw6JLZyjodJHa3lqc5YkRSYLdR(5zGLO59xG1xg0eYgl(VTyX(fT1ZLOwnWQ1EHkwSe5j)q4ApJeVTjSizKJflrEYpeyLdRu4X1sT031EgjEBtyPuihRViCBEYp6hcM9)6uOIxX6lcxbr7L8K4vS(IWnfECTul9XRyf0eYglszTgv7f5asNS(PqigqBDggdDyLcUPodJHa3lWQiYvTxgWqBsLKpGbbVjI1xeUIZWyiW9c8kwcI2l5jXsq0EjpjPSwJQ9IeRViC)sDJxXglIH2NyJeCwbSmwUksHfRHleifwcT03eyr6hEKeffwEFtRrkSi9dpsIIcVIn2y9fHRK7f4rS(IW1e0eg8iwn3eYgPWsOL(Maj4ewEFtRrkKGt4vSXgRxoBRTsKclVVP1if2yJL4myrkSeAPVjqcoHL330AKcjqgEfj4eEfBSXsv)(Qz)M(jsHL330AKcBSX6lcxXzWIxX6lcxwdxiWRy9fHlZyLbEeReNnqkS8(MwJuyJnwN0C2CtiBKclVVP1if2yJvYAcKclVVP1if2yJ1xeUSwVJ8gVI1xeUYGMiHhXgRxRSlnZeibYCglvT40WFwnN1XcSywNyLcFTvs98mWsZALyLX8EFfrJeumNZKHLO5SowqARw2yrLhPXIzSwpKWbMitbS4QQ6wBLCJBN0((rsGuyJLwfRIHmWjS4ST2kfifwIMNAKclvRRxieC)apILQ1vy)sv8i2y9QLAbrKclvRRVXEbpILVXEXLZ2ARelIA1alFJ9I7BI7fyHn2yDrR2ercoRawYVhvs77hjbsihwpZ79vensqXCzDalwR1OAViXJy1rgBszn2esHeidjCaj4eQC(CY58DW5mLPdoLPmKVCzLf(QOczaBSrcKLpKclvTGzJVKT10eyXngS4STMMGkP99JKJSQbsihwC2wBLcKclrZtnsHLQ113yVGxXY3yV4YzBTvILGO9cw(g7f33e3lWIHb3Xm(tCbjVyidYDelvRRxieC)apILQ1vy)sv8i2y9QLAbrKclvRRVXEbpILVXEXLZ2ARelIA1alFJ9I7BI7fyHn2y1jTVFKqkS6NNbwSFrB9WI9lARNB)8mWs08(lWI9lARNlrTAGvR9cvScAczJfPiY7bokecUFG1xg0eYgl(VTyX(fT1dR3VKT1wjT0T7bdgmWyz5MbIZGn7j7)Ca5dYE0mY2AAI6myZEY(pPLoLS7bdgmWyz5MbAXd2QctW2H6aYhictW206SddYE0uCti7hLVwAD2HbK5WaXzWM9K9FshDkzWUhmyWGDpyWGb63b0YCPUZVGBAIoINrAPFZt(rtF6gqYgCGUbnXqoyWGbdgmy3dgmyWGbdgySSCZGMN8Jo)cUPjs6iXgYEa5dyUu35xWnnrAPFZt(rtF6gqVdyUu35xWnnrhXZiT0V5j)OPpDkz3dgmyWGbdgS7bdgmyWGbd0Vd0IhSvfMGTd1bCP6GMN8Jo)cUPjs6iXgYEGszWbMCsHbnXqU7bdgmyWGbdgmyWGu0)KCqN(Hs29GbdgmyWGbHre63bsBpqlEWkQWeSDOoGlvh08KF05xWnnrshj2q2dukdoWezdAIHC3dgmyWGbdgmyWGbPO)j5Go9dLS7bdgmyWGbdcJi29GbdgmyWGbdgmyqk6Fso4LBeHs29GbdgmyWGbHuD3dgmyqyeXUhmyWGbdgmif9pjh8YnIqj7EWGbdcP6UdP6U39U39U39U39U39U39U39U39U39U39U3nwSedwhJ1)uL3b2yrm0(eBKGZkGLXYvrkS(IWvg0ej8iwSgUqGuyj0sFtGfPF4rsuuy59nTgPWI0p8ijkk8k2yJ1xeUn3eYgVI1xeUSgUqGxXkznbsHL330AKcBSX6lcxXzWIxX6lcxtqtyWJy1CtiBKclHw6BcKqUCy59nTgPqcoHxrc5oGxrc5idVIn2yjodwKclHw6BcKGty59nTgPqcKHxrcoHxXgBS(IWvY9c8iwjoBGuy59nTgPWgBSoP5S5Mq2ifwEFtRrkSXglv97RM9B6NifwEFtRrkSXgRViCzTEh5nEfRxoBRTsKclVVP1if2yJ1xeUmJvg4rSX61k7sZmbsGmNXsvlon8NvZzDSalYWkf(ARK65zGLM1kXIl1E8wBLifwIMNAKcRZuiIglbXKw6ySXYJRLifwcwUju(lzXAWGbdsr)tYbVFjBRTsAptw)uieomq08uNTomq08uR0omqWYnr26Wabl3eknD7EWGbdgmWyz5MbCPVjgq(aAptw)uiediPbKnGKg4XBImDQPBGIdO1J3ez6upGEhqgD7EWGbdgmif9pjhiAEQZ2b0ZaAPLwpEtKjHwslx6Bc6gqpdYrh9sgDdiPb0ky5MiBhO4GC0rNddenp1k9a6zaT0sRhVjYKqlPLl9nbDdONb5OJEjJUbK0aAfSCtO0duCqo6OB3dgmyqiv39GbyXnNe5uppdS4MtICs)nIalwRXMyejKdlwRXMYosihwCZjrUYFjlwdgmyqk6Fso49lzBTvs7zY6NcHWHbIMNAhgOgMMt3UhmyWGbdmwwUzax6BIbKpG2ZK1pfcXasAazdiPbE8MitNA6gO4aA94nrMo1dO3bKr3UhmyWGbdsr)tYbIMN6b0ZaAPLwpEtKjHwslx6Bc6gqpdYrh9sgDdiPbQHP50T7bdgmiKQ7EWaS(IWTtCPWW7aVI1xeUCZjroEflbl3euppdSo)grGLGLBImIeYXKcy1jUuy4DO8xYI1GbdgKI(NKdE)s2wBL0EMS(PqiCyGO5PoBDyGO5PwPDyGAyAE26Wa1W0CLMUDpyWGbdgySSCZGJ2VKnyGw0CjBmG8bE8MitcTK2ZK1pfcXasAGhVjY0PMUDpyWGbdgKI(NKdenp1z7a6zaThTFjBWaTO5s2yajnqnmnpBPZHbIMNALEa9mG2J2VKnyGw0CjBmGKgOgMMR00T7bdgmiKQ7EWaSeSCt8ejKJjfWIBojYrchyYjSu)jERTsSykFkG1tKazkGvgrchWI1ASPhqc5WQtCPWW7G65zG1r7xYgyXAn20vKqoSs2M3bs4awFr4ky5MaVInwVAPwqePW6mfIOX6O9lzdgeS8NyJnwIMZ6ybPTAzJ118OOYZryXmwRhs4atKPawAvSkgYGChXIRQQBTvYnUDs77hjbsHeYHuy1jTVFKqkS(IWLLip5hc8kwFPUXQ5j)OX6lc3Vu34vSe)JbnHSjDkE1zeRI0KiZzgl2VOTEUe1QbwT2luXILip5hcx7zK4TnHf5KJflrEYpeyrgwFr4sm4MMiEeRViCBEYp6hcM9)6uOIxX6lcxbr7L8K4vSoJeBiBIb30eXYjfWkOjKnw5xWnnrS(YGMq2yX)TfRuWn1zyme4EbwfrUQ9YagAtQK8bmi4nrS(IWvCggdbUxGxXQFEgyjAE)fyj(hdAczx)3xDgXYLumwuUffJpqHLGO9sEsSeeTxYt(qWvFI1xeUNrInKnXGBAI4vSoJeBiBIb30eDTNrI32ewkfYXsCggdbUxGeCImNYxwyJ1x2jTVFKqkSeeTxYtILGO9sEYhcU6tSeNHXqG7fibNiZP8LfwFPUXQ5j)OXgBKazifwDs77hjKclwI8KFiCTNrI32ewKtow9ZZalrZ7VaRVmOjKnw8FBX6lcxbr7L8K4vS(IWLLip5hc8kwbnHSXIuwRr1EroG0jRFkeIb0wNHXqhwI)XGMq2KofV6mIvrAsK5mJvk4M6mmgcCVaRIix1EzadTjvs(age8MiwFr4kodJHa3lWRy9L6gRtd)zKWs8pg0eYU(VV6mILlPySOClkgFGclbr7L8KyjiAVKN8HGR(eRViC)sDJxXILip5hcSidlXzyme4EbsixwzLvUCyJ1x2jTVFKqkSeeTxYtILGO9sEYhcU6tSeNHXqG7fiHCzLvw5YHn2yJL87rL0((rsGeCcRlA1MisWzfWkJ59(kIgjOyoNjdRN59(kIgvwXmKHmPWbNYLV8Did5YkRdhWxfDwbSu1Itd)5JSwjsiNtziNZzHfR1AuTxK4rS6iJnPSgBcPqc5qchqcoHeoWezyJnsGSmHuyX(fT1JkYyJLIkoWrAP6G6u74yadI2k5T2khqL4SoosduuXbxFoG6Iw22ZbkoOABYlX9dfzE5WaYoKld07bNPxYCA3VFjBRTsAPB3dgmyGXYYndm8oKSphq(GdmLtjduuXmZ7qY(CqBhWzzTFzp41MgCr3ehWAn20aXfDZsme7EWGbdmwwUzqR9IePSgBAa5dOVYkRSYkRSYktFLmyWGbkQ4aszn20a77Gw7fjMgO0HXyVmq)oGKr(GStkgqsonGEgy4DizFoGw(rlnXadx0dyjYLSXGu8McbXbx0sv7f6CyWdH6a97asg5dYoPyWa6zGH3HK95aAdP97tCqR9IbTDGJL2ldAIAXaTyWt7pnifVPqqCWfTu1EHohgK9u8CG(DGszq2jfdgqpdm8oKSphqR0o4c)5G2oifVPqqCGwoO1EXasoZE0oGUDpyWGbgll3mq0CwhtkRXMgmG8b0xzLvwzLvwzLPVsgmyWafvCaPSgBAG9Da7pLczpq0CwhZ0agsu3Xa97aLc5dYYHbzpfHCG(Da5Kpi3HDpyWGb7EWGbdmwwUzGpR6aYhKJjfOxAZrpmxQ76mmM8Jl6Gw6FA4pJe9PJEZD4aDkz3dgmyGXYYndeNHXqG7fdiFq2JUodJ5r5RL285Kc5oqNs29GbdgySSCZaxhg46WaxhgC8)(sk7x2omW1Hbh)VVm4N4T2kDyWX)7ljY45aYhWCPUzqC8)(sl9BEYpA67WaXzyme4EbDkz3dgmyWUhmyWa97GJ)3xsKXZbKt(aP2mOjgYDpyWGbdgmyqk6FsU7bdgmiKQ7EWGbd29GbdgySSCZGJ)33hcpUwkgq(GJ)3xsKXZbkoi7rtP9cAPtj7EWGbd29GbdgS7bdgmq)o44)9Lu2VShqo5dYDyqtmK7EWGbdgmyWarZzDmPSgBAa5dOVYkF4GYkF4a9vYGbd29Gbdges1DpyWGb7EWGbd0Vdo(FFFi84APyajJ8bzyqtmK7EWGbdgmyWGw7fjszn20aYhqFLvwzLvwzLvM(kz3dgmyqyeH(DWX)77dHhxlfdizKpGwFwvsYPb0ZadVdj7t6g0ed5UhmyWGbdgmO1ErIuwJnnG8b0xzLvwzLv(Wb6RKDpyWGbHre63bh)VVpeECTumGKr(aA9zvjPCdONbgEhs2N0nOjgYDpyWGbdgmyqR9IePSgBAa5dOVYkRSYhoC4a9vYUhmyWGWiIDpyWGbdgmyqR9IePSgBAa5dOVYkNHmKHmKHmqFLS7bdgmiKQ7EWGbd29GbdgS7bdgmif9pjhi6Kw6Z0Rn5XBAPF2elZsWSyk3B2ukBMmBILzjywQztj67WGw7fjszn2Kddo(FFFi84APWHbIMZ6yszn2Kddo(FFjL9lB6uYGDhs1DV7DV7DV7DV7DV7DV7DV7DV7DV7DV7DV7DJ1x2jTVFKqkSeNHXqG7fibYYYzNXgloBRPjOsAF)i5iRAGeoGfxQ94T2krkSenp1ifwNPqenwcIjT0XyJ1RwQferkSotHiASoA)s2Gbbl)j2yJvN0((rcPWkfEyDaRViC1sAIKiWJyLcpUwQL(yDal2VOTEUe1QbwT2luXsCggdbUxGeillNDgRViCtHhxl1sF8kwFr4(L6gVI1xg0eYgl(VTyLcpUwQL(U2ZiXBBclsgwQ)eV1wjwzLvwzLvwzLvwyf0eYglszTgv7f5asNS(PqigqBDggdDy9L6gRMN8JgRViCfNHXqG7f4vSSxK5jnpXRyLcV8oJeVTjSizKJLK7fcKcjKdlhPLQdQtTJdSXsno(FFPEEgyLFm(GJuM5zgRViEi8WRyJfXq7tSrcoRawglxfPW6lcxtqtyWJyXA4cbsHLql9nbwK(HhjrrHL330AKcls)WJKOOWRyJnwFr4kdAIeEeRMBczJuyj0sFtGei7awEFtRrkSXgRViCLCVapIL4myrkSeAPVjqcoHL330AKcjqgEfBSX6lcxMXkd8iwFr42CtiB8kwFr4YA4cbEfReNnqkS8(MwJuyJnwFr4kodw8kwN0C2CtiBKclVVP1if2yJ1lNT1wjsHL330AKcBSXkznbsHL330AKcBSXsv)(Qz)M(jsHL330AKcBSXgRxRSlnZeibYCglvT40WFwnN1XcSywSyLcFTvs98mWsZALyXvv1T2k5g3oP99JKaPWglrZzDSG0wTSXIuKGafjEalMXA9qchyImfWIZ2ARuGuyjAEQrkSuTUEHqW9d8iwQwxH9lvXJyJ1RwQferkSuTU(g7f8iw(g7fxoBRTsSiQvdS8n2lUVjUxGf2yJLwflhPLQdQtTJJbmiARK3AReRmM37RiAKGtKDaR3e3lQoXBosqbSUOvBIibNval53JkP99JKajKdRN59(kIgjOyUSoGfR1AuTxK4vSrcKLfsH1Z8EFfrJeumxwhWIZ2AAcQK23psoYQgibfZDaloBRTsbsHLO5PgPWs166BSxWRy5BSxCFtCValggChZ4pXfK883Qjrkhw(g7fxoBRTsSeeTxWs166fcb3pWJyPADf2VufpInwVAPwqePWs166BSxWJy5BSxC5ST2kXIOwnWY3yV4(M4EbwyJnwCP2J3ARePWs08uJuyDMcr0yjiM0shJnwECTePWsWYnHYFjlwdgmyqk6Fso49lzBTvs7zY6NcHWHbIMN6S1HbIMNAL2HbcwUjYwhgiy5MqPPB3dgmyWGbgll3mGl9nXaYhq7zY6NcHyajnGSbK0apEtKPtnDduCaTE8MitN6b07aYOB3dgmyWGbPO)j5arZtD2oGEgqlT06XBImj0sA5sFtq3a6zqo6OxYOBajnGwbl3ez7afhKJo6CyGO5PwPhqpdOLwA94nrMeAjTCPVjOBa9mihD0lz0nGKgqRGLBcLEGIdYrhD7EWGbdcP6UhmalU5KiN65zGf3CsKt6VreyXAn20vKqoSyTgBk7iHCyXnNe5k)LSynyWGbPO)j5G3VKT1wjTNjRFkechgiAEQDyGAyAoD7EWGbdgmWyz5MbCPVjgq(aAptw)uiediPbKnGKg4XBImDQPBGIdO1J3ez6upGEhqgD7EWGbdgmif9pjhiAEQhqpdOLwA94nrMeAjTCPVjOBa9mihD0lz0nGKgOgMMt3UhmyWGqQU7bdW6lc3oXLcdVd8kwFr4YnNe54vSeSCtq98mW68BebwSwJnXisihwDIlfgEhk)LSynyWGbPO)j5G3VKT1wjTNjRFkechgiAEQZwhgiAEQvAhgOgMMNTomqnmnxPPB3dgmyWGbgll3m4O9lzdgOfnxYgdiFGhVjYKqlP9mz9tHqmGKg4XBImDQPB3dgmyWGbPO)j5arZtD2oGEgq7r7xYgmqlAUKngqsdudtZZw6CyGO5PwPhqpdO9O9lzdgOfnxYgdiPbQHP5knD7EWGbdcP6Uhmalbl3eprc5ysbS4MtICKWbMCclwRXMEajKdRNibYuaRmIeoGL6pXBTvIft5tbSeSCtKrKqoMuaRoXLcdVdQNNbwhTFjBGvY28oqchW6lcxbl3e4vSX6vl1cIifwNPqenwhTFjBWGGL)eBSXQtAF)iHuyLcpSuGjNXs9N4T2kXkRSYkRSYkRSYcRu4X1sT0hlYysbSeNHXqG7fibYiltKLHdyzViZtAEIxXI9lARNlrTAGvR9cvSuJJ)3xQNNbw5hJp4iLzEMXsq0EjpjwcI2l5jFi4QpX6lc3u4X1sT0hpIvk84APw67ApJeVTjSizy9LbnHSXI)BlwFr4kiAVKNeVIv)8mWs08(lWkOjKnwmY2ARCaZf8JMaRViC)sDJxXkfCtDggdbUxGv(B1Qdir6F2AReRViCfNHXqG7f4vS(sDJvZt(rJvk8Y7ms82MWIKHLK7fcKcjKdRIix1EzadTjvs(asZ1sSX6lIhcp8k2yrm0(eBKGZkGLXYvrkSynCHaPWsOL(Mals)WJKOOWY7BAnsHfPF4rsuu4vSXglv97RM9B6NifwEFtRrkSXgRViCLbnrcpIvZnHSrkS8(MwJuiHChWRiHCKHxXgBS(IWvY9c8iwIZGfPWsOL(Maj4ewEFtRrkKaz4vKGt4vSXgRViCzgRmWJy9fHR4myXRy9fHlRHle4vSswtGuy59nTgPWgBSE5ST2krkS8(MwJuyJnwN0C2CtiBKclVVP1if2yJvIZgifwEFtRrkSXgRViCzTEh5nEfRViCnbnHbpInwVwzxAMjqcK5mwPWxBLuppdS0SwjwSwRr1ErIxXIzSwpKWbMitbS(YoP99JesHLGO9sEsSeeTxYt(qWvFIL4mmgcCVajqgzzISmCaBS0QyL)wnjs5W6IwTjIeCwbSKFpQK23pscKazyLX8EFfrJeumxMYhwQAbZgFjBRPjWIBmyXvv1T2k5g3oP99JKaPqc5qkS6K23psifwFr4EAVej8iwFr4(L6gVILAC8)(s98mWk)irMjTYmpZy1ppdS4)ehRViCjgCttepIL4FmOjKD9FF1zelxsXyr5wum(afwNrInKnXGBAIyr2bScAczJvrKRAVmiV0rbwI)XGMq2KofV6mIvrAsK5mJ1xg0eYgl(VTyX(fT1ZLOwnWQ1EHkwAjnrse4vSKCVqGuiHCyL)wT6Rn5HnwIZWyEuvGuyJ1xeUNrInKnXGBAI4vSoJeBiBIb30eDTNrI32ewkfS(sDJ1PH)msyJ1x2jTVFKqkS(sDJvZt(rJn2yJLO5SowqARw2yDnpkQ8CewDKXMuwJnHuiHCiHdibYqLZKc5ildzkdoPGZoNPd57Wb8vrfCcBSrcoDaPW6zEVVIOrckMlRdyXzBnnbvs77hjhzvdKGI5oGfNT1wPaPWs08uJuyPAD9cHG7h4rSuTUc7xQIhXgRxTuliIuyPAD9n2l4rS8n2lUC2wBLyruRgy5BSxCFtCValSXglUu7XBTvIuyjAEQrkSotHiASeetAPJXglpUwIuyXAn20diHCyXnNe5uppdS4MtICs)nIalwRXMyejKdlwRXMYosihwCZjrUYFjlwdgmyqk6Fso49lzBTvs7zY6NcHWHbIMNAhgOgMMt3UhmyWGbdmwwUzax6BIbKpG2ZK1pfcXasAazdiPbE8MitNA6gO4aA94nrMo1dO3bKr3UhmyWGbdsr)tYbIMN6b0ZaAPLwpEtKjHwslx6Bc6gqpdYrh9sgDdiPbQHP50T7bdgmiKQ7EWaS(IWTtCPWW7aVI1xeUCZjroEflbl3euppdSo)grGLGLBcL)swSgmyWGu0)KCW7xY2ARK2ZK1pfcHddenp1zRddenp1kTddeSCtKTomqWYnHst3UhmyWGbdmwwUzax6BIbKpG2ZK1pfcXasAazdiPbE8MitNA6gO4aA94nrMo1dO3bKr3UhmyWGbdsr)tYbIMN6SDa9mGwAP1J3ezsOL0YL(MGUb0ZGC0rVKr3asAaTcwUjY2bkoihD05WarZtTspGEgqlT06XBImj0sA5sFtq3a6zqo6OxYOBajnGwbl3ek9afhKJo629Gbdges1DpyawDIlfgEhk)LSynyWGbPO)j5G3VKT1wjTNjRFkechgiAEQZwhgiAEQvAhgOgMMNTomqnmnxPPB3dgmyWGbgll3m4O9lzdgOfnxYgdiFGhVjYKqlP9mz9tHqmGKg4XBImDQPB3dgmyWGbPO)j5arZtD2oGEgq7r7xYgmqlAUKngqsdudtZZw6CyGO5PwPhqpdO9O9lzdgOfnxYgdiPbQHP5knD7EWGbdcP6Uhmalbl3eprc5ysbS4MtICKWbMCclbl3ezejKJjfW6jsGmfWkJiHdyXAn20vKqoS6exkm8oOEEgyD0(LSbwFr4ky5MaVIvY28oqchWs9N4T2kXIP8Pa2y9QLAbrKcRZuiIgRJ2VKnyqWYFIn2y1jTVFKqkSsHhwkWKZy9fHRwstKebEfRViC)sDJxXkfECTul9XImMuaRu4X1sT031EgjEBtyrYWsno(FFPEEgyLFm(GJuM5zgRu4L3zK4TnHfjdl2VOTEUe1QbwT2luXQFEgyjAE)fy9fHBk84APw6JhXYErMN08eVI1xeUcI2l5jXRy9LbnHSXI)BlwbnHSXIr2wBLdyUGF0eyP(t8wBLyLvwzLvwzLvwzHvk4M6mmgcCVaR83QvhqI0)S1wjwFr4kodJHa3lWRy9L6gRMN8Jglbr7L8KyjiAVKN8HGR(elj3leifsihwfrUQ9YagAtQK8bKMRLyJL4mmgcCVajqgzzISmCaRViEi8WRyJLAi49pX7aVIfXq7tSrcoRawglxfPWI1WfcKclHw6BcSi9dpsIIclVVP1ifwK(HhjrrHxXgBS(IWvY9c8iwFr4AcAcdEeRMBczJuy59nTgPqc5oGxrc5idVIn2y9YzBTvIuy59nTgPWgBSeNblsHLql9nbsWjS8(MwJuibYWRibNWRyJnwFr4YA4cbEfRViCfNblEflv97RM9B6NifwEFtRrkSXgRViCzgRmWJyLSMaPWY7BAnsHn2yDsZzZnHSrkS8(MwJuyJnwjoBGuy59nTgPWgBS(IWL16DK34vS(IWvg0ej8i2y9ALDPzMajqMZyLcFTvs98mWsZALyXATgv7fjEflMXA9qchyImfWsRIv(B1KinGumalUQQU1wj342jTVFKeifsihsHvN0((rcPW6lc3t7LiHhX6lc3Vu34vSuJJ)3xQNNbw5hjYmPvM5zgR(5zGf)N4y9fHlXGBAI4rS(YGMq2yX)TfRZiXgYMyWnnrSi7awbnHSXQiYvTxgKx6Oal2VOTEUe1QbwT2luXs8pg0eYU(VV6mILlPySOClkgFGclj3leifsihw5VvR(AtEyJL4mmMhvfif2yj(hdAczt6u8QZiwfPjrMZmwFPUX60WFgjS(IW9msSHSjgCtteVI1zKydztm4MMOR9ms82MWsPGLwstKebEfBS(YoP99JesH1xQBSAEYpASXgBS(YoP99JesHLGO9sEsSeeTxYt(qWvFIL4mmgcCVajqgzzISmCaBSUOvBIibNvaRmM37RiAKGI5Yu(Ws(9OsAF)ijqcKHLQwWSXxY2AAcS4gdwIMZ6ybPTAzJ118OOYZry1rgBszn2esHeYHeoGeidvotkKJSmKPm4Kco7CMoKVdhWxfvWjSXgj4uoKcRmM37RiAKGI5Yu(W6l7K23psifwcI2l5jXsq0Ejp5dbx9jwIZWyiW9cKazKLjYYWbSXIZ2AAcQK23psoYQgibfZDaloBRTsbsHLO5PgPWs166BSxWRy5BSxCFtCValggChZ4pXfK88)AoS8n2lUC2wBLyjiAVGLQ11lecUFGhXs16kSFPkEeBSE1sTGisHLQ113yVGhXY3yV4YzBTvIfrTAGLVXEX9nX9cSWgBS6K23psifwPWdlfyYzSu)jERTsSYkRSYkRSYkRSWkfECTul9XImMual144)9L65zGv(X4doszMNzS(sDJvZt(rJL9ImpP5jEfl2VOTEUe1QbwT2luXkfE5DgjEBtyrYWQFEgyjAE)fyjodJHa3lqcKrwMildhW6ldAczJf)3wS(IWvq0EjpjEfRViCtHhxl1sF8iwbnHSXIuwRr1EroG0jRFkeIb0wNHXqhwsUxiqkKqoSkICv7Lbm0Muj5dinxlXgRuWn1zyme4Ebw5VvRoGeP)zRTsS(IWvCggdbUxGxXkfECTul9DTNrI32ewKmSeeTxYtILGO9sEYhcU6tS(IW9l1nEfRViEi8WRyJfXq7tSrcoRawglxfPWI1WfcKclHw6BcSi9dpsIIclVVP1ifwK(HhjrrHxXgBS(IWvY9c8iwFr4AcAcdEeRMBczJuy59nTgPqc5oGxrc5idVIn2y9fHR4myXRyjodwKclHw6BcKGty59nTgPqcKHxrcoHxXgBS(IWL1Wfc8kwVC2wBLifwEFtRrkSXglv97RM9B6NifwEFtRrkSXgRViCzgRmWJyLSMaPWY7BAnsHn2yDsZzZnHSrkS8(MwJuyJnwjoBGuy59nTgPWgBS(IWL16DK34vS(IWvg0ej8i2y9ALDPzMajqMZyLcFTvs98mWsZALyXLApERTsKclrZtnsH1zkerJLGyslDm2y5X1sKclbl3ek)LSynyWGbPO)j5G3VKT1wjTNjRFkechgiAEQZwhgiAEQvAhgiy5MiBDyGGLBcLMUDpyWGbdgySSCZaU03ediFaTNjRFkeIbK0aYgqsd84nrMo10nqXb06XBImDQhqVdiJUDpyWGbdgKI(NKdenp1z7a6zaT0sRhVjYKqlPLl9nbDdONb5OJEjJUbK0aAfSCtKTduCqo6OZHbIMNALEa9mGwAP1J3ezsOL0YL(MGUb0ZGC0rVKr3asAaTcwUju6bkoihD0T7bdgmiKQ7EWaS4MtICQNNbwCZjroP)grGfR1ytxrc5WI1ASPSJeYHf3CsKR8xYI1GbdgKI(NKdE)s2wBL0EMS(PqiCyGO5P2HbQHP50T7bdgmyWaJLLBgWL(Mya5dO9mz9tHqmGKgq2asAGhVjY0PMUbkoGwpEtKPt9a6Daz0T7bdgmyWGu0)KCGO5PEa9mGwAP1J3ezsOL0YL(MGUb0ZGC0rVKr3asAGAyAoD7EWGbdcP6UhmaRViC7exkm8oWRy9fHl3CsKJxXsWYnb1ZZaRZVrey1jUuy4Dq98mW6O9lzdS6exkm8ou(lzXAWGbdsr)tYbVFjBRTsAptw)uieomq08uNTomq08uR0omqnmnpBDyGAyAUst3UhmyWGbdmwwUzWr7xYgmqlAUKngq(apEtKjHws7zY6NcHyajnWJ3ez6ut3UhmyWGbdsr)tYbIMN6SDa9mG2J2VKnyGw0CjBmGKgOgMMNT05WarZtTspGEgq7r7xYgmqlAUKngqsdudtZvA629Gbdges1DpyawcwUjEIeYXKcyXnNe5iHdm5ewSwJn9asihwprcKPawzejCaRViCfSCtGxXI1ASjgrc5WsWYnrgrc5ysbSs2M3bs4awQ)eV1wjwmLpfWgRxTuliIuyDMcr0yD0(LSbdcw(tSXglwR1OAViXJyXmwRhs4atKPaw8FBXJyPvXk)VMdlUQQU1wj342jTVFKeifsihsHvN0((rcPWsno(FFPEEgyLFKiZKwzMNzS6NNbw8FIJ1xeUedUPjIhXs8pg0eYU(VV6mILlPySOClkgFGcRVu3yDA4pJewNrInKnXGBAIyr2bScAczJvrKRAVmiV0rbwI)XGMq2KofV6mIvrAsK5mJLK7fcKcjKdR83QvFTjpSX6lc3t7LiHhXsCggZJQcKcBS(YGMq2yX)TfRViC)sDJxX6lc3ZiXgYMyWnnr8kwNrInKnXGBAIU2ZiXBBclLcwSFrB9CjQvdSATxOInwFzN0((rcPW6l1nwnp5hn2yJnwYVhvs77hjbsGmSUOvBIibNvalvTGzJVKT10eyXngSEM37RiAKGI5Y6awQAXPH)8rwRejK7GtkCW5dyjAoRJfK2QLnwxZJIkphHvhzSjL1ytifsihs4asGmu5mPqoYYqMYGtk4SZz6q(oCaFvubNWgBKGtKHuy9LDs77hjKclXzyme4EbsGmYYezz4a2yXzBnnbvs77hjhzvdKWbS4sThV1wjsHLO5PgPW6mfIOXsqmPLogBS84AjsH1zkerJ1RrFInwVAPwqePW6mfIOX6O9lzdgeS8NyJnwDs77hjKcRu4HLcm5mwQ)eV1wjwzLvwzLvwzLvwyLcpUwQL(yDGP8Paw2lY8KMN4vSsHhxl1sFx7zK4TnHLsHCSuJJ)3xQNNbw5hJp4iLzEMXkfE5DgjEBtyPuihR(5zGLO59xGf7x0wpxIA1aRw7fQy9LbnHSXI)BlwFr4kiAVKNeVI1xeUPWJRLAPpEfRGMq2yrkR1OAVihq6K1pfcXaARZWyOdRViC)sDJxXkfCtDggdbUxGv(B1Qdir6F2AReRViCfNHXqG7f4vSeNHXqG7fibYiltKLHdyjiAVKNelbr7L8KKYAnQ2lsSKCVqGuiHCyve5Q2ldyOnPsYhWGG3eXgRViEi8WRyJfXq7tSrcoRawglxfPWI1WfcKclHw6BcSi9dpsIIclVVP1ifwK(HhjrrHxXgBSu1VVA2VPFIuy59nTgPWgBS(IWvg0ej8iwn3eYgPWY7BAnsHn2y9fHRK7f4rSeNblsHLql9nbsWjS8(MwJuibYWRibNWRyJnwFr4YmwzGhX6LZ2ARePWY7BAnsHn2y9fHlRHle4vSsC2aPWY7BAnsHn2yDsZzZnHSrkS8(MwJuyJnwFr4kodw8kwjRjqkS8(MwJuyJnwFr4YA9oYB8kwFr4AcAcdEeBSETYU0mtGeiZzSu1Itd)z1CwhlWIzDIvk81wj1ZZalnRvILAi49pX7aVILO5SowqARw2yrksqGIepGfxvv3ARKBC7K23pscKcBSygR1djCGjYual(VT4rS4ST2kfifwIMNAKclvRRxieC)apILQ1vy)sv8i2y9QLAbrKclvRRVXEbpILVXEXLZ2ARelIA1alFJ9I7BI7fyHn2yPvXk)V6ewpZ79vensqXCzDaRlA1MisWzfWs(9OsAF)ijqc5WkJ59(kIgjOyUmLpSu1Itd)5JSwjw5o4KchC(awSwRr1ErIhXQJm2KYASjKcjqgs4asWju585KZ57GZzkthCktziF5Ykl8vrfYa2yJeCYjKcRVStAF)iHuyjodJHa3lqcKrwMildhWgloBRPjOsAF)i5iRAGeoGfxQ94T2krkSenp1ifwNPqenwcIjT0XyJLhxlrkSotHiASEn6tSX6vl1cIifwNPqenwhTFjBWGGL)eBSXQtAF)iHuyLcpSuGjNXYErMN08eVIvk84APw6J1bMYNcyLcpUwQL(U2ZiXBBclsgwSFrB9CjQvdSATxOILAC8)(s98mWk)y8bhPmZZmwPWlVZiXBBclLc5y1ppdSenV)cSu)jERTsSYkRSYkRSYkRSW6ldAczJf)3wS(IWvq0EjpjEfRViCtHhxl1sF8kwbnHSXIuwRr1EroG0jRFkeIb0wNHXqhwsUxiqkKqoSkICv7Lbm0Muj5dyqWBIyJvk4M6mmgcCVaR83QvhqI0)S1wjwFr4kodJHa3lWRyjodJHa3lqcKrwMildhWsq0EjpjwcI2l5jjL1AuTxKy9fH7xQB8kwFr8q4HxXglIH2NyJeCwbSmwUksHfRHleifwcT03eyr6hEKeffwEFtRrkSi9dpsIIcVIn2y9fHlRHle4vS(IWvg0ej8iwn3eYgPWY7BAnsHn2y9fHRK7f4rSeNblsHLql9nbsWjS8(MwJuibYWRibNWRyJnwFr4YmwzGhX6LZ2ARePWY7BAnsHn2yPQFF1SFt)ePWY7BAnsHn2yLSMaPWY7BAnsHn2yDsZzZnHSrkS8(MwJuyJnwFr4kodw8kwjoBGuy59nTgPWgBS(IWL16DK34vS(IW1e0eg8i2y9ALDPzMajKltyPQfNg(ZQ5SowGfZ6eRu4RTsQNNbwAwRel1qW7FI3bEflwR1OAViXJyXvv1T2k5g3oP99JKaPWglMXA9qchyImfWI)BlEeloBRTsbsHLO5PgPWs166fcb3pWJyPADf2VufpInwVAPwqePWs166BSxWJy5BSxC5ST2kXIOwnWY3yV4(M4EbwyJnwAvSY)RKH1Z8EFfrJeumxwhW6IwTjIeCwbSKFpQK23pscKqoSYyEVVIOrckMlt5dlvT40WF(iRvIvUdoPWbNpGLO5SowqARw2yrksqGIepGvhzSjL1ytifsihQCMuihzzitzWjfC25mDiFhoGVkQGtibYqLZKt5lNtzLHSuWzNpKbNCkh(QOcoHn2ibNCgPW6zEVVIOrckMlRdyXzBnnbvs77hjhzvdKWbS4ST2kfifwIMNAKclvRRVXEbVILVXEXLZ2ARelbr7fS8n2lUVjUxGfddUJz8N4csE(B1QdOSPuiBSuTUEHqW9d8iwQwxH9lvXJyJ1RwQferkSuTU(g7f8iw(g7fxoBRTsSiQvdS8n2lUVjUxGf2yJfxQ94T2krkSenp1ifwNPqenwcIjT0XyJLhxlrkSotHiASEn6tSX6vl1cIifwNPqenwhTFjBWGGL)eBSXQtAF)iHuyLcpSuGjNXkfECTul9DTNrI32ewKmS(IW9l1nEfRu4X1sT0hRdmLpfWsno(FFPEEgyLFm(GJuM5zgRViCtHhxl1sF8kwSFrB9CjQvdSATxOILGO9sEsSeeTxYt(qWvFIv)8mWs08(lWs9N4T2kXkRSYkRSYkRSYcRVmOjKnw8FBX6lcxbr7L8K4vSSxK5jnpXRyf0eYglszTgv7f5asNS(PqigqBDggdDyjodJHa3lqcKDqHdzqbSsb3uNHXqG7fyL)wT6akBkfYgRViCfNHXqG7f4vSsHxENrI32ewkfYXsY9cbsHeYHvrKRAVmGH2KkjFadcEteBS(I4HWdVInwedTpXgj4ScyzSCvKclwdxiqkSeAPVjWI0p8ijkkS8(MwJuyr6hEKeffEfBSX6lcxj3lWJy9fHRjOjm4rSAUjKnsHL330AKcBSX6KMZMBczJuy59nTgPWgBSeNblsHLql9nbsWjS8(MwJuibYWRibNWRyJnwQ63xn730prkS8(MwJuyJnwVC2wBLifwEFtRrkSXgRViCznCHaVI1xeUmJvg4rSswtGuy59nTgPWgBS(IWvCgS4vSsC2aPWY7BAnsHn2y9fHlR17iVXRy9fHRmOjs4vSX61k7sZmbsixMWsvlon8NvZzDSalM1jwPWxBLuppdS0SwjwSwRr1ErIxXkJ59(kIgjOyw5dlMXA9qchyImfWsRIv(B1QdOSPuiBS4QQ6wBLCJBN0((rsGuiHCifwDs77hjKclX)yqtiBsNIxDgXQinjYCMXQFEgyX)jowIZWyEuvGuyJL4FmOjKD9FF1zelxsXyr5wum(afwFPUX60WFgjSKCVqGuiHCyL)wT6Rn5HnwbnHSXk)cUPjILAC8)(s98mWk)irMjTYmpZyJ1x2jTVFKqkSXgBSUOvBIibNval53JkP99JKajqgwFzN0((rcPWsq0EjpjwcI2l5jFi4QpXsCggdbUxGei7GchYGcyJLQwCA4pFK1kXk3bNu4GZhWs0CwhliTvlBSifjiqrIhWQJm2KYASjKcjKdvotkKJSmKPm4Kco7CMoKVdhWxfvWjKazOYzYP8LZPSYqwk4SZhYGtoLdFvubNWgBKGtkGuy9mV3xr0ibfZL1bS4STMMGkP99JKJSQbs4awCP2J3ARePWs08uJuyDMcr0yjiM0shJnwECTePW6mfIOX61OpXgRxTuliIuyDMcr0yD0(LSbdcw(tSXgRoP99JesHvk8WsbMCgl7fzEsZt8kwPWJRLAPpwhykFkGLK7fcKcjKdRIix1EzadTjvs(age8Mi2yLcpUwQL(U2ZiXBBclsgwIZWyiW9cKazhu4qguaRu4L3zK4TnHLsHCS6NNbwIM3FbwQ)eV1wjwzLvwzLvwzLvwy9LbnHSXI)BlwFr4kiAVKNeVI1xeUPWJRLAPpEeRGMq2yrkR1OAVihq6K1pfcXaARZWyOdl2VOTEUe1QbwT2luXkfCtDggdbUxGv(B1QdOSPuiBS(IWvCggdbUxGxXsno(FFPEEgyLFm(GJuM5zglbr7L8KyjiAVKNKuwRr1ErI1xeUFPUXRy9fXdHhEfBSigAFInsWzfWYy5QifwSgUqGuyj0sFtGfPF4rsuuy59nTgPWI0p8ijkk8k2yJ1xeUSgUqGxX6lcxzqtKWRy1CtiBKclVVP1if2yJ1xeUsUxGhXsCgSifwcT03eibNWY7BAnsHeidVIeCcVIn2y9fHlZyLbEeRtAoBUjKnsHL330AKcBSXsv)(Qz)M(jsHL330AKcBSXkznbsHL330AKcBSX6LZ2ARePWY7BAnsHn2y9fHR4myXRyL4SbsHL330AKcBSX6lcxwR3rEJxX6lcxtqtyWJyJ1Rv2LMzcKqUmHLQwCA4pRMZ6ybwmRtSsHV2kPEEgyPzTsSudbV)jEh4vSyTwJQ9IepIvgZ79vensqXSYhwmJ16HeoWezkGLwfR83QvhqztPq2difdWIRQQBTvYnUDs77hjbsHnwC2wBLcKclrZtnsHLQ11lecUFGhXs16kSFPkEeBSE1sTGisHLQ113yVGhXY3yV4YzBTvIfrTAGLVXEX9nX9cSWgBSUOvBIibNval53JkP99JKajKdRVStAF)iHuyjodJHa3lqcKDqHdzqbSXsvlon8NpYALyL7GtkCW5dyjAoRJfK2QLnwKIeeOiXdy1rgBszn2esHeYHkNjfYrwgYugCsbNDothY3Hd4RIk4esGmu5m5u(Y5uwzilfC25dzWjNYHVkQGtyJnsWPmGuyXzBnnbvs77hjhzvdKWbS4ST2kfifwIMNAKclvRRxieC)apILQ1vy)sv8i2y9QLAbrKclvRRVXEbpILVXEXLZ2ARelIA1alFJ9I7BI7fyHn2y1jTVFKqkSSxK5jnpXRyj5EHaPqc5WQiYvTxgWqBsLKpG0CTeBSeNHX8OQaPqc5qckKPSWgRVu3y18KF0yPgh)VVuppdSYpgFWrkZ8mJnwedTpXgj4ScyzSCvKcRViCnbnHbpIvZnHSrkS8(MwJuyJnwSgUqGuyj0sFtGfPF4rsuuyJL4myrkSeAPVjqcoHnwQ63xn730prkS8(MwJuyJnwjRjqkS8(MwJuyJnwFr4YA4cbEfReNnqkS8(MwJuyJnwFr4kodw8kwVC2wBLifwEFtRrkSXgRtAoBUjKnsHL330AKcBSX6lcxj3lWJy9fHlZyLbEeBSsHV2kPEEgyPzTsS0Qyve5Q2ldyOnPsYhqAUwIfR1AuTxK4vSygR1djCGjYualUQQU1wj342jTVFKeif2yDrR2ercoRawpZ79vensqXCzDal53JkP99JKajKdRmM37RiAKGI5dBKGt5dPWIZ2AAcQK23psoYQgiHdy1jTVFKqkSSxK5jnpXRyj5EHaPqc5WQiYvTxgWqBsLKpG0CTeBSeNHX8OQaPqc5qckKPSWglTKMijc8kwFPUXQ5j)OXsno(FFPEEgyLFm(GJuM5zgBSudbV)jEh4vSigAFInsWzfWYy5QifwIZGfPWsOL(Maj4e2y9fHRjOjm4rSAUjKnsHL330AKcBSX6lcxMXkd8iwSgUqGuyj0sFtGfPF4rsuuyJLQ(9vZ(n9tKclVVP1if2yJvIZgifwEFtRrkSXgRViCznCHaVIvYAcKclVVP1if2yJ1xeUIZGfVI1jnNn3eYgPWY7BAnsHn2y9YzBTvIuy59nTgPWgBS(IWL16DK34vS(IWvY9c8i2yLcFTvs98mWsZALyLX8EFfrJeumFyPvXQiYvTxgWqBsLKpG0CTCG99flMXA9qchyImfW6zEVVIOrckMlRdyXvv1T2k5g3oP99JKaPWgRlA1MisWzfWs(9OsAF)ijqc5WIZ2ARuGuyjAEQrkSuTUEHqW9d8iwQwxH9lvXJyJ1RwQferkSuTU(g7f8iw(g7fxoBRTsSiQvdS8n2lUVjUxGf2yJLQwCA4pFK1krc5CkdKDiFyXATgv7fjEfBKGtzcPWIZ2AAcQK23psoYQgiHdyXzBTvkqkSenp1ifwQwxVqi4(bEelvRRW(LQ4rSX6vl1cIifwQwxFJ9cEelFJ9IlNT1wjwe1Qbw(g7f33e3lWcBSXQtAF)iHuyjodJ5rvSCY5SY5mw2lY8KMN4vSKCVqGuiHCyL)CVtDsZoGY(zjInwFr4kodJ5rv8kwIZWyEuvGuiHCibNCoRCoJnwQXX)7l1ZZaR8JXhCKYmpZy9L6gRMN8Jglj3lWk)5EN6KMDaL9ZseR3VXiy5s8k2yrm0(eBKGZkGLXYvrkS(IW1e0eg8iwn3eYgPWY7BAnsHn2yXA4cbsHLql9nbwK(HhjrrHnwIZGfPWsOL(Maj4e2yPQFF1SFt)ePWY7BAnsHn2yLSMaPWY7BAnsHn2y9fHlRHle4vSsC2aPWY7BAnsHn2y9fHR4myXRy9YzBTvIuy59nTgPWgBSoP5S5Mq2ifwEFtRrkSXgRViCLCVapI1xeUmJvg4rSXkf(ARK65zGLM1kXsRIv(Z9o1jn7ak7NLiwSwRr1ErIxXIzSwpKWbMitbS4QQ6wBLCJBN0((rsGuyJ1fTAtej4Scy9mV3xr0ibfZL1bSKFpQK23pscKqoSYyEVVIOrcoLjSrcoLfsHfNT10eujTVFKCKvnqchWQtAF)iHuyjodJ5rvSCY5SY5mw2lY8KMN4vSKCVqGuiHCyL)CVtDsZoGY(zjInwQXX)7l1ZZaR8JXhCKYmpZy9fHR4mmMhvXRyj5Ebw5p37uN0SdOSFwIyPL0ejrGxX6l1nwnp5hnwIZWyEuvGuiHCibNCoRCoJnwVFJrWYL4vSXsne8(N4DGxXIyO9j2ibNvalJLRIuyjodwKclHw6BcKGtyJ1xeUMGMWGhXQ5Mq2ifwEFtRrkSXgRViCzgRmWJyXA4cbsHLql9nbwK(HhjrrHnwQ63xn730prkS8(MwJuyJnwjoBGuy59nTgPWgBS(IWL1Wfc8kwjRjqkS8(MwJuyJnwFr4kodw8kwN0C2CtiBKclVVP1if2yJ1lNT1wjsHL330AKcBSX6lcxwR3rEJxX6lcxj3lWJyJvk81wj1ZZalnRvIvgZ79vensWPmHLwfR8N7DQtA2bu2plXb23xSygR1djCGjYuaRN59(kIgjOyUSoGfxvv3ARKBC7K23pscKcBSUOvBIibNval53JkP99JKajKdloBRTsbsHLO5PgPWs166fcb3pWJyPADf2VufpInwVAPwqePWs166BSxWJy5BSxC5ST2kXIOwnWY3yV4(M4EbwyJnwQAXPH)8rwRejKZjfYkFzclwR1OAViXRyJeC(asHf7x0wpQiJnwkQ4ahfYMBgOmV1()ya9oGkxMgqkdxigqL0shh9aQeN1XrAGIko46Zbux0Y2EoqXbvBtEjUFOiZlhgq2HCkqVhYa9EiF7(9lzBTvslD7EWGbdmwwUzGH3HK95aYhCGPCkzGIkMzEhs2NdA7aolR9l7bV20Gl6M4awRXMgiUOBwIHy3dgmyGXYYndATxKiL1ytdiFa9vwzLvwzLvwz6RKbdgmqrfhqkRXMgyFh0AViX0agsu3Xa97asg5dYoPyajr2a6zGH3HK95aA5hT0edSNT2JBgKI3uiio4IwQAVqNddEiuhOFhqYiFq2jfdiPC0lzdONbgEhs2NdOnK2VpXbT2lg02bowAVmOjQfd0IbpT)0Gu8McbXbx0sv7f6Cyq2tXZb63bkLbzNumGKYrVKnGEgy4DizFoG2CdCKYdAnRJDyG0o4c)5G2oifVPqqCGwoO1EXasoZE0oGUDpyWGbgll3mq0CwhtkRXMgmG8b0xzLvwzLvwzLPVsgmyWafvCaPSgBAG9Da7pLczpq0CwhZ0agsu3Xa97aLc5dC2HbzpfHCG(Da5KpqHDpyWGb7EWGbdmwwUzGpR6aYhKJjfOxAZrpmxQ76mmM8Jl6Gw6FA4pJe9PJEZD4aDkz3dgmyGXYYndeNHXqG7fdiFq2JUodJ5r5RL2CzsHChCMoLS7bdgmWyz5MbUomW1HbUom44)9Lu2VSDyGRddo(FFzWpXBTv6WGJ)3xsKXZbKpG5sDZG44)9Lw638KF003HbIZWyiW9c6uYUhmyWGDpyWGb63bh)VVKiJNdiN8bsTzqtmK7EWGbdgmyWGu0)KC3dgmyqiv39GbdgS7bdgmWyz5Mbh)VVpeECTumG8bh)VVKiJNduCq2JMs7f0sNs29GbdgS7bdgmy3dgmyG(DWX)7lPSFzpGCYhOWGMyi39GbdgmyWGbIMZ6yszn20aYhqFLv(WbLv(Wb6RKbdgS7bdgmiKQ7EWGbd29GbdgOFhC8)((q4X1sXasg5duyqtmK7EWGbdgmyWGw7fjszn20aYhqFLvwzLvwzLvM(kz3dgmyqyeH(DWX)77dHhxlfdizKpGwFwvsISb0ZadVdj7t6g0ed5UhmyWGbdgmO1ErIuwJnnG8b0xzLvwzLv(Wb6RKDpyWGbHre63bh)VVpeECTumGKr(aA9zvjPC0lzdONbgEhs2N0nOjgYDpyWGbdgmyqR9IePSgBAa5dOVYkRSYhoC4a9vYUhmyWGWiIDpyWGbdgmyqR9IePSgBAa5dOVYkNHmKHmKHmqFLS7bdgmiKQ7EWGbd29GbdgS7bdgmif9pjhi6Kw6Z0Rn5XBAPF2elZsWSyk3B2ukBMmBILzjywQztj67WGw7fjszn2Kddo(FFFi84APWHbIMZ6yszn2Kddo(FFjL9lB6uYGDhs1DV7DV7DV7DV7DV7DV7DV7DV7DV7DV7DV7DJ1Z8EFfrJeumxwhWIZ2AAcQK23psoYQgiHdyXLApERTsKclrZtnsH1zkerJLGyslDm2y9QLAbrKcRZuiIgRJ2VKnyqWYFIn2y1jTVFKqkSsHhwhW6lcxTKMijc8iwPWJRLAPpwhWI9lARNlrTAGvR9cvSKCVqGuiHCy5Oq2CZaL5T2)hyJ1xeUPWJRLAPpEfRViC)sDJxX6ldAczJf)3wSsHhxl1sFx7zK4TnHfjdl1FI3AReRSYkRSYkRSYklScAczJfPSwJQ9ICaPtw)uiedOTodJHoSSxK5jnpXRy9fHR4mmgcCVaVILAC8)(s98mWk)y8bhPmZZmwPWlVZiXBBclsg5y9L6gRMN8JglXzyme4EbsGSSC2zS(I4HWdVInwedTpXgj4ScyzSCvKclwdxiqkSeAPVjWI0p8ijkkS8(MwJuyr6hEKeffEfBSX6lcxtqtyWJy1CtiBKclVVP1if2yJ1lNT1wjsHL330AKcBSXsCgSifwcT03eibNWY7BAnsHeidVIn2yPQFF1SFt)ePWY7BAnsHn2yL4SbsHL330AKcBSX6lcxwdxiWRy9fHlZyLbEeRtAoBUjKnsHL330AKcBSX6lcxXzWIxXkznbsHL330AKcBSX6lcxj3lWJy9fHRmOjs4rSX61k7sZmbsGmNXsvlon8NvZzDSalMflwPWxBLuppdS0SwjwAvSCuiBUzGY8w7)dSenN1XcsB1YglsrccuK4bSygR1djCGjYualoBRTsbsHLO5PgPWs166fcb3pWJyPADf2VufpInwVAPwqePWs166BSxWJy5BSxC5ST2kXIOwnWY3yV4(M4EbwyJnwCvvDRTsUXTtAF)ijqkSXkJ59(kIgjqMthW6IwTjIeCwbSKFpQK23pscKqoS(YoP99JesHL4mmgcCVajqwwo7m2yXATgv7fjEeBSXIgKqoNjlh2ica
--[[
Author : Twintop
Version : 2016-08-17
Made by Twintop
Copy/Pasta
]]--

--- WA Sections ---
{
    "m": "d",
    "s": "2.2.1.1",
    "d": {
        "expanded": true,
        "id": "Insanity Bar",
        "additional_triggers": [],
        "disjunctive": "all",
        "regionType": "group",
        "activeTriggerMode": -10,
        "selfPoint": "BOTTOMLEFT",
        "load": {
            "race": {
                "multi": []
            },
            "difficulty": {
                "multi": []
            },
            "use_class": "true",
            "role": {
                "multi": []
            },
            "faction": {
                "multi": []
            },
            "class": {
                "single": "PRIEST"
            },
            "talent": {
                "multi": []
            },
            "pvptalent": {
                "multi": []
            }
        },
        "yOffset": -200,
        "numTriggers": 1
    },
    "v": 1421,
    "a": [],
    "c": [
        {
            "width": 5.9076886177063,
            "displayText": "%c",
            "id": "Insanity Bar - Options and Trigger",
            "additional_triggers": [
                {
                    "untrigger": [],
                    "trigger": {
                        "custom_hide": "timed",
                        "custom": "-- Insanity Bar -- By Twintop - Illidan-US, 2016/08/17\nfunction(event,time,type,_,sourceGUID,sourcename,_,_,destGUID,destname,_,_,spellid,spellname,_,_,_,_,_,_,_,spellcritical,_,_,_,spellmultistrike)\n    local CurrentTime = GetTime();\n    if event == \"COMBAT_LOG_EVENT_UNFILTERED\" or event == \"COMBAT_LOG_EVENT\" then\n        \n        WA_Voidform_Total_Stacks = WA_Voidform_Total_Stacks or 0;\n        WA_Voidform_Previous_Stack_Time = WA_Voidform_Previous_Stack_Time or 0;\n        WA_Voidform_Drain_Stacks = WA_Voidform_Drain_Stacks or 0;\n        WA_Voidform_VoidTorrent_Stacks = WA_Voidform_VoidTorrent_Stacks or 0;\n        WA_Voidform_Dispersion_Stacks = WA_Voidform_Dispersion_Stacks or 0;\n        \n        if WA_Voidform_Total_Stacks >= 100 then\n            \n            if (CurrentTime - WA_Voidform_Previous_Stack_Time) >= 1 then\n                \n                WA_Voidform_Previous_Stack_Time = CurrentTime;\n                WA_Voidform_Total_Stacks = WA_Voidform_Total_Stacks + 1;\n                \n                \n                if WA_Voidform_VoidTorrent_Start == nil and WA_Voidform_Dispersion_Start == nil then\n                    \n                    WA_Voidform_Drain_Stacks = WA_Voidform_Drain_Stacks + 1;\n                    \n                elseif WA_Voidform_VoidTorrent_Start ~= nil then\n                    \n                    WA_Voidform_VoidTorrent_Stacks = WA_Voidform_VoidTorrent_Stacks + 1;\n                    \n                else\n                    \n                    WA_Voidform_Dispersion_Stacks = WA_Voidform_Dispersion_Stacks + 1;\n                    \n                end                \n            end\n            \n        end\n        \n        \n        if sourceGUID == UnitGUID(\"player\") then\n            \n            if spellid == 194249 then\n                \n                if type == \"SPELL_AURA_APPLIED\" then -- Entered Voidform\n                    \n                    WA_Voidform_Previous_Stack_Time = CurrentTime;\n                    WA_Voidform_VoidTorrent_Start = nil;\n                    WA_Voidform_Dispersion_Start = nil;\n                    WA_Voidform_Drain_Stacks = 1;\n                    WA_Voidform_Start_Time = CurrentTime;\n                    WA_Voidform_Total_Stacks = 1;\n                    WA_Voidform_VoidTorrent_Stacks = 0;\n                    WA_Voidform_Dispersion_Stacks = 0;\n                    \n                elseif type == \"SPELL_AURA_APPLIED_DOSE\" then -- New Voidform Stack\n                    \n                    WA_Voidform_Previous_Stack_Time = CurrentTime;\n                    WA_Voidform_Total_Stacks = WA_Voidform_Total_Stacks + 1;\n                    \n                    if WA_Voidform_VoidTorrent_Start == nil and WA_Voidform_Dispersion_Start == nil then\n                        \n                        WA_Voidform_Drain_Stacks = WA_Voidform_Drain_Stacks + 1;\n                        \n                    elseif WA_Voidform_VoidTorrent_Start ~= nil then\n                        \n                        WA_Voidform_VoidTorrent_Stacks = WA_Voidform_VoidTorrent_Stacks + 1;\n                        \n                    else\n                        \n                        WA_Voidform_Dispersion_Stacks = WA_Voidform_Dispersion_Stacks + 1;\n                        \n                    end\n                    \n                elseif type == \"SPELL_AURA_REMOVED\" then -- Exited Voidform\n                    if WA_Insanity_Bar_Voidform_Summary == true then\n                        print(\"Voidform Info:\");\n                        print(\"--------------------------\");\n                        print(string.format(\"Voidform Duration: %.2f seconds\", (CurrentTime-WA_Voidform_Start_Time)));\n                        \n                        if WA_Voidform_Total_Stacks > 100 then\n                            print(string.format(\"Voidform Stacks: 100 (+%.0f)\", (WA_Voidform_Total_Stacks-100)));\n                        else\n                            print(string.format(\"Voidform Stacks: %.0f\", WA_Voidform_Total_Stacks));\n                        end\n                        \n                        print(string.format(\"Dispersion Stacks: %.0f\", WA_Voidform_Dispersion_Stacks));\n                        print(string.format(\"Void Torrent Stacks: %.0f\", WA_Voidform_VoidTorrent_Stacks));\n                        print(string.format(\"Final Drain: %.0f stacks; %.1f / sec\", WA_Voidform_Drain_Stacks, WA_Voidform_Current_Drain_Rate));\n                    end\n                    \n                    WA_Voidform_VoidTorrent_Start = nil;\n                    WA_Voidform_Dispersion_Start = nil;\n                    WA_Voidform_Drain_Stacks = 0;\n                    WA_Voidform_Start_Time = nil;\n                    WA_Voidform_Total_Stacks = 0;\n                    WA_Voidform_VoidTorrent_Stacks = 0;\n                    WA_Voidform_Dispersion_Stacks = 0;\n                    \n                end\n                \n            elseif spellid == 205065 then\n                \n                if type == \"SPELL_AURA_APPLIED\" then -- Started channeling Void Torrent\n                    \n                    WA_Voidform_VoidTorrent_Start = CurrentTime;\n                    \n                elseif type == \"SPELL_AURA_REMOVED\" and WA_Voidform_VoidTorrent_Start ~= nil then -- Stopped channeling Void Torrent\n                    \n                    WA_Voidform_VoidTorrent_Start = nil;\n                    \n                end\n                \n            elseif spellid == 47585 then\n                \n                if type == \"SPELL_AURA_APPLIED\" then -- Started channeling Dispersion\n                    \n                    WA_Voidform_Dispersion_Start = CurrentTime;\n                    \n                elseif type == \"SPELL_AURA_REMOVED\" and WA_Voidform_Dispersion_Start ~= nil then -- Stopped channeling Dispersion\n                    \n                    WA_Voidform_Dispersion_Start = nil;\n                    \n                end\n                \n            elseif spellid == 212570 then\n                \n                if type == \"SPELL_AURA_APPLIED\" then -- Gain Surrender to Madness\n                    \n                    WA_Voidform_S2M_Activated = true;\n                    WA_Voidform_S2M_Start = CurrentTime;\n                    \n                elseif type == \"SPELL_AURA_REMOVED\" then -- Lose Surrender to Madness\n                    \n                    WA_Voidform_S2M_Activated = false;\n                    \n                end\n                \n            end\n            \n        elseif destGUID == UnitGUID(\"player\") and (type == \"UNIT_DIED\" or type == \"UNIT_DESTROYED\" or type == \"SPELL_INSTAKILL\") and WA_Voidform_S2M_Activated == true then\n            \n            WA_Voidform_S2M_Activated = false;\n            \n            if WA_Insanity_Bar_S2M_Wilhelm == true then\n                PlaySoundFile(\"Interface\\\\AddOns\\\\WeakAuras\\\\PowerAurasMedia\\\\Sounds\\\\wilhelm.ogg\", \"Master\");\n            end\n            \n            if WA_Insanity_Bar_S2M_Summary == true then\n                print(\"Surrender to Madness Info:\");\n                print(\"--------------------------\");\n                print(string.format(\"S2M Duration: %.2f seconds\", (CurrentTime-WA_Voidform_S2M_Start)));\n                print(string.format(\"Voidform Duration: %.2f seconds\", (CurrentTime-WA_Voidform_Start_Time)));\n                \n                if WA_Voidform_Total_Stacks > 100 then\n                    print(string.format(\"Voidform Stacks: 100 (+%.0f)\", (WA_Voidform_Total_Stacks-100)));\n                else\n                    print(string.format(\"Voidform Stacks: %.0f\", WA_Voidform_Total_Stacks));\n                end\n                \n                print(string.format(\"Dispersion Stacks: %.0f\", WA_Voidform_Dispersion_Stacks));\n                print(string.format(\"Void Torrent Stacks: %.0f\", WA_Voidform_VoidTorrent_Stacks));\n                print(string.format(\"Final Drain: %.0f stacks; %.1f / sec\", WA_Voidform_Drain_Stacks, WA_Voidform_Current_Drain_Rate));\n            end\n            \n            WA_Voidform_S2M_Start = nil;\n            WA_Voidform_VoidTorrent_Start = nil;\n            WA_Voidform_Dispersion_Start = nil;\n            WA_Voidform_Drain_Stacks = 0;\n            WA_Voidform_Start_Time = nil;\n            WA_Voidform_Total_Stacks = 0;\n            WA_Voidform_VoidTorrent_Stacks = 0;\n            WA_Voidform_Dispersion_Stacks = 0;\n            \n        end\n        \n    end \nend",
                        "custom_type": "status",
                        "events": "COMBAT_LOG_EVENT_UNFILTERED PLAYER_REGEN_DISABLED PLAYER_REGEN_ENABLED UNIT_AURA",
                        "event": "Health",
                        "type": "custom",
                        "subeventSuffix": "_CAST_START",
                        "subeventPrefix": "SPELL",
                        "check": "event"
                    }
                }
            ],
            "customText": "\n\n",
            "disjunctive": "any",
            "regionType": "text",
            "activeTriggerMode": 0,
            "load": {
                "difficulty": {
                    "multi": []
                },
                "faction": {
                    "multi": []
                },
                "use_spec": true,
                "class": {
                    "single": "PRIEST"
                },
                "talent": {
                    "multi": []
                },
                "race": {
                    "multi": []
                },
                "spec": {
                    "single": 3
                },
                "use_class": true,
                "role": {
                    "multi": []
                },
                "pvptalent": {
                    "multi": []
                }
            },
            "height": 11.815377235413,
            "trigger": {
                "custom_hide": "timed",
                "use_powertype": true,
                "unevent": "auto",
                "powertype": 13,
                "use_power": true,
                "event": "Power",
                "use_unit": true,
                "use_percentpower": false,
                "custom_type": "status",
                "type": "status"
            },
            "actions": {
                "init": {
                    "custom": "-- Insanity Bar -- By Twintop - Illidan-US, 2016/08/17\n------------------------------------------------------\n-- This is where you can customize the look and feel of the Insanity Bar.\n-- Colors are in the following format: Hexdecimal, AlphaRedGreenBlue, I.E.: AARRGGBB\n-- If you make edits to the following values and the Insanity Bar works, DO NOT expect support! I am not responsible for any issues that result from changes made after import.\n-- You have been warned!\n------------------------------------------------------\n-- AFTER YOU ALTER THESE VARIABLES, do /console reloadui\n------------------------------------------------------\n\n-- Bar and Text Colors\n\nWA_Insanity_Bar_Color_Bar_Status1 = \"FF763BAF\"; --Unable to trigger Voidform\nWA_Insanity_Bar_Color_Bar_Status2 = \"FF5C2F89\"; --Can trigger Voidform\nWA_Insanity_Bar_Color_Bar_Status2_Flash = \"FFAA1863\"; --Can trigger Voidform - Bar Flash Color\nWA_Insanity_Bar_Color_Bar_Status3 = \"FF431863\"; --Currently in Voidform\nWA_Insanity_Bar_Color_Bar_Status3_Warning = \"FFFFFF00\"; --You will fall out of Voidform within the next 2 GCDs if you don't generate Insanity quickly!\nWA_Insanity_Bar_Color_Bar_Status3_End = \"FFFF0000\"; --You will fall out of Voidform within the next GCD if you don't generate Insanity quickly!\nWA_Insanity_Bar_Color_Bar_Incoming = \"FFFFFFFF\"; --Incoming Insanity from a hardcast\nWA_Insanity_Bar_Color_Bar_AS = \"FFDF73FF\"; --Incoming Insanity from Auspicious Spirits\nWA_Insanity_Bar_Color_Text_Current = \"FFC2A3E0\"; --Text color of the current amount of Insanity\nWA_Insanity_Bar_Color_Text_Incoming = \"FFFFFFFF\"; --Text color of the incoming Insanity value from a hardcast\nWA_Insanity_Bar_Color_Text_AS = \"FFDF00FF\"; --Text color of the incoming Insanity value from Auspicious Spirits\nWA_Insanity_Bar_Color_Text_Left = \"00FFFFFF\"; --Text color of the information on the left side of the bar\nWA_Insanity_Bar_Color_Text_Middle = \"00FFFFFF\"; --Text color of the information in the middle of the bar during Voidform\n\n-- Bar Width and Height\n\nWA_Insanity_Bar_Width = 547; --Width of the bar, in pixels. Minimum 100px.\nWA_Insanity_Bar_Height = 26; --Height of the bar, in pixels. Minimum 1px.\n\n-- Bar Text\n\nWA_Insanity_Bar_Font_Size = 18; --Font size of all bar text. Minimum 4.\n\n-- Other Options\n\nWA_Insanity_Bar_Voidform_Summary = false; --Print out a summary of your Voidform to chat when you exit.\nWA_Insanity_Bar_S2M_Summary = true; --Print out a summary of your Surrender to Madness to chat when you die. Horribly.\nWA_Insanity_Bar_S2M_Wilhelm = true; --Play the Wilhelm Scream when you die in Surrender to Madness\n\n----------------------------------\n----------------------------------\n-- DO NOT EDIT BELOW THIS LINE! --\n----------------------------------\n----------------------------------\n\ngetRGBAFromString = function(s) \n    local _a = 1;\n    local _r = 0;\n    local _g = 1;\n    local _b = 0;\n    \n    if not (s == nil) then\n        \n        _a = tonumber(string.sub(s, 1, 2), 16);\n        _r = tonumber(string.sub(s, 3, 4), 16);\n        _g = tonumber(string.sub(s, 5, 6), 16);\n        _b = tonumber(string.sub(s, 7, 8), 16);\n        \n    end\n    \n    return _r, _g, _b, _a;\nend\n\nWA_Insanity_getRemainingTimeAndStackCount = function()         \n    WA_Voidform_Current_Insanity = WA_Voidform_Current_Insanity or 0;\n    WA_Voidform_Previous_Check_Time = WA_Voidform_Previous_Check_Time or 0;\n    WA_Voidform_VoidTorrent_Offset = WA_Voidform_VoidTorrent_Offset or 0;\n    WA_Voidform_Dispersion_Offset = WA_Voidform_Dispersion_Offset or 0;\n    WA_Voidform_Start_Time = WA_Voidform_Start_Time or 0;\n    WA_Voidform_Drain_Stacks = WA_Voidform_Drain_Stacks or 0;\n    WA_Voidform_Remaining_Time = WA_Voidform_Remaining_Time or 0;\n    WA_Voidform_Current_Drain_Rate =  WA_Voidform_Current_Drain_Rate or 0;\n    \n    local currentTime = GetTime();\n    WA_Voidform_Current_Insanity = UnitPower(\"player\", SPELL_POWER_SHADOW_ORBS, forceUpdate);\n    local _, _, _, vfCount, _, vfDuration, _, _, _, _, vfSpellId = UnitBuff(\"player\",GetSpellInfo(228264));\n    \n    if vfSpellId == nil then\n        WA_Voidform_Drain_Stacks = 0;\n        WA_Voidform_Current_Drain_Rate = 0;\n        return 0, 0, 0;\n    else\n        local down, up, lagHome, lagWorld = GetNetStats();\n        local TimeDiff = currentTime - WA_Voidform_Previous_Stack_Time;        \n        local remainingInsanity = tonumber(WA_Voidform_Current_Insanity);\n        \n        local remainingTime = 0;        \n        local moreStacks = 0;\n        local latency = lagWorld / 1000;\n        local workingStack = WA_Voidform_Drain_Stacks;\n        local startingStack = workingStack;\n        \n        if (remainingInsanity > 0) then\n            while (remainingInsanity > 0)\n            do\n                moreStacks = moreStacks+1;\n                local insanityDrain = 9.0 + ((workingStack - 1)/2);                \n                local stackTime = 1.0;\n                \n                if workingStack == startingStack then\n                    \n                    stackTime = 1.0 - TimeDiff + latency;\n                    \n                end\n                \n                \n                if (stackTime > 0) then                    \n                    if (insanityDrain * stackTime) >= remainingInsanity then                       \n                        stackTime = remainingInsanity / insanityDrain;\n                        remainingInsanity = 0;\n                    else\n                        remainingInsanity = remainingInsanity - (insanityDrain * stackTime);\n                    end\n                    \n                    remainingTime = remainingTime + stackTime;\n                end               \n                \n                workingStack = workingStack + 1;\n            end\n        end       \n        \n        WA_Voidform_Remaining_Time = remainingTime;\n        WA_Voidform_Current_Drain_Rate = 9.0 + ((WA_Voidform_Drain_Stacks - 1)/2);\n        \n        return remainingTime, vfCount, moreStacks;\n    end  \nend\n\nif WA_Insanity_Bar_Width <= 100 then\n    WA_Insanity_Bar_Width = 547;\nend\n\nif WA_Insanity_Bar_Height <= 1 then\n    WA_Insanity_Bar_Height = 26;\nend\n\nif WA_Insanity_Bar_Font_Size <= 4 then\n    WA_Insanity_Bar_Font_Size = 18;\nend\n\n\n\nWeakAurasSaved[\"displays\"][\"Insanity Bar - Border - Insanity Ready\"][\"width\"] = WA_Insanity_Bar_Width;\nWeakAurasSaved[\"displays\"][\"Insanity Bar - Main Bar\"][\"width\"] = WA_Insanity_Bar_Width;\nWeakAurasSaved[\"displays\"][\"Insanity Bar - Casting Bar\"][\"width\"] = WA_Insanity_Bar_Width;\nWeakAurasSaved[\"displays\"][\"Insanity Bar - Auspicious Spirits Bar\"][\"width\"] = WA_Insanity_Bar_Width;\nWeakAurasSaved[\"displays\"][\"Insanity Bar - Border - Insanity Ready\"][\"height\"] = WA_Insanity_Bar_Height;\nWeakAurasSaved[\"displays\"][\"Insanity Bar - Main Bar\"][\"height\"] = WA_Insanity_Bar_Height;\nWeakAurasSaved[\"displays\"][\"Insanity Bar - Casting Bar\"][\"height\"] = WA_Insanity_Bar_Height;\nWeakAurasSaved[\"displays\"][\"Insanity Bar - Auspicious Spirits Bar\"][\"height\"] = WA_Insanity_Bar_Height;\nWeakAurasSaved[\"displays\"][\"Insanity Bar - Text - Left\"][\"xOffset\"] = -(WA_Insanity_Bar_Width/2);\nWeakAurasSaved[\"displays\"][\"Insanity Bar - Text - Middle\"][\"xOffset\"] = 0;\nWeakAurasSaved[\"displays\"][\"Insanity Bar - Text - Right\"][\"xOffset\"] = (WA_Insanity_Bar_Width/2);\nWeakAurasSaved[\"displays\"][\"Insanity Bar - Text - Left\"][\"fontSize\"] = WA_Insanity_Bar_Font_Size;\nWeakAurasSaved[\"displays\"][\"Insanity Bar - Text - Middle\"][\"fontSize\"] = WA_Insanity_Bar_Font_Size;\nWeakAurasSaved[\"displays\"][\"Insanity Bar - Text - Right\"][\"fontSize\"] = WA_Insanity_Bar_Font_Size;\nWeakAurasSaved[\"displays\"][\"Insanity Bar - Non-LotV Marker 1\"][\"xOffset\"] = (WA_Insanity_Bar_Width/2);\nWeakAurasSaved[\"displays\"][\"Insanity Bar - Non-LotV Marker 2\"][\"xOffset\"] = (WA_Insanity_Bar_Width/2);\nWeakAurasSaved[\"displays\"][\"Insanity Bar - LotV Marker 1\"][\"xOffset\"] = (WA_Insanity_Bar_Width/5);\nWeakAurasSaved[\"displays\"][\"Insanity Bar - LotV Marker 2\"][\"xOffset\"] = (WA_Insanity_Bar_Width/5);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
                    "do_custom": true
                },
                "finish": {
                    "do_sound": false
                }
            },
            "numTriggers": 2
        },
        {
            "width": 67.938385009766,
            "id": "Insanity Bar - Text - Left",
            "disjunctive": "all",
            "regionType": "text",
            "activeTriggerMode": -10,
            "selfPoint": "LEFT",
            "justify": "CENTER",
            "numTriggers": 1,
            "frameStrata": 6,
            "displayText": "%c",
            "xOffset": -273.5,
            "customText": "-- Insanity Bar -- By Twintop - Illidan-US, 2016/08/17\nfunction()\n    \n    local haste = UnitSpellHaste(\"player\");\n    local _, _, _, liCount, _, liDuration, _, _, _, _, liSpellId = UnitBuff(\"player\",GetSpellInfo(197937));\n    \n    if WA_Insanity_getRemainingTimeAndStackCount ~= nil then\n        local remainingTime, stackCount, moreStacks = WA_Insanity_getRemainingTimeAndStackCount();        \n        \n        WA_Insanity_Bar_Color_Text_Left = WA_Insanity_Bar_Color_Text_Left or \"00FFFFFF\";\n        \n        if stackCount == 0 and moreStacks == 0 then\n            if liCount ~= nil and liCount > 0 then\n                return string.format(\"|c%s%.2f%%%% - %.0f LI\", WA_Insanity_Bar_Color_Text_Left, haste, liCount);\n            else\n                return string.format(\"|c%s%.2f%%%%\", WA_Insanity_Bar_Color_Text_Left, haste);\n            end            \n        elseif stackCount == 100 then\n            return string.format(\"|c%s%.2f%%%% - %.0f VF\", WA_Insanity_Bar_Color_Text_Left, haste, stackCount);\n        else\n            return string.format(\"|c%s%.2f%%%% - %.0f (+%.0f) VF\", WA_Insanity_Bar_Color_Text_Left, haste, stackCount, moreStacks);\n        end    \n        \n    else\n        \n        if stackCount == 0 and moreStacks == 0 then\n            if liCount ~= nil and liCount > 0 then\n                return string.format(\"|c%s%.2f%%%% - %.0f LI\", WA_Insanity_Bar_Color_Text_Left, haste, liCount);\n            else\n                return string.format(\"|c%s%.2f%%%%\", WA_Insanity_Bar_Color_Text_Left, haste);\n            end            \n        else\n            return \"\";\n        end\n        \n    end\nend",
            "load": {
                "difficulty": {
                    "multi": []
                },
                "faction": {
                    "multi": []
                },
                "use_spec": true,
                "class": {
                    "single": "PRIEST"
                },
                "talent": {
                    "multi": []
                },
                "race": {
                    "multi": []
                },
                "spec": {
                    "single": 3
                },
                "use_class": true,
                "role": {
                    "multi": []
                },
                "use_combat": true,
                "pvptalent": {
                    "multi": []
                }
            },
            "init_completed": 1,
            "trigger": {
                "powertype": 13,
                "custom_hide": "timed",
                "use_power": true,
                "event": "Power",
                "type": "status",
                "use_powertype": true,
                "use_unit": true,
                "unevent": "auto"
            },
            "height": 17.723064422607,
            "fontSize": 18
        },
        {
            "trigger": {
                "powertype": 13,
                "custom_hide": "timed",
                "use_power": true,
                "event": "Power",
                "type": "status",
                "use_powertype": true,
                "use_unit": true,
                "unevent": "auto"
            },
            "frameStrata": 6,
            "displayText": "%c",
            "id": "Insanity Bar - Text - Middle",
            "load": {
                "difficulty": {
                    "multi": []
                },
                "faction": {
                    "multi": []
                },
                "use_spec": true,
                "class": {
                    "single": "PRIEST"
                },
                "talent": {
                    "multi": []
                },
                "race": {
                    "multi": []
                },
                "spec": {
                    "single": 3
                },
                "use_class": true,
                "role": {
                    "multi": []
                },
                "use_combat": true,
                "pvptalent": {
                    "multi": []
                }
            },
            "customText": "-- Insanity Bar -- By Twintop - Illidan-US, 2016/08/17\nfunction()\n    WA_Voidform_Current_Drain_Rate = WA_Voidform_Current_Drain_Rate or 0;\n    \n    if WA_Insanity_getRemainingTimeAndStackCount ~= nil then\n        local remainingTime, stackCount, moreStacks = WA_Insanity_getRemainingTimeAndStackCount(); \n        \n        if WA_Voidform_Current_Drain_Rate == 0 then\n            return \"\";            \n        else            \n            return string.format(\"|c%s%.1fs - %.1f/s\", WA_Insanity_Bar_Color_Text_Middle, remainingTime, WA_Voidform_Current_Drain_Rate);            \n        end\n        \n    end\nend\n\n\n\n\n",
            "disjunctive": "all",
            "regionType": "text",
            "init_completed": 1,
            "activeTriggerMode": -10,
            "selfPoint": "CENTER",
            "numTriggers": 1,
            "justify": "CENTER",
            "width": 7.384693145752,
            "height": 17.723064422607,
            "fontSize": 18
        },
        {
            "width": 28.061569213867,
            "id": "Insanity Bar - Text - Right",
            "additional_triggers": [],
            "regionType": "text",
            "activeTriggerMode": 0,
            "init_completed": 1,
            "justify": "RIGHT",
            "numTriggers": 1,
            "frameStrata": 6,
            "displayText": "%c",
            "xOffset": 273.5,
            "customText": "-- Insanity Bar -- By Twintop - Illidan-US, 2016/08/17\nfunction()\n    WA_Insanity_Bar_Color_Text_Current = WA_Insanity_Bar_Color_Text_Current or \"FFC2A3E0\";\n    WA_Insanity_Bar_Color_Text_Incoming = WA_Insanity_Bar_Color_Text_Incoming or \"FFFFFFFF\";\n    WA_Insanity_Bar_Color_Text_AS = WA_Insanity_Bar_Color_Text_AS or \"FFDF00FF\";\n    \n    WA_Voidform_Current_Insanity = UnitPower(\"player\", SPELL_POWER_SHADOW_ORBS, forceUpdate);\n    WA_Insanity_Bar_Current_Cast_Gain = WA_Insanity_Bar_Current_Cast_Gain or 0;\n    local Current_Cast_Gain = WA_Insanity_Bar_Current_Cast_Gain;\n    WA_Insanity_Bar_AS_Gain = WA_Insanity_Bar_AS_Gain or 0;\n    WA_Insanity_Bar_Current_Cast_MindSear_Flag = WA_Insanity_Bar_Current_Cast_MindSear_Flag or 0;\n    \n    local specGroup = GetActiveSpecGroup();\n    local isFotMSelected = select(4, GetTalentInfo(1, 2, specGroup));   \n    local PIName = select(2, GetTalentInfo(6, 1, specGroup));\n    local isPIActive = select(11, UnitBuff(\"player\", PIName));\n    local S2MName = select(2, GetTalentInfo(7, 3, specGroup));\n    local isS2MActive = select(11, UnitBuff(\"player\", S2MName));\n    \n    if isFotMSelected then\n        \n        if WA_Insanity_Bar_Current_Cast_MindSear_Flag == 1 then\n            Current_Cast_Gain = string.format(\"~%.1f\", Current_Cast_Gain);    \n        else\n            Current_Cast_Gain = string.format(\"%.1f\", Current_Cast_Gain);\n        end\n        \n        if WA_Insanity_Bar_Current_Cast_Gain > 0 and WA_Insanity_Bar_AS_Gain > 0 then\n            return string.format(\"|c%s%s|r + |c%s%.1f|r + |c%s%.0f%%%%|r\", WA_Insanity_Bar_Color_Text_Incoming, Current_Cast_Gain, WA_Insanity_Bar_Color_Text_AS, WA_Insanity_Bar_AS_Gain, WA_Insanity_Bar_Color_Text_Current, WA_Voidform_Current_Insanity);\n        elseif WA_Insanity_Bar_Current_Cast_Gain > 0 then\n            return string.format(\"|c%s%s|r + |c%s%.0f%%%%|r\", WA_Insanity_Bar_Color_Text_Incoming, Current_Cast_Gain, WA_Insanity_Bar_Color_Text_Current, WA_Voidform_Current_Insanity);\n        elseif WA_Insanity_Bar_AS_Gain > 0 then\n            return string.format(\"|c%s%.1f|r + |c%s%.0f%%%%|r\", WA_Insanity_Bar_Color_Text_AS, WA_Insanity_Bar_AS_Gain, WA_Insanity_Bar_Color_Text_Current, WA_Voidform_Current_Insanity);\n        else\n            return string.format(\"|c%s%.0f%%%%|r\", WA_Insanity_Bar_Color_Text_Current, WA_Voidform_Current_Insanity);        \n        end\n        \n    else\n        \n        if WA_Insanity_Bar_Current_Cast_MindSear_Flag ==1 then\n            Current_Cast_Gain = string.format(\"~%.0f\", Current_Cast_Gain);    \n        else\n            Current_Cast_Gain = string.format(\"%.0f\", Current_Cast_Gain);\n        end\n        \n        if WA_Insanity_Bar_Current_Cast_Gain > 0 and WA_Insanity_Bar_AS_Gain > 0 then\n            return string.format(\"|c%s%s|r + |c%s%.0f|r + |c%s%.0f%%%%|r\", WA_Insanity_Bar_Color_Text_Incoming, Current_Cast_Gain, WA_Insanity_Bar_Color_Text_AS, WA_Insanity_Bar_AS_Gain, WA_Insanity_Bar_Color_Text_Current, WA_Voidform_Current_Insanity);\n        elseif WA_Insanity_Bar_Current_Cast_Gain > 0 then\n            return string.format(\"|c%s%s|r + |c%s%.0f%%%%|r\", WA_Insanity_Bar_Color_Text_Incoming, Current_Cast_Gain, WA_Insanity_Bar_Color_Text_Current, WA_Voidform_Current_Insanity);\n        elseif WA_Insanity_Bar_AS_Gain > 0 then\n            return string.format(\"|c%s%.0f|r + |c%s%.0f%%%%|r\", WA_Insanity_Bar_Color_Text_AS, WA_Insanity_Bar_AS_Gain, WA_Insanity_Bar_Color_Text_Current, WA_Voidform_Current_Insanity);\n        else\n            return string.format(\"|c%s%.0f%%%%|r\", WA_Insanity_Bar_Color_Text_Current, WA_Voidform_Current_Insanity);        \n        end\n        \n    end\n    \nend",
            "load": {
                "use_never": false,
                "faction": {
                    "multi": []
                },
                "use_spec": true,
                "class": {
                    "single": "PRIEST"
                },
                "talent": {
                    "multi": []
                },
                "race": {
                    "multi": []
                },
                "spec": {
                    "single": 3
                },
                "use_class": true,
                "role": {
                    "multi": []
                },
                "difficulty": {
                    "multi": []
                },
                "use_combat": true,
                "pvptalent": {
                    "multi": []
                }
            },
            "trigger": {
                "custom_hide": "timed",
                "use_powertype": true,
                "unevent": "auto",
                "powertype": 13,
                "use_power": true,
                "event": "Power",
                "use_unit": true,
                "use_percentpower": false,
                "type": "status"
            },
            "color": [
                null,
                0.9843137254902,
                0.9921568627451
            ],
            "selfPoint": "RIGHT",
            "actions": {
                "finish": {
                    "sound": " custom",
                    "do_sound": false
                }
            },
            "height": 17.723064422607,
            "fontSize": 18
        },
        {
            "additional_triggers": [
                {
                    "untrigger": {
                        "spellName": 228260
                    },
                    "trigger": {
                        "use_spellName": true,
                        "debuffType": "HELPFUL",
                        "unit": "player",
                        "names": [],
                        "realSpellName": "Void Eruption",
                        "spellIds": [],
                        "unevent": "auto",
                        "use_unit": true,
                        "event": "Action Usable",
                        "type": "status",
                        "subeventSuffix": "_CAST_START",
                        "spellName": 228260,
                        "subeventPrefix": "SPELL"
                    }
                },
                {
                    "untrigger": [],
                    "trigger": {
                        "unit": "player",
                        "debuffType": "HELPFUL",
                        "inverse": true,
                        "subeventPrefix": "SPELL",
                        "event": "Health",
                        "type": "aura",
                        "subeventSuffix": "_CAST_START",
                        "names": [
                            "Voidform"
                        ],
                        "spellIds": []
                    }
                }
            ],
            "regionType": "aurabar",
            "animation": {
                "main": {
                    "colorA": 1,
                    "x": 0,
                    "y": 0,
                    "colorType": "custom",
                    "alpha": 0.3,
                    "colorG": 1,
                    "colorR": 1,
                    "colorB": 1,
                    "alphaType": "alphaPulse",
                    "scalex": 1,
                    "duration": ".75",
                    "scaley": 1,
                    "type": "custom",
                    "use_alpha": true,
                    "rotate": 0,
                    "use_color": true,
                    "alphaFunc": "    return function(progress, start, delta)\n      local angle = (progress * 2 * math.pi) - (math.pi / 2)\n      return start + (((math.sin(angle) + 1)/2) * delta)\n    end\n  ",
                    "colorFunc": "return -- Insanity Bar -- By Twintop - Illidan-US, 2016/08/17\nfunction(progress, r1, g1, b1, a1, r2, g2, b2, a2)\n    \n    WA_Insanity_Bar_Color_Bar_Status1 = WA_Insanity_Bar_Color_Bar_Status1 or \"FF763BAF\";\n    WA_Insanity_Bar_Color_Bar_Status2_Flash = WA_Insanity_Bar_Color_Bar_Status2_Flash or \"995C2F89\";\n    WA_Insanity_Bar_Color_Bar_Status2 = WA_Insanity_Bar_Color_Bar_Status2 or \"FF5C2F89\";\n    WA_Insanity_Bar_Color_Bar_Status3 = WA_Insanity_Bar_Color_Bar_Status3 or\"FF431863\";\n    \n    WA_Voidform_Drain_Stacks = WA_Voidform_Drain_Stacks or 0;\n    WA_Voidform_Current_Insanity = WA_Voidform_Current_Insanity or 0;\n    \n    local specGroup = GetActiveSpecGroup();\n    local isLotVSelected = select(4, GetTalentInfo(7, 1, specGroup));\n    local a = 1;\n    local r = 0;\n    local g = 0;\n    local b = 0;\n    \n    getRGBAFromString = function(s) \n        local _a = 1;\n        local _r = 0;\n        local _g = 1;\n        local _b = 0;\n        \n        if not (s == nil) then\n            \n            _a = tonumber(string.sub(s, 1, 2), 16);\n            _r = tonumber(string.sub(s, 3, 4), 16);\n            _g = tonumber(string.sub(s, 5, 6), 16);\n            _b = tonumber(string.sub(s, 7, 8), 16);\n            \n        end\n        \n        return _r, _g, _b, _a;\n    end\n    \n    \n    if WA_Voidform_Drain_Stacks > 0 then\n        \n        r, g, b, a = getRGBAFromString(WA_Insanity_Bar_Color_Bar_Status3);  \n        \n    elseif WA_Voidform_Current_Insanity == 100 or (isLotVSelected and WA_Voidform_Current_Insanity >= 70) then\n        \n        r, g, b, a = getRGBAFromString(WA_Insanity_Bar_Color_Bar_Status2_Flash);\n        \n    else\n        \n        r, g, b, a = getRGBAFromString(WA_Insanity_Bar_Color_Bar_Status1);\n        \n    end\n    \n    return r/255, g/255, b/255, a/255;\nend\n\n\n\n"
                }
            },
            "activeTriggerMode": 0,
            "init_completed": 1,
            "texture": "Blizzard Raid Bar",
            "borderColor": [
                0.95686274509804,
                0.95294117647059,
                null,
                1
            ],
            "borderEdge": "Tooltip enlarged",
            "displayTextLeft": " ",
            "timerSize": 18,
            "actions": {
                "start": {
                    "glow_action": "show",
                    "do_custom": false,
                    "glow_frame": "WeakAuras:Insanity Bar - Main Bar",
                    "do_glow": false
                }
            },
            "borderSize": 12,
            "color": [],
            "backdropColor": [
                0,
                0,
                0,
                0.31410133838654
            ],
            "disjunctive": "all",
            "border": true,
            "barColor": [
                0.38039215686275,
                null,
                0.75686274509804
            ],
            "fontFlags": "OUTLINE",
            "height": 26,
            "width": 547,
            "borderOffset": 3,
            "timerFlags": "OUTLINE",
            "numTriggers": 3,
            "frameStrata": 5,
            "displayTextRight": " ",
            "icon": false,
            "id": "Insanity Bar - Border - Insanity Ready",
            "borderInset": 0,
            "customText": "\n\n",
            "timer": false,
            "text": false,
            "stacks": false,
            "textSize": 18,
            "sparkDesaturate": false,
            "load": {
                "use_never": false,
                "faction": {
                    "multi": []
                },
                "use_spec": true,
                "class": {
                    "single": "PRIEST",
                    "multi": {
                        "ROGUE": true
                    }
                },
                "talent": {
                    "multi": []
                },
                "race": {
                    "multi": []
                },
                "spec": {
                    "single": 3,
                    "multi": [
                        true,
                        null,
                        true
                    ]
                },
                "use_class": true,
                "role": {
                    "multi": []
                },
                "difficulty": {
                    "multi": []
                },
                "use_combat": true,
                "pvptalent": {
                    "multi": []
                }
            },
            "textColor": [
                null,
                0.99607843137255,
                0.98039215686274
            ],
            "xOffset": -0.00006103515625,
            "trigger": {
                "custom_hide": "timed",
                "use_powertype": true,
                "spellName": 0,
                "powertype": 13,
                "use_unit": true,
                "use_power": true,
                "event": "Power",
                "type": "status",
                "use_percentpower": false,
                "unevent": "auto",
                "use_spellName": true
            },
            "backgroundColor": [
                0.92549019607843,
                0.90588235294118,
                1,
                0
            ]
        },
        {
            "additional_triggers": [],
            "regionType": "aurabar",
            "animation": {
                "main": {
                    "colorA": 1,
                    "x": 0,
                    "y": 0,
                    "colorType": "custom",
                    "alpha": 0.3,
                    "colorG": 1,
                    "colorR": 1,
                    "colorB": 1,
                    "alphaType": "alphaPulse",
                    "scalex": 1,
                    "duration": ".75",
                    "scaley": 1,
                    "type": "custom",
                    "use_alpha": false,
                    "rotate": 0,
                    "use_color": true,
                    "alphaFunc": "    return function(progress, start, delta)\n      local angle = (progress * 2 * math.pi) - (math.pi / 2)\n      return start + (((math.sin(angle) + 1)/2) * delta)\n    end\n  ",
                    "colorFunc": "return -- Insanity Bar -- By Twintop - Illidan-US, 2016/08/17\nfunction(progress, r1, g1, b1, a1, r2, g2, b2, a2)\n    \n    WA_Insanity_Bar_Color_Bar_Status1 = WA_Insanity_Bar_Color_Bar_Status1 or \"FF763BAF\";\n    WA_Insanity_Bar_Color_Bar_Status2 = WA_Insanity_Bar_Color_Bar_Status2 or \"FF5C2F89\";\n    WA_Insanity_Bar_Color_Bar_Status3 = WA_Insanity_Bar_Color_Bar_Status3 or\"FF431863\";\n    WA_Insanity_Bar_Color_Bar_Status3_Warning = WA_Insanity_Bar_Color_Bar_Status3_Warning or\"FFFFFF00\";\n    WA_Insanity_Bar_Color_Bar_Status3_End = WA_Insanity_Bar_Color_Bar_Status3_End or\"FFFF0000\";\n    \n    WA_Voidform_Drain_Stacks = WA_Voidform_Drain_Stacks or 0;\n    WA_Voidform_Current_Insanity = WA_Voidform_Current_Insanity or 0;\n    \n    local specGroup = GetActiveSpecGroup();\n    local isLotVSelected = select(4, GetTalentInfo(7, 1, specGroup));\n    local a = 1;\n    local r = 0;\n    local g = 0;\n    local b = 0;\n    \n    if WA_Voidform_Drain_Stacks > 0 then\n        local haste = UnitSpellHaste(\"player\");\n        \n        local gcd = 1.5 / (1 + haste);\n        \n        if gcd < 0.75 then\n            \n            gcd = 0.75;\n            \n        end\n        \n        if gcd > WA_Voidform_Remaining_Time then        \n            \n            r, g, b, a = getRGBAFromString(WA_Insanity_Bar_Color_Bar_Status3_End);  \n            \n        elseif gcd*2 > WA_Voidform_Remaining_Time then\n            \n            r, g, b, a = getRGBAFromString(WA_Insanity_Bar_Color_Bar_Status3_Warning);  \n            \n        else\n            \n            r, g, b, a = getRGBAFromString(WA_Insanity_Bar_Color_Bar_Status3);  \n            \n        end\n        \n        \n    elseif WA_Voidform_Current_Insanity == 100 or (isLotVSelected and WA_Voidform_Current_Insanity >= 70) then\n        \n        r, g, b, a = getRGBAFromString(WA_Insanity_Bar_Color_Bar_Status2);\n        \n    else\n        \n        r, g, b, a = getRGBAFromString(WA_Insanity_Bar_Color_Bar_Status1);\n        \n    end\n    \n    return r/255, g/255, b/255, a/255;\nend"
                }
            },
            "activeTriggerMode": 0,
            "init_completed": 1,
            "texture": "Blizzard Raid Bar",
            "xOffset": -0.00006103515625,
            "borderInset": 1,
            "displayTextLeft": " ",
            "timerSize": 18,
            "height": 26,
            "borderSize": 12,
            "spark": true,
            "id": "Insanity Bar - Main Bar",
            "textSize": 18,
            "color": [],
            "backdropColor": [
                0,
                0,
                0,
                0.31410133838654
            ],
            "width": 547,
            "border": true,
            "barColor": [
                0.38039215686275,
                null,
                0.75686274509804
            ],
            "fontFlags": "OUTLINE",
            "borderBackdrop": "None",
            "frameStrata": 4,
            "borderOffset": 3,
            "timerFlags": "OUTLINE",
            "numTriggers": 1,
            "disjunctive": "any",
            "displayTextRight": " ",
            "icon": false,
            "actions": {
                "start": {
                    "glow_action": "show",
                    "do_custom": false,
                    "glow_frame": "WeakAuras:Insanity Bar - Main Bar",
                    "do_glow": false
                },
                "finish": {
                    "sound": " custom",
                    "do_sound": false,
                    "sound_channel": "SFX"
                }
            },
            "backgroundColor": [
                0.92549019607843,
                0.90588235294118,
                1,
                0
            ],
            "customText": "-- Insanity Bar -- By Twintop - Illidan-US, 2016/07/27\nfunction()\n    return \"\";\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
            "timer": false,
            "text": false,
            "stacks": false,
            "load": {
                "use_never": false,
                "faction": {
                    "multi": []
                },
                "use_spec": true,
                "class": {
                    "single": "PRIEST",
                    "multi": {
                        "ROGUE": true
                    }
                },
                "talent": {
                    "multi": []
                },
                "race": {
                    "multi": []
                },
                "spec": {
                    "single": 3,
                    "multi": [
                        true,
                        null,
                        true
                    ]
                },
                "use_class": true,
                "role": {
                    "multi": []
                },
                "difficulty": {
                    "multi": []
                },
                "use_combat": true,
                "pvptalent": {
                    "multi": []
                }
            },
            "sparkDesaturate": false,
            "borderColor": [
                0.17254901960784,
                0,
                0.34509803921569,
                1
            ],
            "textColor": [
                null,
                0.99607843137255,
                0.98039215686274
            ],
            "sparkColor": [
                0.95294117647059,
                0.94117647058823
            ],
            "trigger": {
                "custom_hide": "timed",
                "use_powertype": true,
                "unevent": "auto",
                "powertype": 13,
                "use_power": true,
                "event": "Power",
                "use_unit": true,
                "use_percentpower": false,
                "type": "status"
            },
            "borderEdge": "Blizzard Tooltip"
        },
        {
            "additional_triggers": [
                {
                    "untrigger": [],
                    "trigger": {
                        "fullscan": true,
                        "unit": "player",
                        "use_unit": true,
                        "debuffType": "HELPFUL",
                        "use_powertype": true,
                        "names": [],
                        "unevent": "auto",
                        "powertype": 13,
                        "spellIds": [],
                        "use_power": true,
                        "event": "Power",
                        "subeventPrefix": "SPELL",
                        "use_percentpower": false,
                        "subeventSuffix": "_CAST_START",
                        "type": "status"
                    }
                }
            ],
            "regionType": "aurabar",
            "animation": {
                "main": {
                    "colorFunc": "return -- Insanity Bar -- By Twintop - Illidan-US, 2016/08/17\nfunction(progress, r1, g1, b1, a1, r2, g2, b2, a2)\n    \n    WA_Insanity_Bar_Color_Text_Incoming = WA_Insanity_Bar_Color_Text_Incoming or \"FFFFFFFF\";\n    \n    local a = 0;\n    local r = 0;\n    local g = 0;\n    local b = 0;\n    \n    if getRGBAFromString ~= nil then\n        r, g, b, a = getRGBAFromString(WA_Insanity_Bar_Color_Bar_Incoming);\n    end\n    \n    \n    return r/255, g/255, b/255, a/255;\nend",
                    "x": 0,
                    "y": 0,
                    "colorType": "custom",
                    "alpha": 0.3,
                    "colorG": 1,
                    "colorR": 1,
                    "colorB": 1,
                    "alphaType": "alphaPulse",
                    "scalex": 1,
                    "duration": ".75",
                    "scaley": 1,
                    "colorA": 1,
                    "type": "custom",
                    "rotate": 0,
                    "use_color": true,
                    "use_alpha": false,
                    "alphaFunc": "    return function(progress, start, delta)\n      local angle = (progress * 2 * math.pi) - (math.pi / 2)\n      return start + (((math.sin(angle) + 1)/2) * delta)\n    end\n  "
                }
            },
            "trigger": {
                "custom_hide": "timed",
                "use_powertype": true,
                "use_unit": true,
                "unevent": "auto",
                "powertype": 3,
                "custom": "-- Insanity Bar -- By Twintop - Illidan-US, 2016/08/17\nfunction()\n    return true;\nend",
                "use_power": true,
                "event": "Insanity",
                "type": "custom",
                "custom_type": "status",
                "customDuration": "-- Insanity Bar -- By Twintop - Illidan-US, 2016/08/17\nfunction()\n    WA_Insanity_Bar_Current_Cast_Gain = 0;\n    WA_Voidform_Current_Insanity = UnitPower(\"player\", SPELL_POWER_SHADOW_ORBS, forceUpdate);\n    WA_Insanity_Bar_Current_Cast_MindSear_Flag = 0;\n    local currentSpell = UnitCastingInfo('player');\n    local currentChannel = UnitChannelInfo('player');\n    local specGroup = GetActiveSpecGroup();\n    local isFotMSelected = select(4, GetTalentInfo(1, 2, specGroup));\n    local PIName = select(2, GetTalentInfo(6, 1, specGroup));\n    local isPIActive = select(11, UnitBuff(\"player\", PIName));\n    local S2MName = select(2, GetTalentInfo(7, 3, specGroup));\n    local isS2MActive = select(11, UnitBuff(\"player\", S2MName));\n    \n    local currentSpellChannel = nil;\n    \n    if currentSpell == nil and currentChannel == nil then\n        WA_Insanity_Bar_Current_Cast_Gain = 0;\n        return 0,0,0,0;\n    elseif currentSpell == nil then\n        currentSpellChannel = currentChannel;\n    else\n        currentSpellChannel = currentSpell;\n    end\n    \n    local MB = GetSpellInfo(8092);\n    local MF = GetSpellInfo(15407);\n    local MSpike = GetSpellInfo(73510);\n    local MSear = GetSpellInfo(48045);\n    local SWV = GetSpellInfo(205351);\n    local VT = GetSpellInfo(34914)\n    \n    if select(1, currentSpellChannel) == select(1, MB) then --Mind Blast\n        \n        if isFotMSelected then\n            WA_Insanity_Bar_Current_Cast_Gain = 12 * 1.2;\n        else\n            WA_Insanity_Bar_Current_Cast_Gain = 12;\n        end\n        \n    elseif select(1, currentSpellChannel) == select(1, MF) then --Mind Flay\n        \n        if isFotMSelected then\n            WA_Insanity_Bar_Current_Cast_Gain = 2 * 1.2;\n        else\n            WA_Insanity_Bar_Current_Cast_Gain = 2;\n        end\n        \n    elseif select(1, currentSpellChannel) == select(1, MSear) then --Mind Sear, assuming 3 targets because we don't know how many there are!\n        \n        WA_Insanity_Bar_Current_Cast_Gain = 3;\n        WA_Insanity_Bar_Current_Cast_MindSear_Flag = 1;\n        \n    elseif select(1, currentSpellChannel) == select(1, MSpike) then --Mind Spike\n        \n        if isFotMSelected then\n            WA_Insanity_Bar_Current_Cast_Gain = 4 * 1.2;\n        else\n            WA_Insanity_Bar_Current_Cast_Gain = 4;\n        end\n        \n    elseif select(1, currentSpellChannel) == select(1, SWV) then --Shadow Word: Void    \n        WA_Insanity_Bar_Current_Cast_Gain = 25;\n    elseif select(1, currentSpellChannel) == select(1, VT) then --Vampric Touch\n        WA_Insanity_Bar_Current_Cast_Gain = 4;\n    else\n        WA_Insanity_Bar_Current_Cast_Gain = 0;\n        return 0,0,0,0;\n    end\n    \n    if isPIActive then\n        WA_Insanity_Bar_Current_Cast_Gain = WA_Insanity_Bar_Current_Cast_Gain * 1.25;\n    end\n    \n    if isS2MActive then\n        WA_Insanity_Bar_Current_Cast_Gain = WA_Insanity_Bar_Current_Cast_Gain * 2.5;\n    end\n    \n    \n    return (WA_Voidform_Current_Insanity+WA_Insanity_Bar_Current_Cast_Gain),100,0,0;\nend",
                "check": "update"
            },
            "init_completed": 1,
            "texture": "Blizzard Raid Bar",
            "borderColor": [
                0.92156862745098,
                0.90588235294118,
                null,
                1
            ],
            "borderEdge": "Blizzard Tooltip",
            "displayTextLeft": " ",
            "timerSize": 18,
            "height": 26,
            "borderSize": 3,
            "id": "Insanity Bar - Casting Bar",
            "backdropColor": [
                0,
                0,
                0,
                1
            ],
            "spark": true,
            "backgroundColor": [
                0.92156862745098,
                0.90588235294118,
                1,
                0
            ],
            "barColor": [
                null,
                0.97647058823529,
                0.99607843137255
            ],
            "fontFlags": "OUTLINE",
            "textSize": 18,
            "width": 547,
            "borderOffset": 3,
            "timerFlags": "OUTLINE",
            "numTriggers": 2,
            "frameStrata": 3,
            "displayTextRight": " ",
            "icon": false,
            "disjunctive": "any",
            "borderInset": 1,
            "customText": "\n\n",
            "timer": false,
            "text": false,
            "sparkHeight": 26,
            "load": {
                "use_never": false,
                "faction": {
                    "multi": []
                },
                "use_spec": true,
                "class": {
                    "single": "PRIEST",
                    "multi": {
                        "ROGUE": true
                    }
                },
                "talent": {
                    "multi": []
                },
                "race": {
                    "multi": []
                },
                "spec": {
                    "single": 3,
                    "multi": [
                        true,
                        null,
                        true
                    ]
                },
                "use_class": true,
                "role": {
                    "multi": []
                },
                "difficulty": {
                    "multi": []
                },
                "use_combat": true,
                "pvptalent": {
                    "multi": []
                }
            },
            "stacks": false,
            "sparkDesaturate": false,
            "textColor": [
                null,
                0.99607843137255,
                0.98039215686274
            ],
            "sparkWidth": 8,
            "activeTriggerMode": 0,
            "color": []
        },
        {
            "additional_triggers": [
                {
                    "untrigger": [],
                    "trigger": {
                        "unit": "player",
                        "use_powertype": true,
                        "unevent": "auto",
                        "powertype": 13,
                        "subeventSuffix": "_CAST_START",
                        "use_power": true,
                        "event": "Power",
                        "use_unit": true,
                        "use_percentpower": false,
                        "subeventPrefix": "SPELL",
                        "type": "status"
                    }
                }
            ],
            "regionType": "aurabar",
            "animation": {
                "main": {
                    "colorA": 1,
                    "x": 0,
                    "y": 0,
                    "colorType": "custom",
                    "alpha": 0.3,
                    "colorG": 1,
                    "colorR": 1,
                    "colorB": 1,
                    "alphaType": "alphaPulse",
                    "scalex": 1,
                    "duration": ".75",
                    "scaley": 1,
                    "type": "custom",
                    "use_alpha": false,
                    "rotate": 0,
                    "use_color": true,
                    "alphaFunc": "    return function(progress, start, delta)\n      local angle = (progress * 2 * math.pi) - (math.pi / 2)\n      return start + (((math.sin(angle) + 1)/2) * delta)\n    end\n  ",
                    "colorFunc": "return -- Insanity Bar -- By Twintop - Illidan-US, 2016/08/17\nfunction(progress, r1, g1, b1, a1, r2, g2, b2, a2)\n    \n    WA_Insanity_Bar_Color_Text_AS = WA_Insanity_Bar_Color_Text_AS or \"FFDF00FF\";\n    \n    local a = 1;\n    local r = 0;\n    local g = 0;\n    local b = 0;\n    \n    if not (WA_Insanity_Bar_Color_Bar_AS == nil) and not (getRGBAFromString == nil) then\n        r, g, b, a = getRGBAFromString(WA_Insanity_Bar_Color_Bar_AS);\n    end\n    \n    return r/255, g/255, b/255, a/255;\nend"
                }
            },
            "activeTriggerMode": 0,
            "init_completed": 1,
            "texture": "Blizzard Raid Bar",
            "borderColor": [
                0.92156862745098,
                0.90588235294118,
                null,
                1
            ],
            "borderEdge": "Blizzard Tooltip",
            "displayTextLeft": " ",
            "timerSize": 18,
            "height": 26,
            "borderSize": 3,
            "color": [],
            "disjunctive": "any",
            "spark": true,
            "backgroundColor": [
                0.92156862745098,
                0.90588235294118,
                1,
                0
            ],
            "barColor": [
                null,
                null,
                0.89019607843137
            ],
            "fontFlags": "OUTLINE",
            "width": 547,
            "frameStrata": 2,
            "sparkDesaturate": false,
            "timerFlags": "OUTLINE",
            "numTriggers": 2,
            "borderOffset": 3,
            "displayTextRight": " ",
            "icon": false,
            "borderInset": 1,
            "trigger": {
                "custom_hide": "timed",
                "use_powertype": true,
                "use_unit": true,
                "unevent": "auto",
                "powertype": 3,
                "custom": "-- Insanity Bar -- By Twintop - Illidan-US, 2016/08/17\nfunction()\n    return true;\nend",
                "use_power": true,
                "event": "Insanity",
                "type": "custom",
                "custom_type": "status",
                "customDuration": "-- Insanity Bar -- By Twintop - Illidan-US, 2016/08/17\nfunction()\n    WA_Voidform_Current_Insanity = UnitPower(\"player\", SPELL_POWER_SHADOW_ORBS, forceUpdate);\n    WA_Insanity_Bar_Current_Cast_Gain = WA_Insanity_Bar_Current_Cast_Gain or 0;\n    WA_Insanity_Bar_AS_Gain = 0;\n    local currentSpell = UnitCastingInfo('player');\n    local specGroup = GetActiveSpecGroup();\n    local isFotMSelected = select(4, GetTalentInfo(1, 2, specGroup));\n    local isLotVSelected = select(4, GetTalentInfo(7, 1, specGroup));\n    local PIName = select(2, GetTalentInfo(6, 1, specGroup));\n    local isPIActive = select(11, UnitBuff(\"player\", PIName));\n    local S2MName = select(2, GetTalentInfo(7, 3, specGroup));\n    local isS2MActive = select(11, UnitBuff(\"player\", S2MName));   \n    \n    local totalSAs = 0;    \n    WA_Insanity_Bar_AS_Gain = 0;\n    local color = \"FFFFFFFF\";\n    local insanityColor = \"FFFFFFFF\";\n    local specGroup = GetActiveSpecGroup();\n    local _, _, _, vfCount, _, vfDuration, _, _, _, _, vfSpellId = UnitBuff(\"player\",\"Voidform\");\n    \n    WA_SA_NUM_UNITS = WA_SA_NUM_UNITS or 0;\n    \n    if WA_SA_NUM_UNITS > 0 then\n        for guid,count in pairs(WA_SA_STATS) do\n            totalSAs = totalSAs + WA_SA_STATS[guid].Count;\n        end\n        \n        if totalSAs > WA_SA_TOTAL then\n            WA_Insanity_Bar_AS_Gain = WA_SA_TOTAL or 0;\n        else\n            WA_Insanity_Bar_AS_Gain = totalSAs or 0;\n        end\n    else\n        WA_Insanity_Bar_AS_Gain = -2;\n    end\n    \n    if WA_Insanity_Bar_AS_Gain <= 0 then\n        WA_Insanity_Bar_AS_Gain = 0;\n    end\n    \n    if WA_Insanity_Bar_AS_Gain == 0 then\n        return 0,0,0,0;\n    end    \n    \n    WA_Insanity_Bar_AS_Gain = WA_Insanity_Bar_AS_Gain * 4;    \n    \n    if isPIActive then\n        WA_Insanity_Bar_AS_Gain = WA_Insanity_Bar_AS_Gain * 1.25;\n    end\n    \n    if isS2MActive then\n        WA_Insanity_Bar_AS_Gain = WA_Insanity_Bar_AS_Gain * 2.5;\n    end\n    \n    return (WA_Voidform_Current_Insanity+WA_Insanity_Bar_Current_Cast_Gain+(WA_Insanity_Bar_AS_Gain)),100,0,0;\nend",
                "check": "update"
            },
            "customText": "\n\n",
            "timer": false,
            "text": false,
            "sparkHeight": 26,
            "textSize": 18,
            "load": {
                "use_never": false,
                "faction": {
                    "multi": []
                },
                "use_spec": true,
                "class": {
                    "single": "PRIEST",
                    "multi": {
                        "ROGUE": true
                    }
                },
                "use_talent": true,
                "race": {
                    "multi": []
                },
                "spec": {
                    "single": 3,
                    "multi": [
                        true,
                        null,
                        true
                    ]
                },
                "use_class": true,
                "role": {
                    "multi": []
                },
                "difficulty": {
                    "multi": []
                },
                "use_combat": true,
                "talent": {
                    "single": 14,
                    "multi": []
                },
                "pvptalent": {
                    "multi": []
                }
            },
            "stacks": false,
            "textColor": [
                null,
                0.99607843137255,
                0.98039215686274
            ],
            "sparkWidth": 8,
            "backdropColor": [
                0,
                0,
                0,
                1
            ],
            "id": "Insanity Bar - Auspicious Spirits Bar"
        },
        {
            "frameStrata": 6,
            "additional_triggers": [
                {
                    "untrigger": [],
                    "trigger": {
                        "custom_hide": "timed",
                        "debuffType": "HELPFUL",
                        "spellIds": [],
                        "unit": "player",
                        "subeventPrefix": "SPELL",
                        "event": "Health",
                        "type": "aura",
                        "subeventSuffix": "_CAST_START",
                        "names": [
                            "Voidform"
                        ],
                        "inverse": true
                    }
                }
            ],
            "id": "Insanity Bar - Non-LotV Marker 1",
            "xOffset": 273.5,
            "load": {
                "use_never": false,
                "faction": {
                    "multi": []
                },
                "use_spec": true,
                "class": {
                    "single": "PRIEST"
                },
                "use_talent": false,
                "race": {
                    "multi": []
                },
                "spec": {
                    "single": 3
                },
                "use_class": true,
                "role": {
                    "multi": []
                },
                "use_combat": true,
                "difficulty": {
                    "multi": []
                },
                "talent": {
                    "single": 19,
                    "multi": [
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        true,
                        true
                    ]
                },
                "pvptalent": {
                    "multi": []
                }
            },
            "height": 100,
            "regionType": "texture",
            "width": 15,
            "trigger": {
                "power_operator": "<",
                "spellName": 228260,
                "custom_hide": "timed",
                "power": "100",
                "use_targetRequired": false,
                "use_unit": true,
                "health_operator": ">",
                "unevent": "auto",
                "use_spellName": true,
                "realSpellName": "Void Eruption",
                "use_power": true,
                "use_health": true,
                "type": "status",
                "use_inverse": true,
                "health": "0",
                "event": "Action Usable"
            },
            "init_completed": 1,
            "numTriggers": 2,
            "untrigger": {
                "spellName": 228260
            },
            "activeTriggerMode": 0,
            "blendMode": "ADD",
            "texture": "Interface\\CastingBar\\UI-CastingBar-Spark"
        },
        {
            "xOffset": 273.5,
            "frameStrata": 6,
            "load": {
                "use_never": false,
                "use_combat": true,
                "use_spec": true,
                "class": {
                    "single": "PRIEST"
                },
                "use_talent": false,
                "race": {
                    "multi": []
                },
                "spec": {
                    "single": 3
                },
                "use_class": true,
                "role": {
                    "multi": []
                },
                "faction": {
                    "multi": []
                },
                "difficulty": {
                    "multi": []
                },
                "talent": {
                    "single": 19,
                    "multi": [
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        true,
                        true
                    ]
                },
                "pvptalent": {
                    "multi": []
                }
            },
            "id": "Insanity Bar - Non-LotV Marker 2",
            "additional_triggers": [
                {
                    "untrigger": [],
                    "trigger": {
                        "unit": "player",
                        "debuffType": "HELPFUL",
                        "inverse": true,
                        "subeventPrefix": "SPELL",
                        "event": "Health",
                        "type": "aura",
                        "subeventSuffix": "_CAST_START",
                        "names": [
                            "Voidform"
                        ],
                        "spellIds": []
                    }
                }
            ],
            "height": 100,
            "width": 15,
            "regionType": "texture",
            "animation": {
                "main": {
                    "use_scale": true,
                    "x": 0,
                    "y": 0,
                    "colorType": "straightColor",
                    "scaleFunc": "    return function(progress, startX, startY, scaleX, scaleY)\n      local angle = (progress * 2 * math.pi) - (math.pi / 2)\n      return startX + (((math.sin(angle) + 1)/2) * (scaleX - 1)), startY + (((math.sin(angle) + 1)/2) * (scaleY - 1))\n    end\n  ",
                    "colorG": 0,
                    "colorR": 0.52549019607843,
                    "colorB": 1,
                    "alphaType": "alphaPulse",
                    "scalex": 1.75,
                    "duration": ".5",
                    "scaley": 1.5,
                    "colorA": 1,
                    "rotate": 0,
                    "scaleType": "pulse",
                    "colorFunc": "    return function(progress, r1, g1, b1, a1, r2, g2, b2, a2)\n      return r1 + (progress * (r2 - r1)), g1 + (progress * (g2 - g1)), b1 + (progress * (b2 - b1)), a1 + (progress * (a2 - a1))\n    end\n  ",
                    "use_alpha": true,
                    "type": "custom",
                    "use_color": false,
                    "alphaFunc": "    return function(progress, start, delta)\n      local angle = (progress * 2 * math.pi) - (math.pi / 2)\n      return start + (((math.sin(angle) + 1)/2) * delta)\n    end\n  ",
                    "alpha": 0.3
                }
            },
            "activeTriggerMode": 0,
            "init_completed": 1,
            "numTriggers": 2,
            "untrigger": {
                "spellName": 228260
            },
            "trigger": {
                "power_operator": ">=",
                "custom_hide": "timed",
                "power": "100",
                "health": "0",
                "unevent": "auto",
                "spellName": 228260,
                "health_operator": ">",
                "use_spellName": true,
                "use_power": true,
                "use_health": true,
                "use_unit": true,
                "realSpellName": "Void Eruption",
                "event": "Action Usable",
                "type": "status"
            },
            "blendMode": "ADD",
            "texture": "Interface\\CastingBar\\UI-CastingBar-Spark"
        },
        {
            "frameStrata": 6,
            "id": "Insanity Bar - LotV Marker 1",
            "additional_triggers": [
                {
                    "untrigger": [],
                    "trigger": {
                        "unit": "player",
                        "debuffType": "HELPFUL",
                        "spellIds": [],
                        "subeventPrefix": "SPELL",
                        "event": "Health",
                        "type": "aura",
                        "subeventSuffix": "_CAST_START",
                        "names": [
                            "Voidform"
                        ],
                        "inverse": true
                    }
                }
            ],
            "xOffset": 109.4,
            "load": {
                "use_never": false,
                "use_combat": true,
                "use_spec": true,
                "class": {
                    "single": "PRIEST"
                },
                "use_talent": true,
                "race": {
                    "multi": []
                },
                "spec": {
                    "single": 3
                },
                "use_class": true,
                "role": {
                    "multi": []
                },
                "faction": {
                    "multi": []
                },
                "difficulty": {
                    "multi": []
                },
                "talent": {
                    "single": 19,
                    "multi": []
                },
                "pvptalent": {
                    "multi": []
                }
            },
            "regionType": "texture",
            "height": 100,
            "activeTriggerMode": 0,
            "width": 15,
            "numTriggers": 2,
            "untrigger": {
                "spellName": 228260
            },
            "trigger": {
                "power_operator": "<",
                "custom_hide": "timed",
                "power": "60",
                "health_operator": ">",
                "health": "0",
                "use_spellName": true,
                "unevent": "auto",
                "realSpellName": "Void Eruption",
                "event": "Action Usable",
                "use_power": true,
                "use_health": true,
                "type": "status",
                "use_inverse": true,
                "use_unit": true,
                "spellName": 228260
            },
            "blendMode": "ADD",
            "texture": "Interface\\CastingBar\\UI-CastingBar-Spark"
        },
        {
            "trigger": {
                "power_operator": ">=",
                "custom_hide": "timed",
                "power": "60",
                "health_operator": ">",
                "unevent": "auto",
                "spellName": 228260,
                "health": "0",
                "use_spellName": true,
                "use_power": true,
                "use_health": true,
                "use_unit": true,
                "realSpellName": "Void Eruption",
                "event": "Action Usable",
                "type": "status"
            },
            "frameStrata": 6,
            "load": {
                "use_never": false,
                "faction": {
                    "multi": []
                },
                "use_spec": true,
                "class": {
                    "single": "PRIEST"
                },
                "use_talent": true,
                "race": {
                    "multi": []
                },
                "spec": {
                    "single": 3
                },
                "use_class": true,
                "role": {
                    "multi": []
                },
                "use_combat": true,
                "difficulty": {
                    "multi": []
                },
                "talent": {
                    "single": 19,
                    "multi": []
                },
                "pvptalent": {
                    "multi": []
                }
            },
            "id": "Insanity Bar - LotV Marker 2",
            "additional_triggers": [
                {
                    "untrigger": [],
                    "trigger": {
                        "unit": "player",
                        "debuffType": "HELPFUL",
                        "spellIds": [],
                        "subeventPrefix": "SPELL",
                        "event": "Health",
                        "type": "aura",
                        "subeventSuffix": "_CAST_START",
                        "names": [
                            "Voidform"
                        ],
                        "inverse": true
                    }
                }
            ],
            "height": 100,
            "width": 15,
            "regionType": "texture",
            "animation": {
                "main": {
                    "colorA": 1,
                    "x": 0,
                    "y": 0,
                    "colorType": "straightColor",
                    "use_alpha": true,
                    "colorG": 0,
                    "colorR": 0.52549019607843,
                    "colorB": 1,
                    "alphaType": "alphaPulse",
                    "scalex": 1.75,
                    "duration": ".5",
                    "scaley": 1.5,
                    "rotate": 0,
                    "use_scale": true,
                    "scaleType": "pulse",
                    "colorFunc": "    return function(progress, r1, g1, b1, a1, r2, g2, b2, a2)\n      return r1 + (progress * (r2 - r1)), g1 + (progress * (g2 - g1)), b1 + (progress * (b2 - b1)), a1 + (progress * (a2 - a1))\n    end\n  ",
                    "alphaFunc": "    return function(progress, start, delta)\n      local angle = (progress * 2 * math.pi) - (math.pi / 2)\n      return start + (((math.sin(angle) + 1)/2) * delta)\n    end\n  ",
                    "type": "custom",
                    "use_color": false,
                    "scaleFunc": "    return function(progress, startX, startY, scaleX, scaleY)\n      local angle = (progress * 2 * math.pi) - (math.pi / 2)\n      return startX + (((math.sin(angle) + 1)/2) * (scaleX - 1)), startY + (((math.sin(angle) + 1)/2) * (scaleY - 1))\n    end\n  ",
                    "alpha": 0.3
                }
            },
            "activeTriggerMode": 0,
            "init_completed": 1,
            "numTriggers": 2,
            "untrigger": {
                "spellName": 228260
            },
            "xOffset": 109.4,
            "blendMode": "ADD",
            "texture": "Interface\\CastingBar\\UI-CastingBar-Spark"
        }
    ]
}