--- WeakAura Strings ---
dq1wSdqifvQyrOGlrjYNqjvLrHsCkuOvjrv9kbknlPOBPs2fc4xiu1WePoMeSmvkptkX0qj5AIK2gcY3eOACiqNdHkRtrLY7qiZdLuvDpjY(eOWbrPwOaEOkvtKsvUiLO2iLWhrOmsusLtkHwPiEPIkvQzsPs3uIk7uk8tuszOIewkLQ6Pcnvf5QkQyRcKVkLASkQu1zfOiVvKOMlkPk3vKi7vv)vsdMCykwSeLhRqtwbxgPnRcFMsA0kkNMQwTaf1RLsA2i62QODtLFlQHJIoUIkvYYr1ZLQPR01f02vu13PuX4rqDEkL1ROsMVevz)WFHF6JMF63p2)4ncCJafiaR(45hh(4Wp9rcZAhhD6(nyvQFKtT6ZUjBmPF0kphY8JMX1ppDI7TALYlxEG(nUkK(JucZ04gOdFzF0gRDC0P7346gRy1h7uYJuK9U9JbyTPjwRC21Ywm9rZWGF9zNHSUCVvRuE)N(9Jd(EWCOBC9Zt)OHK8JUWZjU3QvkV)nk8rYSz4N(4AiPU9N(4zi56)PF)9JJKME)N(y37Sss)ykSFrlhN(9Jd(Jd)yi5A7N(4zi56)PF)9JCZi9N(4zi56)PF)9JhMX1ND)0hpdjx)p97VFK58mxdj1T)0hpdjx)p97VFKNjP)0hpdjx)p97VFmStRJKME)JlpK(7h9dFSORBC(1guad)3po(tFJc)0hh8DMKgBtucVF0sJFCmSV5ZjkH3pIeK8ro1Qp7MSXK(XLs49JMX1ppDI7TALYlxEG(ns)rVZV1X8jts6sh(gf(OzC9zx)N(4H357Z(PpoKR9COB4l73p6D(9N(4qUog2385h4JJH9nF(XRlOIUUX5xBqbmCORlOa2GMSJ3TzMqxqfjj9dg31CInHULUaHi(0eK4leCKCDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDHKRlOPz(oKVdzNzuofYwoeA04Ggd7B(0pxuODgfImNBfY4gGoOusO8b0oJcv01no)AdkGHtaKCDbDptM5DidNc5Dq7mk0rMKmBhVZk0rMFA25geRJs4b6O)0q2eInjZzg7thigNsDbidPnHksaltG5geB223(eJybcGKRlOIhq2YHqNMwPq0b)2H2m0oJcDKjjZ2X7ScnVHmK2HmUbODgfQORBC(1guadhYozER9Mq2J1GAWAtqucZKoUq9qMmZ8DUduriZjKlVqCANz219LrsHoYCiJZgKV3dPDODMzH40Ei5cDWZNqJZmoR0o0PzGczowkhYFYmZxcGKRlOGPCi0mZ8uOYOuhKDmChDyUdsUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUqY1feBlMSS9HcMyT5aX2Utw2(qtSolhTmuqSTFr2bSRLJnHgYqe)y21ZKuioLmBgc9i566666666666666666666666666666666666666666666666666666cji56ckGHdzCdqtucVq3ZKzEhjiPn7Arx348RTAadVEptM51agEnUMnSxaQeedwyrWjulbyBbdebDDnhNPmsk0MHwU3QvkhkOSF4iZprsB21IUUX5xB1agE9EMmZRbm8ACnBy)gujigSWIuVFZccsCmqe011DJdA5ERwPCOGY(HJm)ejTzxl66gNFTvdy417zYmVgWWRX1SH9Bvlin9zqLGyWclyZUabjulmqe011DJdA5ERwPCOGY(HJm)e6ckGHdzbPPpd6EMmZrsB21IUUX5xB1agE9EMmZRbm8ACnByVfOsqmyHfSQLceKqTWarqxx3d5CQBjTb5DqbL9dhz(jsAZUw01no)ARgWWR3ZKzEnGHxJRzd7TuBB4oVZkujigSWclSWclsNMbIGUUcMYHq2XtscDyijHYHlu(akOSF4iZpHSJFN5Dq7mkKJs4f6geXUBVoK)aYwoeAi7y9TqwPok3SuOIUUX5xBqZDf6hBL02ChK0MDTORBC(1wnGHxVNjZ8AadVgxZg2BPAz3aujigSWclSiD60PzGiORRGPCiKD8KKqhgssOC4cLpGck7hoY8ti743zEh0oJc5OeEHi2D7b5pGSLdHgYowFlKvQJYnlfQORBC(1g0CxH(XwjTn3bjTzxl66gNFTvdy417zYmVgWWRfDJ5tVZkujigSWclSWclSWcgic66QOBmF6DwHk66gNFTbDWZNqgOzg(WOPViPn7Arx348RTAadVEptM51agELDeQeedwyH9Si4TyHfmqe01vr3y(07Scv01no)Ad6GNpHyh2z6h95WouKPN73osAZUw01no)ARgWWR3ZKzEDIs4TEpKZPUfQeedwyX9BSBXYPzGiORRjkHxOXmzMdLpG2zuOXqoN6wiZzo0Tq5dOIUUX5xBiPn7Arx348RTAadVEptM51jkH3Ar3y(07ScvcIblSWclSWclSGbIGUUMOeEHgZKzou(aANrH8UX8P3zfQORBC(1g08gYqk0bpFczGMz4dJM(IK2SRfDDJZV2Qbm869mzMxNOeERSJqLGyWclSNfPtBHfmqe011eLWl0yMmZHYhq7mkK3nMp9oRqfDDJZV2GM3qgsHo45ti2HDM(rFoSdfz65(TJK2SRfDDJZV2Qbm869mzMxNOeER2LESqLGyiDAlSWclSWcgic66AIs4fAmtM5q5dODgfY7oY8tZ6ZoOSdANrHiPhlu3pqHYhq7mkuzgosAZUw01no)ARgWWR3ZKzEDIs4Two)WajfQeedPtBHfwyHfwWarqxxtucVqJzYmhkFaTZOqE3rMFAwF2b5Dq7mk0PFyGKcLpG2zuOYmCOHqU3zfkOSF4iZprcsUUGcy4qT9d7miJBaI1r9wNTibjTzxl66gNFTvdy412(HDgujOujUBebDD12pSZGYhq7mkuzgEtiVdIPNWuYobGkN35pdpHkKontctaK0MDTORBC(1wnGHxzDuV1zlujOBeIiORlwh1BD2cLpG2zuOYm8MqEhetpHPKDcavoVZFgEcvGjHjasqY1fuadhAIs4fjiPn7Arx348RTAadVAr2T1OFUOqLGkqqIGUUSi7wOUFUOq5didjjuzgo0sj8saOY5D(ZWtiwraKGKRliwBNr5qSgZ1NDDKGK2SRfDDJZV2Qbm8Aqz)WrMFwJHNNgUnOsqhgYoLiORRuW9UfkhUqgOE45PHBdkFazlhYHck7hoY8tOndnoZSq2zg1bzlhcrjSFjasAZUw01no)ARgWWRXBLRgdppnCBqLGwEiLiORRuW9UfkhUqgOE45PHBdkFazlhYHIHCo1nq5qBgQCMbhT3H2m04mZczNzuhKTCi0GNsaiwxMZ9LrAJaiPn7Arx348RTAadVgVvUABp5mk5jujOLhsjc66kfKgBq7mkuBp5mk5juCKtnNq2zg1bzlhcn4PqEhumKZPUbkhAZqLZm4O9osqY111111111111111111111111111111111fsUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUqY1fK9ynOgS2eKLTxXjOaw2USwBOjwxXiKDl2WYZDGUUqY111111111111111111111111111111111fsUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUqcsSsx7tSaSTGNpJl37Scvc6i0nU(SJLoJqibcccImpAiHQgOsqficjqqqqK5rdjuLdvcknribcccImpAiHQwHkbvGiKabbbrMhnKq1YGkbLMiKabbbHeiiii)bKlVqS0HkvcY5jzeANrDibccccccccjqqqqqqqqvdujOn7cplJYzPVCVZkb6HLXsVjuHMq3ySjubcXiribcccccccQYHkbTzx4zzuol9L7DwjqpSmw6nHAPjeRySjubcXiribcccccccQAfQe0MDHNLr5S0xU3zLa9WYyP3ek1MqeIXMqfieJeHeiiiiiiiOAzqLG2Sl8SmkNL(Y9oReOhwgl9MqbVjebzSjubcXiribccccccccjqqqqu3asGGGGqceeeeNUHChuL3eQATjuTSMqvdriH6gqcsAZUw01no)ARALU2NEA8oVZ6K)KY2nexZyR3ZHUfQe0rOBC9zhlmcbbbbbbbbHeiiiO2SRbL9dhz(z9EiNtDBTORBC(1gujO2SRbL9dhz(z9EiNtDBTORBC(1guMdLMiKabbb1MDnOSF4iZpRPGtN3Nd717ZOJTwN8NuOsqTzxdk7hoY8ZAk40595WE9(m6yR1j)jfkZHstesGGGGAZUgu2pCK5N1GY(HPmNtDBL1oo60fQeuB21GY(HJm)Sgu2pmL5CQBRS2XrNUqzouAIqceeeuB21GY(HJm)SApFNjL39zxL1oo60fQeuB21GY(HJm)SApFNjL39zxL1oo60fkZHstesGGGGAZUgu2pCK5N14A4BDYFsHkb1MDnOSF4iZpRX1W36K)KcL5qPjcjqqqqTzxdk7hoY8ZQ94gVRgxZyRDOsqTzxdk7hoY8ZQ94gVRgxZyRDOmhknribcccQn7Aqz)WrMFwTp904DEN16K)KcvcQn7Aqz)WrMFwTp904DEN16K)KcL5qPjcjqqqqTzxdk7hoY8Z69qoN62Q94gVRAFZsHkbb1MDnOSF4iZpR3d5CQBR2JB8UQ9nlfkZHstesGGGGqceeeezE0qcngY5u3o5pPqLGigDN8NuwyKiKabbb1MDnOSF4iZpR3d5CQBRfDDJZV2GkbnhNFtr2ouolmWK0yJYzOjumfw2U2TMcwRTLTFnY6yBpwRDL1SFGytOJmFKohMdMLYiribcccImpAiHQnHQnHQnHM)4Eo0TnHQnHM)WEHCZ6ZUMq1Mq1Mq1Mq1MqZFezsjjloavcAoo)gi84GfgysASr5m0Ky0nYKssw0DKz52ncEJqSIrgjcjqqqqibcccYFan)rKjLKS4auPsqopj0oJ6qceeeeeeeuB21GY(HJm)SApUX7QX1m2AhQeuAIqceeeeeeeuB21GY(HJm)SEpKZPUTApUX7Q23SuOsqPjcjqqqqqqqqC6gYDqPBcLUjuAIqceeeeLStrceeeeeeeezE0qcnKTJRjuiZMqKgRSU8jTjePXA7mNCaQeeXOBd6gxZ2zHrIqceeeeeeeezE0qcn5pP2ZFCavcAmKZPUDYFsHUGAZUgu2pCK5N1uWPZ7ZH9ACnJTwN8NuIGGGGGGGGqceeeeeeeezE0qcXPNgVZ7Sw01no)AdQe0MDHNLr5S0MDnOSF4iZpR3d5CQBRfDDJZV2yKiKabbbbbbbHeiiiiiiiiY8OHeItpnEN3zDYFsHkbLMiiiiiiiiiKabbbbbbbrMhnKqNzonUMXw7qLGstesGGGGGGGGiZJgsisZsDJ2GkbrAS2oZjhGiEOcPtNMiKabbbbbbbrMhnKq2jZB17SgxZyRqLGAZUgu2pCK5Nv7XnExnUMXw7eHeiiiiiiiiY8OHeQVg(6DwJRzSvOsq2jZB17SgxZyReHeiiiiiiiiKabbbbbbb5pGyHtpnEN3zTORBC(1guWaknJq7mQdjqqqqqqqqqqqq2zMNKcXcNEA8oVZArx348RnOGbuAgrceeeeeeeeeee0qgjqqqqqqqqqqqqqqqqNzonUMXw7qLGoZCACnJT2d2ceHeiiiiiiiiiiiiiiiiY8OHeY76gNFTzpUX7GkbrCeinuWcXcl2jZB17SgxZyRqxqfyK4VXirqqqqqqqqqqqqqqqqibcccccccccccccccImpAiH6RzS1j)jfQeubcKMiKabbbbbbbbbbbbbbbHeiiiiiiiiiiiiiiii)bKDY8w9oRX1m2kuPsq91WxVZACnJTcTZOoKabbbbbbbbbbbbbbbbbbbHeiiiiiiiiiiiiiiiiiiiO(AgBDYFsHkbvGaPHUGM8Nu75poGcwisZsDJ2icjqqqqqqqqqqqqqqqqqqqqibcccccccccccccccI6gqceeeeeeeeeeeeeeeesGGGGGGGGGGGGGGGGqceeeeeeeeeeeeeeeK)aIL(AgBDYFsHcgqPzeANrDqqqqqqqqqqqqqqqqqqqqibcccccccccccccccccccYFaXI31no)AZECJ3bv(q91m26K)KYiuWOeeNEA8oVZArx348RnODg1bbbbbbbbbbbbbbbbbbbbbbbHeiiiiiiiiiiiiiiiiiiiiiiiO(AgBDYFsHkbXPNgVZ7Sw01no)AdI4H8UUX5xB2JB8oIqceeeeeeeeeeeeeeeeeeeeeeeeNEA8oVZArx348RnOsqPjcjqqqqqqqqqqqqqqqqqqqquYofjqqqqqqqqqqqqqqqqqqqqqqqqC6PX78oRfDDJZV2GkbXPNgVZ7Sw01no)Ad6cIfVRBC(1M94gVdQ8H6RzS1j)jLrIqceeeeeeeeeeeeeeeeeeee1nGeiiiiiiiiiiiiiiiiiiiiKabbbbbbbbbbbbbbbbbbbXPNgVZ7So5pPqLG40tJ35DwN8NuOGfQVMXwN8NuIqceeeeeeeeeeeeeeee1nabbbbbbbbbbbbbbHeiiiiiiiiiiiiiiiiKabbbbbbbbbbbbbbbzNmVvVZACnJTcvcYozEREN14AgBfkyHkqesGGGGGGGGGGGGOUbKabbbbbbbrDdqqqqqqqibccccccccjqqqqqqqqTzxdk7hoY8ZQ9PNgVZ7SwN8NuOsqC6PX78oRt(tkribcccccccQn7Aqz)WrMFwVhY5u3wTh34Dv7BwkujiIJaPHcwiwyPn7Aqz)WrMFwTh34D14AgBTdDbvGrI)gJeHeiiiiiiiiKabbbbbbbXPBi3bXPNgVZ7So5pPnHM)4Eo0TnHoZCACnJT2jcjqqqqu3aeesOUbKGe)buB21IUUX5xB1agETTFyNbX6VeuH0PH2zuhsGGGGAZUw01no)ARgWWRT9d7mOsqPYQGtesOUbKGe)buB21IUUX5xB1agEL1r9wNTqS(lbvaANrDibcccQn7Arx348RTAadVY6OERZwOsq3ieriH6gqcs8hqTzxl66gNFTvdy4vlYUTg9ZffI1FjiwbTZOoKabbb1MDTORBC(1wnGHxTi72A0pxuOsqfiiriH6gqcsqcsAtnTYoKB6rZ80HuMHbFNjPXwNHukLzOORBC(1guadh6ckqMpq5qxqfDDJZV2GSp1myJHukLzWo(HDgdPeujO2SRfDDJZV2Qbm8AB)WoJiK0MAALDi30JM5PdPmdd(otsJTodPukZqrx348RnOago0fu5mEhuadNHukLzWo(HDgdPeujO2SRfDDJZV2Qbm8AB)WoJiK0MAALDi30JM5PdPmdd(otsJTodPukZqrx348RnOago0f0DtF9oRqbmCgsPuMb74h2zmKsqLGAZUw01no)ARgWWRT9d7mIqsBQPv2HCtpAMNoKYmm47mjn26mKsPmdfDDJZV2Gcy4qxqSd7m9J(CyhkY0Z9BhkGHZqkLYmyh)WoJHucQeuB21IUUX5xB1agETTFyNresAtnTYoKB6rZ80HuMHbFNjPXwNHukLzOORBC(1guadh6ckqMpq5qxqfDDJZV2GSp1myJHukLzyg1BD2YqkbvcQn7Arx348RTAadVY6OERZwIqsBQPv2HCtpAMNoKYmm47mjn26mKsPmdfDDJZV2Gcy4qxqLZ4DqbmCgsPuMHzuV1zldPeujO2SRfDDJZV2Qbm8kRJ6ToBjcjTPMwzhYn9OzE6qkZWGVZK0yRZqkLYmu01no)AdkGHdDbD30xVZkuadNHukLzyg1BD2YqkbvcQn7Arx348RTAadVY6OERZwIqsBQPv2HCtpAMNoKYmm47mjn26mKsPmdfDDJZV2Gcy4qxqSd7m9J(CyhkY0Z9BhkGHZqkLYmmJ6ToBziLGkb1MDTORBC(1wnGHxzDuV1zlriPn10k7qUPhnZthszgg8DMKgBDgsPuMHIUUX5xBqbmCOlOjkHxOli7spwgsPuMbcZAhhD6Yqkbvc6IL2SRfDDJZV2Qbm8AB)WoJ4VXiriPn10k7qUPhnZthszgg8DMKgBDgsPuMHIUUX5xBqbmCOlOjkHxOlOY5hgiPmKsPmdeM1oo60LHucQeuAIqsBQPv2HCtpAMNoKYmm47mjn26mKsPmdfDDJZV2Gcy4qxqtucVqxq23BD2YqkLYmqyw74OtxgsjOsqS0MDTORBC(1wnGHxB7h2ze)ngjcjTPMwzhYn9OzE6qkZWGVZK0yRZqkLYmu01no)AdkGHdDbnrj8cDbzx6XYqkLYmCKDB0pxugsjOsqTzxl66gNFTvdy4vlYUTg9ZfLiK0MAALDi30JM5PdPmdd(otsJTodPukZqrx348RnOago0f0eLWl0fu58ddKugsPuMHJSBJ(5IYqkbvcQn7Arx348RTAadVAr2T1OFUOeHK2utRSd5ME0mpDiLzyW3zsAS1ziLszgk66gNFTbfWWHUGMOeEHUGSV36SLHukLz4i72OFUOmKsqLGAZUw01no)ARgWWRwKDBn6NlkriPn10k7qUPhnZthszgg8DMKgBDgsPuMHIUUX5xBqbmCOlOgz3LDZBqqLZWBLYHkWqkLYmqyw74OtxgsjOsqS0MDTORBC(1wnGHxB7h2ze)ngjcjTPMwzhYn9OzE6qkZWGVZK0yRZqkLYmu01no)AdkGHdDb1i7USBEdcQCgERuo0ngsPuMbcZAhhD6YqkbvcIL2SRfDDJZV2Qbm8AB)WoJ4VXiriPn10k7qUPhnZthszgg8DMKgBDgsPuMHIUUX5xBqbmCOli7M3GGkNH3kLdvGHukLzGWS2XrNUmKsqLGyPn7Arx348RTAadV22pSZi(uzKiK0MAALDi30JM5PdPmdd(otsJTodPukZqrx348RnOago0fKDZBqqLZWBLYHUXqkLYmqyw74OtxgsjOsqS0MDTORBC(1wnGHxB7h2zeFQmsesqcsqcsqcsqcsqcsqcsqcsqYV)(r)Whl66gNFTbfWWHUGynMRp76qg3a0e3B1kL)XL7TALY)Ppog238zDMFG(X1Fsh(4AJj9J91SH9pg2P1qNF)aFCmSV5Z6AJj9J91SH9pg2PvMz7q5FGpsNN62pMISDO8pg2PvMu(i1TmZ2HY)Y(yOJop1TF0eU5pYmBhkFTXK(nk0Yhd70kZSDO81gt6h43pAh)Wo7Ti4eKGfUrqw1sHutTWnc2YT)4k10F0fEoX9wTs59VXTpoJ6ToBFliuWtn1wcEQeSabdElPsOce6pUyfX9rZWGF9zNHSUCVvRuE)N(gf(PpUCVvRu(p9X1gt6hhd7B(8JJH9nFwxBmPFSVMnS)r68u3(rwh1qUZ(ypSm68u3Mco9Wt4pgtHLTRD)4yyFZNF86cQORBC(1guadh66ckGnOj74DBMj0furss)GXDnNytOBPlqiIpnbj(cbhjhHUX1NDSqNN62MR)K2CTXK2S2SNd5JuInNI2RzphYhPoZjTzTzT5aTVeBofTxZbAFDMtAZAZAZotkjPFOzNjLK0zoPnRnRnRnRnRnRnRn7mPKKJC)6hnKnRnRnRn7mPKKNHKRVVCFRugrceeeezE0qcDpKZPUDYFsHkbrm6o5pPSWiribcccYFarNN6wOsLGy4oRvUaSNQ2L1iw1Ybz5gt150WII2DYY23Y2JbOmhIop1TqLkbXWDwRCbypvTlRrSQLdYYnMyaANrDibccccccccjqqqqqqqqTzxdk7hoY8Z6uEnK14AgBTdvcQn7Aqz)WrMFwNYRHSgxZyRDOmhknribcccccccQn7Aqz)WrMFwtbNoVph2RX1m2ADYFsHkb1MDnOSF4iZpRPGtN3Nd714AgBTo5pPqzouAIqceeeeeeeuB21GY(HJm)SApUX7QX1m2AhQeuB21GY(HJm)SApUX7QX1m2AhkZHstesGGGGGGGGAZUgu2pCK5N1GY(HPmNtDBnUMXw7qLGAZUgu2pCK5N1GY(HPmNtDBnUMXw7qzouAIqceeeeeeeuB21GY(HJm)SApFNjL39zxnUMXw7qLGAZUgu2pCK5Nv757mP8Up7QX1m2AhkZHstesGGGGGGGGqceeeeeeeK)aQn7Aqz)WrMFwNYRHSgxZyRDOGrjOcPtdTZOoKabbbbbbbbbbbHeiiiiiiiiiiii)bel3d5CQBN8NuOlO2SRbL9dhz(znfC68(CyVgxZyR1j)jLrOGrjOcq7mQdjqqqqqqqqqqqqqqqqibcccccccccccccccQn7Aqz)WrMFwtbNoVph2RX1m2ADYFsHkbDpKZPUDYFsjcjqqqqqqqqqqqqqqqqTzxdk7hoY8Z6uEnK14AgBTdvcQn7Aqz)WrMFwNYRHSgxZyRDOGfQaribccccccccccccccccjqqqqqqqqqqqqqqqqibcccccccccccccccYFa1MDnOSF4iZpRbL9dtzoN62ACn8fQujiNNeY4gGAZUgu2pCK5Nv757mP8Up7QX1WxOsLGCEsODg1HeiiiiiiiiiiiiiiiiiiiiKabbbbbbbbbbbbbbbbbbb1MDnOSF4iZpR2JB8UACnJT2Hkb1MDnOSF4iZpR2JB8UACnJT2HcwOceHeiiiiiiiiiiiiiiiiiiiiKabbbbbbbbbbbbbbbrj7u)buB21GY(HJm)Sgu2pmL5CQBRX1WxiuELGCEsODg1HeiiiiiiiiiiiiiiiiiiiiKabbbbbbbbbbbbbbbbbbb1MDnOSF4iZpRbL9dtzoN62ACnJT2Hkb1MDnOSF4iZpRbL9dtzoN62ACnJT2HcwOceHeiiiiiiiiiiiiiiiiiiiiKabbbbbbbbbbbbbbbrj7uKabbbbbbbbbbbbbbbbbbbHeiiiiiiiiiiiiiiiiiiiO2SRbL9dhz(z1E(otkV7ZUACnJT2Hkb1MDnOSF4iZpR2Z3zs5DF2vJRzS1ouWcvGiKabbbbbbbbbbbbbbbbbbbHeiiiiiiiiiiiiiiiiQBaccccccccccccccccjqqqqqqqqqqqqu3asGGGGGGGGGGGGqceeeeeeee1nGeiiiiiiiiKabbbbbbbHeiiiiiiii)buphYhPeBofThuPsqZX5xInNI2JfgysASr5mWi0oJ6qceeeeeeeeeeeesGGGGGGGGGGGG8hqDMuss)auPsqfiowDJveh0oJ6qceeeeeeeeeeeeeeeesGGGGGGGGGGGGGGGG8hqRnMuOsLGyiMclBx7wzph7ZUYofPWUfTS9yaANrDqxxqw2TuoDakOSF4iZprceeeeeeeeeeeeeeeeeeeesGGGGGGGGGGGGGGGGGGGGAZUgu2pCK5N1uWPZ7ZH9ACnJTwN8NuOsq3d5CQBN8NuIqceeeeeeeeeeeeeeeeeeeuB21GY(HJm)Sgu2pmL5CQBRX1WxOsqopjribcccccccccccccccccccQn7Aqz)WrMFwTNVZKY7(SRgxdFHkb58KeHeiiiiiiiiiiiiiiiiiiiO2SRbL9dhz(z1ECJ3vJRzS1oujOceHeiiiiiiiiiiiiiiiiiiiO2SRbL9dhz(znUg(wN8NuOsq3d5CQBN8NuIqceeeeeeeeeeeeeeeeeeeuB21GY(HJm)SoLxdznUMXw7qLGkqesGGGGGGGGGGGGGGGGGGGGAZUgu2pCK5N1GY(HPmNtDBnUMXw7qLGstesGGGGGGGGGGGGGGGGGGGGAZUgu2pCK5Nv757mP8Up7QX1m2AhQeuAIqceeeeeeeeeeeeeeeeeeeesGGGGGGGGGGGGGGGGOKDQ)aATXKcvQeedXuyz7A3k75yF2v2Pif2TOLTx1ESw0YmaTZOoORlOgu7afu2pCK5NqX1m2ksGGGGGGGGGGGGGGGGGGGGqceeeeeeeeeeeeeeeeeeeuB21GY(HJm)SMcoDEFoSxJRzS16K)Kcvc6EiNtD7K)KsesGGGGGGGGGGGGGGGGGGGGAZUgu2pCK5N1P8AiRX1m2AhQeuB21GY(HJm)SoLxdznUMXw7qblubIqceeeeeeeeeeeeeeeeeeeesGGGGGGGGGGGGGGGGGGGG8hqTzxdk7hoY8ZAqz)WuMZPUTgxdFHkvcY5jHmUbO2SRbL9dhz(z1E(otkV7ZUACn8fQujiNNeANrDibccccccccccccccccccccccccjqqqqqqqqqqqqqqqqqqqqqqqqTzxdk7hoY8ZQ94gVRgxZyRDOsqTzxdk7hoY8ZQ94gVRgxZyRDOGfQaribccccccccccccccccccccccccjqqqqqqqqqqqqqqqqqqqquYo1Fa1MDnOSF4iZpRbL9dtzoN62ACn8fcLxjiNNeANrDibccccccccccccccccccccccccjqqqqqqqqqqqqqqqqqqqqqqqqTzxdk7hoY8ZAqz)WuMZPUTgxZyRDOsqTzxdk7hoY8ZAqz)WuMZPUTgxZyRDOGfQaribccccccccccccccccccccccccjqqqqqqqqqqqqqqqqqqqquYofjqqqqqqqqqqqqqqqqqqqqqqqqibcccccccccccccccccccccccQn7Aqz)WrMFwTNVZKY7(SRgxZyRDOsqTzxdk7hoY8ZQ98DMuE3ND14AgBTdfSqficjqqqqqqqqqqqqqqqqqqqqqqqqibcccccccccccccccccccI6gqceeeeeeeeeeeeeeeeeeeesGGGGGGGGGGGGGGGGOKDQ)aATXKcvQeedXuyz7A3k75yF2v7B5YXAbzz7Xa0oJ6GUUGSmH9lDakOSF4iZprceeeeeeeeeeeeeeeeeeeK)aQn7Arx348RTAadVgu2pCK5N1y45PHBdQujOLhsH2zuhsGGGGGGGGGGGGGGGGGGGGGGGGyY9ULfgck7hoY8tOIUJ8CJbgjcjqqqqqqqqqqqqqqqqqqqqqqqqm5E3YcdxxxxxxxxxxxxxxxxxxxxxxxxxxmWiribcccccccccccccccccccccccIj37ww6l37SsGJm)0SSWqqz)WrMFczVqUz9z3CdYse42buNoMDdDgAcXY9qoN62j)j9Qn7Aqz)WrMFwJRHV1j)jLrgzKiKabbbbbbbbbbbbbbbbbbbbbbbHeiiiiiiiiiiiiiiiiiiiiiiii)buB21GY(HJm)SoLxdznUMXw7qbdOcPtdTZOoKabbbbbbbbbbbbbbbbbbbbbbbbbbbXK7Dll9L7DwjWrMFAwwyiOSF4iZpHIRzS1(CdQq60qSeSwIaPpyKHMqS0MDnOSF4iZpRt51qwJRzS1(vH0PzKrgjcjqqqqqqqqqqqqqqqqqqqqqqqquYofjqqqqqqqqqqqqqqqqqqqqqqqqqqqqm5E3YsF5ENvcCK5NMLfgck7hoY8tO4AgBTp3GSebsFWqtO2SRbL9dhz(zDkVgYACnJT2zKrIqceeeeeeeeeeeeeeeeeeeeeeee1nGeiiiiiiiiiiiiiiiiiiiiiiiiKabbbbbbbbbbbbbbbbbbbbbbbXK7Dll9L7DwjWrMFAwwyWE(otkV7ZoO4AgBTp3GSebsFWqtO2SRbL9dhz(z1E(otkV7ZUACnJT2zKrIqceeeeeeeeeeeeeeeeeeeeeeeetU3TS0xU3zLahz(PzzHHGY(bOPmNtDluCnJT2NBqwIaPpyOjuB21GY(HJm)Sgu2pmL5CQBRX1m2ANrgjcjqqqqqqqqqqqqqqqqqqqqqqqqm5E3YsF5ENvcCK5NMLfgSW7mKq2JB8U5gKLiq6dO(AgBTteKLiqHdiIhQthzOjuB21GY(HJm)SApUX7QX1m2AVjuB21GY(HJm)SEpKZPUTApUX7Q23SugzKiKabbbbbbbbbbbbbbbbbbbrDdibccccccccccccccccccccjqqqqqqqqqqqqqqqqqqqqTzxdk7hoY8ZAqz)WuMZPUTgxdFHkb58KeHeiiiiiiiiiiiiiiiiiiiO2SRbL9dhz(z1E(otkV7ZUACn8fQeKZtsesGGGGGGGGGGGGGGGGGGGGAZUgu2pCK5Nv7XnExnUMXw7qLGstesGGGGGGGGGGGGGGGGGGGGAZUgu2pCK5N14A4BDYFsHkb58KeHeiiiiiiiiiiiiiiiiiiiO2SRbL9dhz(zDkVgYACnJT2HkbLMiKabbbbbbbbbbbbbbbbbbb1MDnOSF4iZpRbL9dtzoN62ACnJT2HkbLMiKabbbbbbbbbbbbbbbbbbb1MDnOSF4iZpR2Z3zs5DF2vJRzS1oujO0eHeiiiiiiiiiiiiiiiiiiiiKabbbbbbbbbbbbbbbrDdibccccccccccccccccjqqqqqqqqqqqquYo1Fa1zsjj9dqLkbDlDQPjuQq7mQdjqqqqqqqqqqqqqqqqibcccccccccccccccYFaT2ysHkvcIHykSSDTBL9CSp7k7uKc7w0Y2JbODg1bDDbfxdFPdqJZmohL07Scfu2panL5CQBrceeeeeeeeeeeeeeeeeeeesGGGGGGGGGGGGGGGGGGGGAZUgu2pCK5N1GY(HPmNtDBnUg(cvc6EiNtD7K)KsesGGGGGGGGGGGGGGGGGGGGqceeeeeeeeeeeeeeeeLSt9hqRnMuOsLGyiMclBx7wzph7ZUAFlxowlilBpgGmUbO2SRbL9dhz(znOSFykZ5u3wJRHVqO8kb58Kq7mQd66ckUzMmPdqJZmohL07Scfu2panL5CQBrceeeeeeeeeeeeeeeeeeeesGGGGGGGGGGGGGGGGGGGGAZUgu2pCK5N1GY(HPmNtDBnUg(cvcY5jjcjqqqqqqqqqqqqqqqqqqqqibcccccccccccccccI6gqceeeeeeeeeeeeeeeesGGGGGGGGGGGGOKDQ)aQZKss6hGkvcIvbpvcMk0oJ6qceeeeeeeeeeeeeeeesGGGGGGGGGGGGGGGG8hqRnMuOsLGyiMclBx7wzph7ZUYofPWUfTS9yaANrDqxxqX1Wx6a04mJZrj9oRq2Z3zs5DF2HeiiiiiiiiiiiiiiiiiiiiKabbbbbbbbbbbbbbbbbbb1MDnOSF4iZpR2Z3zs5DF2vJRHVqLGUhY5u3o5pPeHeiiiiiiiiiiiiiiiiiiiiKabbbbbbbbbbbbbbbrj7u)b0AJjfQujigIPWY21Uv2ZX(SR23YLJ1cYY2JbiJBaQn7Aqz)WrMFwTNVZKY7(SRgxdFHq5vcY5jH2zuh01fuCZmzshGgNzCokP3zfYE(otkV7ZoKabbbbbbbbbbbbbbbbbbbHeiiiiiiiiiiiiiiiiiiiO2SRbL9dhz(z1E(otkV7ZUACn8fQeKZtsesGGGGGGGGGGGGGGGGGGGGqceeeeeeeeeeeeeeee1nGeiiiiiiiiiiiiiiiiKabbbbbbbbbbbrj7u)buNjLK0pavQe0Tc3sn4PH2zuhsGGGGGGGGGGGGGGGGqceeeeeeeeeeeeeeeK)aATXKcvQeedXuyz7A3k75yF2v2Pif2TOLThdq7mQd66cIygVdkgY5u3aLdTzOYzgC0EhjqqqqqqqqqqqqqqqqqqqqibcccccccccccccccccccQn7Aqz)WrMFwJ3kxL946N3S0bOsqlpKsesGGGGGGGGGGGGGGGGGGGGAZUgu2pCK5N14TYvJRHVqLGUhY5u3o5pPeHeiiiiiiiiiiiiiiiiiiiiKabbbbbbbbbbbbbbbrj7u)b0AJjfQujigIPWY21Uv2ZX(SR23YLJ1cYY2JbODg1bDDbz3CNcfd5CQBGYH2mu5mdoAVJeiiiiiiiiiiiiiiiiiiiiKabbbbbbbbbbbbbbbbbbb1MDnOSF4iZpRXBLRYEC9ZBw6aujOddzNsesGGGGGGGGGGGGGGGGGGGGqceeeeeeeeeeeeeeee1nGeiiiiiiiiiiiiiiiiKabbbbbbbbbbbrDdibccccccccccccjqqqqqqqquYo1Fanq7lXMtr7bvQe0CC(LyZPO9yHbMKgBuodmczCdqSS2ysHkvcIH50O4u1EfTS9yakZHwBmPqLkbXWCAuCQAplhNSpRfmzz7XauMdT2ysHkvcIHykSSDTBTyJ4e75UlAx7YaJqg3auB21GY(HJm)SgVvUk7X1pVzPdqLkbT8qk0oJ6qceeeeeeeeeeeesGGGGGGGGGGGGAZUgu2pCK5N14TYvzpU(5nlDaQe0HHStjcjqqqqqqqqqqqqibcccccccccccYFa1MDTORBC(1wnGHxJ3kxTTNCgL8eQujOLhsH2zuhsGGGGGGGGGGGGGGGGsbPXwmh6gSWtszHHIULYpmJuwpwp2ddSMRZ6X61MAALDi30z9y9sr2ouo7qUPxo6G3W6X6fZHUHoRhRND8KZOKNeiB1kdnHyOCM(s5mWiribcccccccccccI6gqceeeeeeeeeeeesGGGGGGGGGGGG8hqTzxl66gNFTvdy414TYvJHNNgUnOsLGwEifANrDibcccccccccccccccIj37wwyigY5u3aLdTzOYzgC0EhQO7ip3yGrIqceeeeeeeeeeeeeeeetU3TSWW1111111111111111111111111fdmsesGGGGGGGGGGGGGGGGyY9ULL(Y9oRe4iZpnllmeVvoi7fYnRp7MBqwIa3oG60XSBOZqtiwUhY5u3o5pPxTzxdk7hoY8ZA8w5QX1WxgzKrIqceeeeeeeeeeeeeeeetU3TS0xU3zLahz(PzzHHGY(HJm)eYEHCZ6ZU5gKLiWTdOoDm7g6m0eIL7HCo1Tt(t6vB21GY(HJm)SgxdFRt(tkJmYiribccccccccccccccccjqqqqqqqqqqqqqqqq(dO2SRbL9dhz(zDkVgYACnJT2HcgqfsNgANrDibcccccccccccccccccccIj37ww6l37SsGJm)0SSWqqz)WrMFcfxZyR95guH0PHyjyTebsFWidnHyPn7Aqz)WrMFwNYRHSgxZyR9RcPtZiJmsesGGGGGGGGGGGGGGGGOKDksGGGGGGGGGGGGGGGGGGGGyY9ULL(Y9oRe4iZpnllmeu2pCK5NqX1m2AFUbzjcK(GHMqTzxdk7hoY8Z6uEnK14AgBTZiJeHeiiiiiiiiiiiiiiiiQBajqqqqqqqqqqqqqqqqibcccccccccccccccIj37ww6l37SsGJm)0SSWG98DMuE3NDqX1m2AFUbzjcK(GHMqTzxdk7hoY8ZQ98DMuE3ND14AgBTZiJeHeiiiiiiiiiiiiiiiiMCVBzPVCVZkboY8tZYcdbL9dqtzoN6wO4AgBTp3GSebsFWqtO2SRbL9dhz(znOSFykZ5u3wJRzS1oJmsesGGGGGGGGGGGGGGGGyY9ULL(Y9oRe4iZpnllmyH3ziHSh34DZnilrG0hq91m2ANiilrGchqepuNoYqtO2SRbL9dhz(z1ECJ3vJRzS1EtO2SRbL9dhz(z9EiNtDB1ECJ3vTVzPmYiribcccccccccccI6gqceeeeeeeeeeeesGGGGGGGGGGGGAZUgu2pCK5N14TYvJRHVqLGCEsIqceeeeeeeeeeeuB21GY(HJm)Sgu2pmL5CQBRX1WxOsqopjribcccccccccccQn7Aqz)WrMFwTNVZKY7(SRgxdFHkb58KeHeiiiiiiiiiiiO2SRbL9dhz(z1ECJ3vJRzS1oujO0eHeiiiiiiiiiiiO2SRbL9dhz(znUg(wN8NuOsqopjribcccccccccccQn7Aqz)WrMFwNYRHSgxZyRDOsqPjcjqqqqqqqqqqqqTzxdk7hoY8ZAqz)WuMZPUTgxZyRDOsqPjcjqqqqqqqqqqqqTzxdk7hoY8ZQ98DMuE3ND14AgBTdvcknribccccccccccccjqqqqqqqqu3asGGGGGGGGqceeee1naHeQB4JJZOJT(r68u3(r68u32)4DwRCbypvTlRrSQLdYYnMQZPHffT7KLTVLThukSl7GjlB)Q9TmXSCJQ9kgzhWUw2EqPWUSdMSS9R23YeZYnQwUb7a21Y2dAonkovzph7Z(J9WYOZtDBm84Wt4pwVZoovJtST)0hhd7B(SoZpq)46pPd)(Xq3Y9wTs5)0V)(7hjZMHF6JRHK62F6JNHKR)N(93posA69F6JDVZkj9JPW(fTCC63p2zsh)Pp29oRK0Vrl)(Xb)XHFmKCT9tF8mKC9)0V)(rEMK(tF8mKC9)0V)(rMZZCnKu3(tF8mKC9)0V)(XWoT2zsh)aF8WmU(S7N(4zi56)PF)9JHDADK007FGpYnJ0F6JNHKR)N(93F)4GVhmh6gx)80pAC2(9BC7N(4r2Tr)Cr)gfi4hh8DMKgBtucVF0sJFCmSV5ZjkH3pEDbv01no)AdkGHdDDbfWg0KD8UnZe6cQijPFW4UMtSj0T0fieXNMGeFHGJKJq346ZowyejqqqqibcccImpAiHMz6lfQe0CC(nYKssY6m9LYcdmjn2OCgyKiKabbbrMhnKq1Mq1Mq1MqK(75q32eQ2eI0BVqUz9zxtOAtOAtOAtOAtisFKjLKS4aujO548BGWJdwyGjPXgLZqtIr3itkjzr3rMLcexWjUwcoJmsesGGGGqceeeK)aQn7Arx348RTQv6AF6PX78oRt(tkB3qCnJTEph6wiuELGCEsODg1HeiiiiiiiiY8OHeItpnEN3zDYFsBc1xZyR3ZHUTj0zMtJRzS1oujO2SRfDDJZV2QwPR9PNgVZ7So5pPSDdX1m269COBzHrIGGGGGGGGqceeeeeeeesGGGGGGGGAZUw01no)ARgWWR3ZKzEDIs4TAx6XcvcQn7Arx348RTAadVEptM51jkH3QDPhluMdXq60wyHfwyHfmqesGGGGGGGGqceeeeeeeK)aQVMXwVNdDluPsqPHmUbOZmNgxZyRDOsLGsdTZOoKabbbbbbbbbbb5pGi93ZHUfcLxjiNNeY4gGi93ZHUfkyaLgANrDibcccccccccccccccIt3qUdQVCVZkboY8tZYcdL3OL6wIa3oSKLSKLGUGSebsFaz3Im0eQn7Arx348RTAadVEptM51jkH3QDPhBtOzM(sBcr6VNdDlJeHeiiiiiiiiiiiikzNIeiiiiiiiiiiiiiiiioDd5oO(Y9oRe4iZpnllmuEJwQBjcC7WswYswIHMqTzxl66gNFTvdy417zYmVorj8wTl9yBcnZ0xkJeHeiiiiiiiiiiiiQBaccccccccccccjqqqqqqqquYo1Fa1xZyR3ZHUfQujOcPtdTZOoKabbbbbbbbbbbXPBi3b1xU3zLahz(PzzHHYB0sDlrGBhwYswYsqxqwIaPpGcYcgAc1MDTORBC(1wnGHxVNjZ86eLWB1U0JTj0mtFPnH6RzS175q3YiribcccccccIs2PibcccccccccccIt3qUdQVCVZkboY8tZYcdL3OL6wIa3oSKLSKLGUGSebsFaXsWAjcK(GrOGSGHMqTzxl66gNFTvdy417zYmVorj8wTl9yBcnZ0xAtO(AgB9Eo0TnHoZCACnJT2zKiKabbbbbbbrDdqqqqibccccccccjqqqquYofjqqqqqqqqibcccccccYFa1xZyR3ZHUfQujO0qg3a0zMtJRzS1ouPsqPH2zuhsGGGGGGGGGGGG8hqK(75q3cHYReKZtczCdqK(75q3cfmGsdTZOoKabbbbbbbbbbbbbbbXPBi3b1xU3zLahz(PzzHHYB0sDlrGBhwYswYsqxqwIaPpGSBrgAc1MDTORBC(1wnGHxVNjZ86eLWB1U0JTj0mtFPnHi93ZHULrIqceeeeeeeeeeeeLStrceeeeeeeeeeeeeeeeNUHChuF5ENvcCK5NMLfgkVrl1TebUDyjlzjlXqtO2SRfDDJZV2Qbm869mzMxNOeER2LESnHMz6lLrIqceeeeeeeeeeee1nabbbbbbbbbbbHeiiiiiiiikzNIeiiiiiiiiiiiioDd5oigyGiKabbbbbbbrDdibccccccccjqqqqu3asOUHpYPw9z3KnM0pUucVF0mU(5PtCVvRuE5Yd0VXvH0F078BDmFYKKU0HVrHpsyw74Ot3VX1nIJqF0mm4xF2ziRl3B1kL3)PF)yWCyF9h2(4Dl3yYY2)JDk5rkYE3(r7AzlM(OF4JfDDJZV2Gcy4qxqtucVqxq2LESF8GBoPXLBwZ3GqF0o(HD2BbRioIJqfiyHwcElSIGPMovc9hxSIqF0fEoX9wTs59VrHpoJ6ToBFlsnnHiuQPMMqPYQuBPfc1YT)4Ive8Jl3B1kL)tFCTXK(X(A2W(hdD05PU9JMWn)XXW(MpRZ8d0pU(t6Whd70kZSDO8pWhPZtD7htr2ou(hzMTdLV2ys)gfA5JHDAn053pWhd70kZSDO81gt6h43psMnd)0hxdj1T)0hpdjx)p97VFSZKo(tFS7DwjPFJw(9JJKME)N(y37Sss)ykSFrlhN(9JHDATZKo(b(4G)4WpgsU2(PpEgsU(F63F)i3ms)PpEgsU(F63F)yyNwhjn9(h4JmNN5AiPU9N(4zi56)PF)9J8mj9N(4zi56)PF)9JHDADmFwMz)aF8WmU(S7N(4zi56)PF)93po47bZHUX1pp9JgsYF)gT8tF8i72OFUOFJce8Jd(otsJTjkH3pAPXpog2385eLW7hVUGk66gNFTbfWWHUUGcydAYoE3MzcDbvKK0pyCxZj2e6w6ceI4ttqIVqWrYrOBC9zhlmIeiiiO2SRbL9dhz(z9EiNtDB1ECJ3vTVzPqLGAZUgu2pCK5N17HCo1Tv7XnEx1(MLcL5qPjcjqqqqibcccYFa1MDTORBC(1w1kDTp904DEN1j)jLTBiUMXwVNdDlekVsqopj0oJ6qceeeeeeeezE0qcXPNgVZ7So5pPnH6RzS175q32e6mZPX1m2AhQeuB21IUUX5xBvR01(0tJ35DwN8Nu2UH4AgB9Eo0TSWirqibccccccccjqqqqqqqq(dO2SRbL9dhz(z9EiNtDB1ECJ3vTVzPqLkbLgANrDibcccccccccccIt3qUdIbgicccccccccccccjqqqqqqqquYofccccccccccccjqqqqqqqqqqqqC6gYDq9L7DwjWrMFAwwyO8gTu3seOWrh6cYseOWbX3zOjuB21IUUX5xB1agE9EMmZRtucV1Y5hgiPnH40tJ35DwN8N0MqTzxdk7hoY8Z69qoN62Q94gVRAFZszKiiiiiiiiiiiiiKabbbbbbbrDdibccccccccjqqqqu3asOUbKGeKGeK8ro1Qp7MSXK(XLs49JMX1ppDI7TALYlxEG(nUkK(JENFRJ5tMK0Lo8nk8XbFpyo0nU(5PF0qs(rZWGF9zNHSUCVvRuE)N(9JbZH91Fy7J3TCJjlB)p2PKhPi7D7hVB5gtw2(FC5ERwP8F6JRnM0p2xZg2)yOJop1TF0eU5pog238zDMFG(X1Fsh(yyNwzMTdL)b(iDEQB)ykY2HY)iZSDO81gt63OqlFmStRHo)(b(yyNwzMTdLV2ys)a)(XdU5KgxUznFdc9r74h2zVfPMMqekvcg8ceQqWtnvcXkc(hxSI4(Ol8CI7TALY7FJcFCg1BD2(wKAAcrOutnnHsLvP2sleQLB)XfRi4h9dFSORBC(1guadh6cAIs4f6cQC(Hbs6hjZMHF6JRHK62F6JNHKR)N(93p2zsh)Pp29oRK0Vrl)(XrstV)tFS7DwjPFmf2VOLJt)(XdZ46ZUF6JNHKR)N(93po4po8JHKRTF6JNHKR)N(93pYnJ0F6JNHKR)N(93pg2P1rstV)b(iZ5zUgsQB)PpEgsU(F63F)ipts)PpEgsU(F63F)yyNwhZNLz2pWhd70ANjD8d87VFdw9tF8i72OFUOFJce8Jd(otsJTjkH3pAPXpog2385eLW7hVUGk66gNFTbfWWHUUGcydAYoE3MzcDbvKK0pyCxZj2e6w6ceI4ttqIVqWrYrOBC9zhlmIeiiiO2SRfDDJZV2Qbm869mzMxNOeER3d5CQBHkb1MDTORBC(1wnGHxVNjZ86eLWB9EiNtDluMdXGfwC)g7wSCAgicjqqqqTzxl66gNFTvdy417zYmVorj8wl6gZNENvOsqTzxl66gNFTvdy417zYmVorj8wl6gZNENvOmhIblSWclSWclSGbIqceeeuB21IUUX5xB1agE9EMmZRtucVv2rOsqTzxl66gNFTvdy417zYmVorj8wzhHYCigSWc7zr60wybdeHeiiiiKabbb1MDnOSF4iZpR3d5CQBRfDDJZV2GkbnhNFtr2ouolmWK0yJYzOjumfw2U2TMcwRTLTFnY6yBpwRDL1SFGytOJmFKohMdMLYiribcccQn7Arx348RTAadVEpKZPUTE303kXmEhujO2SRfDDJZV2Qbm869qoN626DtFReZ4DqzouAIqceeeezE0qcDpKZPUTE303kXmEhujO2SRfDDJZV2Qbm869qoN626DtFReZ4DeHeiiiO2SRfDDJZV2Qbm8k7yLygVdQeuB21IUUX5xB1agELDSsmJ3bL5qPjcjqqqqTzxl66gNFTvdy417HCo1T17M(wlN3nePgE1csJvOsqTzxl66gNFTvdy417HCo1T17M(wlN3nePgE1csJvOmhknribccccjqqqqK5rdjuNjDKy8CitOsqeJUShx)80it6iX45qMSWiribcccImpAiH8DlYB5Ius64shGkb1PK0XLfw1eIy0DYqsDBr3rMLcnHU1eQZKosmEoKjJmseeeesGGGGiZJgsOuuSH5KcvcQtjPJll3Acrm6oziPUTO7iZcHAcvOjuNjDKy8CitgzKiKabbbrMhnKq(EkkYEC9ZtHkb1PK0XLLcfAcnhNFdeECWcdmjn2OCgAcLIInmNugzKiKabbbrMhnKqXBLRH5KcvcQtjPJll3Acrm6oziPUTO7iZsWBc1stOot6iX45qMmYiribcccImpAiH894TYXEC9ZtHkb1PK0XLLcfAcnhNFdeECWcdmjn2OCgAcfVvUgMtkJmsesGGGGqceeeK)aY3TiVLlsjPJlDaANrDibccccccccjqqqqqqqq(dO2SRfDDJZV2Qbm869qoN626DtFRLZ7gIudVAbPXkuPsqfG2zuhsGGGGGGGGGGGGUhY5u3wVB6BLygVdQeuF5ENvcCK5NMLfgq5zjcu4GHMq3d5CQBR3n9TsmJ3XirqqqqibcccccccIs2Pibccccccccccc6EiNtDB9UPVvIz8oOsq9L7DwjWrMFAwwyWseOWbdnHUhY5u3wVB6BLygVJrIqceeeeeeee1nGeiiiiiiiiKabbbbbbb5pGAZUw01no)ARgWWR3d5CQBR3n9TsmJ3bfmGsdzCdqTzxl66gNFTvdy4v2XkXmEhuWakn0oJ6qceeeeeeeeeeeeNUHChuF5ENvcCK5NMLfgkVrl1TuV84qblu5nAPULiqHJYJdfSqL3OL6wIaPpSKLSKLkpodnHAZUw01no)ARgWWR3ZKzEDIs4Tw0nMp9oRnHUhY5u3wVB6BLygVRjuB21IUUX5xB1agE9EMmZRtucVv2XMqTzxl66gNFTvdy4v2XkXmExtO2SRfDDJZV2Qbm869mzMxNOeER3d5CQBBc1MDnOSF4iZpR3d5CQBRfDDJZV2yKiKabbbbbbbrj7u)buB21IUUX5xB1agE9EiNtDB9UPVvIz8oOGbuAODg1HeiiiiiiiiiiiioDd5oO(Y9oRe4iZpnllmuEJwQBPE5XHcwOYB0sDlrG0hwYswYsLhNHMqTzxl66gNFTvdy417zYmVorj8wl6gZNEN1Mq3d5CQBR3n9TsmJ31eQn7Arx348RTAadVEptM51jkH369qoN62MqTzxdk7hoY8Z69qoN62Arx348RngjcjqqqqqqqquYo1Fa1MDTORBC(1wnGHxzhReZ4DqbdO0q7mQdjqqqqqqqqqqqqC6gYDq9L7DwjWrMFAwwyO8gTu3seOWr5XHcwOYB0sDlrG0hwYswYsLhNHMqTzxl66gNFTvdy417zYmVorj8wzhBc1MDTORBC(1wnGHxzhReZ4DnHAZUw01no)ARgWWR3ZKzEDIs4TEpKZPUTjuB21GY(HJm)SEpKZPUTw01no)AJrIqceeeeeeeeLStrceeeeeeeeeeeeNUHChuF5ENvcCK5NMLfgkVrl1TebsFyjlzjlvECgAc1MDTORBC(1wnGHxVNjZ86eLWB9EiNtDBtO2SRbL9dhz(z9EiNtDBTORBC(1gJebbbbbbbbHeiiiiiiiiQBajqqqqqqqqibcccIs2Pibccccccccjqqqqqqqq(dO2SRfDDJZV2Qbm869qoN626DtFRLZ7gIudVAbPXkuPsfG2zuhsGGGGGGGGGGGGUhY5u3wVB6BLygVdQeuF5ENvcCK5NMLfgq5zjcK(GHMq3d5CQBR3n9TsmJ3XirqqqqibcccccccIs2Pibccccccccccc6EiNtDB9UPVvIz8oOsq9L7DwjWrMFAwwyWsei9bdnHUhY5u3wVB6BLygVJrIqceeeeeeee1nGeiiiiiiiiKabbbbbbb5pGAZUw01no)ARgWWR3d5CQBR3n9TsmJ3bfmGsdzCdqTzxl66gNFTvdy4v2XkXmEhuWakn0oJ6qceeeeeeeeeeeeNUHChuF5ENvcCK5NMLfgkVrl1TuV84qblu5nAPULiq6JYJdfSqL3OL6wIaPpSKLSKLkpodnHAZUw01no)ARgWWR3ZKzEDIs4Tw0nMp9oRnHUhY5u3wVB6BLygVRjuB21IUUX5xB1agE9EMmZRtucVv2XMqTzxl66gNFTvdy4v2XkXmExtO2SRfDDJZV2Qbm869mzMxNOeER3d5CQBBc1MDnOSF4iZpR3d5CQBRfDDJZV2yKiKabbbbbbbrj7u)buB21IUUX5xB1agE9EiNtDB9UPVvIz8oOGbuAODg1HeiiiiiiiiiiiioDd5oO(Y9oRe4iZpnllmuEJwQBPE5XHcwOYB0sDlrG0hwYswYsLhNHMqTzxl66gNFTvdy417zYmVorj8wl6gZNEN1Mq3d5CQBR3n9TsmJ31eQn7Arx348RTAadVEptM51jkH369qoN62MqTzxdk7hoY8Z69qoN62Arx348RngjcjqqqqqqqquYo1Fa1MDTORBC(1wnGHxzhReZ4DqbdO0q7mQdjqqqqqqqqqqqqC6gYDq9L7DwjWrMFAwwyO8gTu3sei9r5XHcwOYB0sDlrG0hwYswYsLhNHMqTzxl66gNFTvdy417zYmVorj8wzhBc1MDTORBC(1wnGHxzhReZ4DnHAZUw01no)ARgWWR3ZKzEDIs4TEpKZPUTjuB21GY(HJm)SEpKZPUTw01no)AJrIqceeeeeeeeLStrceeeeeeeeeeeeNUHChuF5ENvcCK5NMLfgkVrl1TebsFyjlzjlvECgAc1MDTORBC(1wnGHxVNjZ86eLWB9EiNtDBtO2SRbL9dhz(z9EiNtDBTORBC(1gJebbbbbbbbHeiiiiiiiiQBajqqqqqqqqibcccI6gqceeeesOUHpYPw9z3KnM0pUucVF0mU(5PtCVvRuE5Yd0Vr6p6D(ToMpzssx6W3OWhnJRp76)0hp8oFF2p9XEo0n8rOXW(Mp)4qU2ZHUHVSF)9JeM1oo609BCJ4i0hdMd7R)W2hTFrIX6M(yNsEKIS3TF0(fjgRB6JMHb)6ZodzD5ERwP8(p97hp4MtAC5M18ni0hTJFyN9wqqwXkwDRfcMkHAH4sxGvSk9FCXkc(XL7TALY)PpU2ys)yFnBy)JJH9nFwN5hOFC9N0Hpg6OZtD7hnHB(JHDALjLpsDlZSDO8VSpg2PvMz7q5FGpsNN62pMISDO8pg2P1qNF)aFKz2ou(AJj9BuOLpg2PvMz7q5RnM0pWVF0fEoX9wTs59VrHpoJ6ToBFlsnnHiuQPMMqPYQuBPfc1YT)4Ive8JJzYm)N(g3EliibjuQexAIJGPYkcricrOBT8hxP2Y3OL3ccsCTqOutLvPMkRcE6wiy6G)hxP2YVFKmBg(Ppg2PvhDEk)l7JRHK62F6JNHKR)N(93p2zsh)Pp29oRK0Vrl)(XdZ46ZUF6JNHKR)N(93pYnJ0F6JNHKR)N(93pg2P1rstV)b(ipts)PpEgsU(F63F)iZ5zUgsQB)PpEgsU(F63F)yyNw7mPJFGposA69F6JDVZkj9JPW(fTCC63pg2P1X8zzM9d8Xb)XHFmKCT9tF8mKC9)0V)(7h9dFSORBC(1guadh6cAIs4f6cY(ERZ2F)gP(tFKWS2XrNUFJlcrGcPBj1cPsOBPsVsNo1pwwMpq53ZKz(p9nk8wqqcvGGek1wyvAwLAleIvbp4)XvQT8nU9wqWujylT0sH0PYQuleCcsqw9hxP2Y3GvFJc)(r)y29L9XJSBTG0yT)rwBot2Tydl)XYm87zYm)N(gfEliebt9wQTKkXLUfcLMqem4f(JRuz13OL3ccrWcb)wHwsn1wsLGe8wWj4FCLAl)(rYSz4N(yyNwD05P8VSpUgsQB)PpEgsU(F63F)yNjD8N(y37Sss)gT8XZqY1)tFJcFGVrlFGF)9JJKME)N(y37Sss)ykSFrlhN(4zi56)PpAFwJyZXYFGF)9JCZi9N(4zi56)PF)9Jd(Jd)yi5A7N(4zi56)PF)9J8mj9N(4zi56)PF)9JmNN5AiPU9N(4zi56)PF)9JhMX1ND)0hpdjx)p97VFmStRDM0XpWhd706y(SmZ(b(yyNwhjn9(h43pYPw9z3KnM0pAc5MYm8p2xZyR9VSp2zA4TApA3SHCZs)Y(O3536y(KjjDPdFJcFCPeEd50pgG0pxZLHpazFJFakGH)XYY8bkN1oo609B0YhllZhO8IUoD)gP)4sj8EptM5)0342BbbjUGxGGbNqexAwf8B3yv60)XvQT8nA5TGGeSL0PsWGNAAwriwrW0TK(pUsTLF)4yyFZNtucVFeji5JMX1ppDI7TALYlxEG(ns)XbFNjPX2eLWRDPh7hH(OX5pnRp7(PpEA8UF6JJzYm3(FJcFCiKBwF29rce8u)OHK5mZKnM0pAizoZKIqYo9JJzYmpW3OWhhZKzoX(gf(OHK5mJfHUXpcbbbXPBi3bDe6gxF2XctE2kN27nH6RHVnHgOKRHrKabbbbbrMhnKqgNvskujiwyYZw50EhQ8HUbv(qNMDgby6ze6cILtZoJam9qep0ngrceeeeeeNUHChuFn8fkyHyHfwon7mc09owmoRKugHcwOcms83yeQ8HgOKRHrKabbbrDdibc6JHDA1qYCM5d8X1gt6hhd7B(8JHDADmtM5FGpAizoZ8nstGw(yF0qsj83OWhT9ns)XXmzMpzJj9JJH9nF(XXmzMZ(Bu4JJzYm3Iq34h50nK7GUUGk66gNFTbfWWHUUGcydAYoE3MzcDbvKK0pyCxZj2e6w6ceI4ttqIVqWrYrOBC9zhlm5zRCAV3eIxOjK1cnHkRqtitHMq8BnHSERjuz3AczUXisGGGGqceeeuB21IUUX5xB1agE9EMmZRbm8ACnByVaujO2SRfDDJZV2Qbm869mzMxdy414A2WEbOmhIblSi4eQLaSTGbIqceeeuB21IUUX5xB1agE9EMmZRbm8ACnBy)w1cstFgujO2SRfDDJZV2Qbm869mzMxdy414A2W(TQfKM(mOmhIbIJ4s9(nliiXXaribcccQn7Arx348RTAadVEptM51agEnUMnSFdQeuB21IUUX5xB1agE9EMmZRbm8ACnBy)guMdXGfwK69BwqqIJbIqceeeuB21IUUX5xB1agE9EMmZRbm8ACnByVfOsqTzxl66gNFTvdy417zYmVgWWRX1SH9wGYCgSWcw1sbcsOwyGiKabbbHeiiiO2SRbL9dhz(z1ECJ3vJRzS1oujO2SRbL9dhz(z1ECJ3vJRzS1ouMdLMiKabbb1MDnOSF4iZpR3d5CQBRfDDJZV2Gkb1MDnOSF4iZpR3d5CQBRfDDJZV2GYCO0eHeiiiiKabbbrMhnKqDM0rIXZHmHkbrm6YEC9ZtJmPJeJNdzYcJeHeiiiiY8OHeY3TBEdksjPJlDaQeuNsshxwyvtiIr3jdj1TfDhzwcEtOcnH6mPJeJNdzYiJeHeiiiiY8OHeYavcQaribcccImpAiH4qLGstesGGGGiZJgsiRqLGstesGGGGiZJgsOYGkbLMiKabbbHeiiiiR01(elaBl45Z4Y9oRqLGocDJRp7yPZiesGGGGGGGGiZJgsOQbQeubIqceeeeeeeezE0qcv5qLGstesGGGGGGGGiZJgsOQvOsqficjqqqqqqqqK5rdjuTmOsqPjcjqqqqqqqqibcccccccYFa5YlelDOsLGCEsgH2zuhsGGGGGGGGGGGGqceeeeeeeeeeeu1avcAZUWZYOCw6l37SsGEyzS0BcvOj0ngBcvGqmsesGGGGGGGGGGGGQCOsqB2fEwgLZsF5ENvc0dlJLEtOwAcXkgBcvGqmsesGGGGGGGGGGGGQwHkbTzx4zzuol9L7DwjqpSmw6nHsTjeHySjubcXiribcccccccccccQwgujOn7cplJYzPVCVZkb6HLXsVjuWBcrqgBcvGqmsesGGGGGGGGGGGGqceeeeeeee1nGeiiiiiiiiKabbbbbbbXPBi3bv5nHQwBcvlRju1qesGGGGOUbKabbbHeiiiiKabbb5pGAZUgu2pCK5Nv7XnExnUMXw7qbdO0q7mQdjqqqqqqqqibcccccccI3eYAtOYAczGkbzLU2NybyBbpFgxU3zLL2SRfDDJZV2Qbm869mzMxdy414A2WElmseeesGGGGGGGGqceeeeLSt9hqTzxdk7hoY8Z69qoN62Arx348RnOsLGkKonuMdXIVB38guKsshx6aKXna1MDnOSF4iZpR3d5CQBRfDDJZV2GcgLGcEAgH2zuhsGGGGGGGGqceeeeeeeeVjK1MqL1eYavcYkDTpXcW2cE(mUCVZklTzxl66gNFTvdy417zYmVgWWRX1SH9Bvlin9zmsesGGGGGGGGqceeeeLStrceeeeeeeesGGGGGGGG4nHS2eQSMqgOsqwPR9jwa2wWZNXL7DwzPn7Arx348RTAadVEptM51agEnUMnSxGrIqceeeeeeeesGGGGOUbKabbbHeiiiioDd5oioXFl1uBczL4VLAQnHkJ4VLAQnHme)TutLiKqDdibjibjFKNxZs)gP)yF0qsT9nk8rc)ns)7VFC5ERwP8F6JHDALz2ou(h4JmZ2HYxBmPFJcT8XWoTYmBhkFTXK(b(yNjLKSH5K(ns)X1gt6h7Rzd7FKop1TFmfz7q5FmStRmP8rQBzMTdL)L9XXW(MpRZ8d0pU(t6Whd70ANjLKSH5K(b(yOJop1TF0eU5pg2P1qNF)a)(XLs49l7JlLWB0px0Vrbc(X1Fs5FzFC9NuUfKgR9pYAZzYUfBy5po47bZHUX1pp9JgsYpwMzS1bEM59mzM)tFJcFJ0FJBFJ0FJw(gP)gS6TivcLkbBHveIqe8w6ujuWlK(pUsLv)(rZ46ZU(p9X(A47p9XHC1kz2oFzF0kz2ovZ46ZUp2NLTZhhY1XW(Mp)Y(OvYSDQhCZj9JTPMwzhYn95wrx348RnOago0fu5mEhuad)3F)4mQ36S9BCJqF0fEoX9wTs59VrlFSSmFGY)aFSSmFGYT8Gv6hNYzY1ZeI6inCR0HpwwMpq5r)Cr)gfU9r)Whl66gNFTbfWWHUGcK5duo0furx348Rni7tnd2(4GVZK0yBIs41(ERZ2pc9X1Fs5r)Cr)gfi4hndd(1NDgY6Y9wTs59F6Bu4N(4Y9wTs5)0hxBmPFSVMnS)XEyz05PUngEC4j8hR3zhNQXj22F6JDMusYgMt6342ncEJqP)iDEQB)i7X1NDqZPBkJK(XEyz05PUnfC6HNWFmMclBx7(ro1qgzsjjByoPFmOSFaYY8qMRp7(yyNw7mPKKnmN0pWh7mPKKfh6)0VFmStRHo)(b(yOJop1TF0eU5p6mN0(p97hdD(9Jmjn2O8poqll84yYgt6hzDw2UPWI5y3F)yOB5ERwP8F6JDMusYgMt6342ncEJqP)93VXTF6Jl3B1kL)tFCTXK(rti38XEyz05PUngEC4j8hR3zhNQXj22F6J05PU9JSoQHCN9XEyz05PUnfC6HNWFmMclBx7(XotkjzXH(p97hDMtA)N(gf(yqz)WrMF(7hdD(9Jmjn2O8p6DZt5D6h4Jd0YcpoMSXK(rwNLTBkSyo293pg6wU3Qvk)N(93F)4yMmZ)PF)4b3CsJl3SMVrQF0o(HD23ivI72hlZm2QvEo0nCptM5)03OWBbbBPfcLo4SIqPzvlem4bNvb)pUsTLVXT3ccwivIJve6gbtLv3iowfCcsO)4k1w(gT8nk8ny13i9V)(ni0p9rcZAhhD6(nUiebkKULulKkHULk9kD6u)yzz(aLFptM5)03OWBbHUvGqbVLwiu6wUf8B3stC)XvQP(nU9ns)nA5TGq3kqOG3slekDl3c(TBPjU)4kvw9ny13OWVFSmZyRw55q3W9mzM)tFJcVfeSLwiu6GZkcLMvTqWGhCwf8)4k1w(g3EliyHujowrOBemvwDJ4yvWjiH(JRuB5B0Y3OW3GvFJ0)(XJSBTG0yT)rwBot2Tydl)XYm87zYm)N(gfEliebt9wQTKkXLUfcLMqem4f(JRuz13OL3ccrWcb)wHwsn1wsLGe8wWj4FCLAl)(rYSz4N(yyNwD05P8VSpUgsQB)PpEgsU(F63F)yNjD8N(y37Sss)gT8XZqY1)tFJcFGVrlFGF)9JJKME)N(y37Sss)ykSFrlhN(4zi56)PpAFwJyZXYFGF)9J8mj9N(4zi56)PF)9Jd(Jd)yi5A7N(4zi56)PF)9JCZi9N(4zi56)PF)9JmNN5AiPU9N(4zi56)PF)9JhMX1ND)0hpdjx)p97VFmStRDM0XpWhd706y(SmZ(b(yyNwhjn9(h43pYPw9z3KnM0pAc5MYm8p2xZyR9VSp2zA4TApA3SHCZs)Y(O3536y(KjjDPdFJcFCPeEd50pgG0pxZLHpazFJFakGH)XYY8bkN1oo609B0YhllZhO8IUoD)gf(4sj8EptM5)0342BbbjUGxGGbNqexAwf8B3yv60)XvQT8nA5TGGeSL0PsWGNAAwriwrW0TK(pUsTLF)4yyFZNtucVF86cQORBC(1guadh66ckGnOj74DBMj0furss)GXDnNytOBPlqiIpDWj(BbhjhHUX1NDSWisGGGG40nK7GyGbIqc1nGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeKGeK8rZ46NNoX9wTs5Llpq)gP)4GVZK0yBIs41U0J9JqF048NM1ND)0hpnE3p9XXmzMB)VrHpoeYnRp7(ibcEQF0qYCMzYgt6hnKmNzsrizN(XXmzMh4Bu4JJzYmNyFJcF0qYCMXIq34hHGGG40nK7GocDJRp7yHjpBLt79Mq91W3MqduY1WisGGGGGGiZJgsiJZkjfQeelm5zRCAVdv(q3GkFOtZoJam9mcDbXYPzNraMEiIh6gJibcccccIt3qUdQVg(cfSqSWclNMDgb6EhlgNvskJqblubgj(Bmcv(qduY1WisGGGGOUbKab9XWoTAizoZ8L9X1gt6hhd7B(8J9rdj123OWhnKmNz(gPjqlFCmtM5S)gf(OTVr6poMjZ8jBmPFCmSV5Zpg2P1XmzM)b(4yMmZTi0n(roDd5oORlOIUUX5xBqbmCORlOa2GMSJ3TzMqxqfjj9dg31CInHULUaHi(0eK4leCKCe6gxF2XctE2kN27nH4fAczTqtOYk0eYuOje)wtiR3Acv2TMqMBmIeiiiiKabbb1MDTORBC(1wnGHxVNjZ8AadVgxZg2lavcQn7Arx348RTAadVEptM51agEnUMnSxakZHyWclcoHAjaBlyGiKabbb1MDTORBC(1wnGHxVNjZ8AadVgxZg2VbvcQn7Arx348RTAadVEptM51agEnUMnSFdkZHyWcls9(nliiXXaribcccQn7Arx348RTAadVEptM51agEnUMnS3cujO2SRfDDJZV2Qbm869mzMxdy414A2WElqzodwybRAPabjulmqesGGGGAZUw01no)ARgWWR3ZKzEnGHxJRzd7TuBB4oVZkujO2SRfDDJZV2Qbm869mzMxdy414A2WEl12gUZ7ScL5myHfwyHfwKondeHeiiiO2SRfDDJZV2Qbm869mzMxdy414A2WElvl7gGkb1MDTORBC(1wnGHxVNjZ8AadVgxZg2BPAz3auMZGfwyHfPtNondeHeiiiiKabbb1MDnOSF4iZpR2JB8UACnJT2Hkb1MDnOSF4iZpR2JB8UACnJT2HYCO0eHeiiiO2SRbL9dhz(z9EiNtDBTORBC(1gujO2SRbL9dhz(z9EiNtDBTORBC(1guMdLMiKabbbHeiiiiY8OHeQZKosmEoKjujiIrx2JRFEAKjDKy8CitwyKiKabbbrMhnKq(UDZBqrkjDCPdqLG6us64YcRAcrm6oziPUTO7iZsWBcvOjuNjDKy8CitgzKiKabbbrMhnKqgOsqficjqqqqK5rdjehQeuAIqceeeezE0qczfQeuAIqceeeezE0qcvgujO0eHeiiiiKabbb5pGAZUgu2pCK5Nv7XnExnUMXw7qbdO0q7mQdjqqqqqqqqK5rdj0mtFPqLGMJZVrMusswNPVuwyGjPXgLZaJeHeiiiiiiiiKabbbbbbbrMhnKqwhhGkbvGaPcr8qSuakyHMz6lLrIqceeeeeeeesGGGGGGGG8hqwhhGy9dLMabpvODg1HeiiiiiiiiiiiiKabbbbbbbbbbbzDCaQeuAce8ujcjqqqqqqqqqqqqibcccccccI6gqceeeeeeeesGGGGGGGG8hqwhhGcgqTzxdk7hoY8ZQ9PNgVZ7SwN8NuODg1bbbbbbbbHeiiiiiiiiiiiiKabbbbbbbbbbbXBczTjuznHmqLGSsx7tSaSTGNpJl37SYsB21IUUX5xB1agE9EMmZRbm8ACnByVLQLDdmseeesGGGGGGGGGGGGqceeeeeeeeLSt9hqwhhk)BqbdO2SRbL9dhz(z1(0tJ35DwRt(tk0oJ6qceeeeeeeeeeeesGGGGGGGGGGGG4nHS2eQSMqgOsqwPR9jwa2wWZNXL7DwzPn7Arx348RTAadVEptM51agEnUMnS3sTTH78oRmseeesGGGGGGGGGGGGqceeeeeeeeLStrceeeeeeeeeeeesGGGGGGGGGGGG4nHS2eQSMqgOsqwPR9jwa2wWZNXL7DwzPn7Arx348RTAadVEptM51agEnUMnS3cJebbHeiiiiiiiiiiiiKabbbbbbbrDdibccccccccjqqqqqqqqibcccIs2P(dO2SRbL9dhz(z9EiNtDBTORBC(1guPsqfsNgkZHyX3TBEdksjPJlDaY4gGAZUgu2pCK5N17HCo1T1IUUX5xBqbJsqbpnJq7mQdjqqqqqqqqibcccccccI3eYAtOYAczGkbzLU2NybyBbpFgxU3zLL2SRfDDJZV2Qbm869mzMxdy414A2W(ngjcjqqqqqqqqibcccIs2Pibccccccccjqqqqqqqq8MqwBcvwtidujiR01(elaBl45Z4Y9oRS0MDTORBC(1wnGHxVNjZ8AadVgxZg2lWiribccccccccjqqqqu3asGGGGqceeeeNUHCheN4VLAQnHSs83sn1MqLr83sn1MqgI)wQPsesOUHpYZRzPFJ0FKWFJ0FSpAiPe(Bu43F)4Y9wTs5)0hxBmPFSVMnS)XXW(MpRZ8d0pU(t6WhdD05PU9JMWn)XWoTYKYhPULz2ou(x2hd70kZSDO8pWhPZtD7htr2ou(hd70AOZVFGpYmBhkFTXK(nk0Yhd70kZSDO81gt6h43pUucVFzF0pMDFzFC9Nu(x2hx)jLBbPXA)JS2CMSBXgw(JDMgER3ZKz(p9nk8wqWujylT0sH0PYQuleCcsqw9hxP2Y342BbbzvWdEleIvPtZkwrOBfsh8)4k1w(9JLzgBDGNzEptM5)03OW3i93423i93OLVr6VbRElsLqPsWwyfHiebVLovcf8cP)JRuz1VFCPeEJ(5I(nkqWpoJ6ToB)g3i0hDHNtCVvRuE)Bu4JLL5du(h4JLL5duULhSs)yas)Cnxg(a0uotUEMFSSmFGYJ(5I(nkC7JMX1ND9F6J91W3F6Jd5QvYSD(Y(OvYSDQMX1NDFSplBNpoKRJH9nF(L9rRKz7up4Mt6hBtnTYoKB6ZTIUUX5xBqbmCOlOYz8oOag(VF8W789z)0hhY1Eo0n8L9XEo0n8rOXW(Mp)yph6gQJZmohL8JrlM7)93pwwMpq5bmJToWZm)yJSJ(r)Whl66gNFTbfWWHUGkNX7Gcy4FCW3zsASnrj8AFV1z7hH(46pP8OFUOFJce8JJzYm)N(9JhCZjnUCZA(gS6J2XpSZ(gPsC3(OzyWV(SZqwxU3QvkV)t)(XbFpyo0nU(5PF04S9XotdV1pWVFJG)tFSSmFGYVNjZ8F6Bu4BKMae3TcPsicsOBbNvPMM4i4342BbblKkXXkcDJGPYQBehRcobj0FCLAlFdw9nk87hlZm2QvEo0nCptM5)03OW3inbiUBfsLqeKq3coRsnnXrWVXT3ccwivIJve6gbtLv3iowfCcsO)4k1w(gT8nk8ny13i9VF8i7wlinw7FK1MZKDl2WYFSmd)EMmZ)PVXT3ccgCIl1Bek1cPYkcDJ4yvle8pUsTLVrlVfeK4cEbcgCcrCPzvWVDJvPt)hxP2YVFKmBg(Ppg2PvhDEk)l7JRHK62F6JNHKR)N(93posA69F6JDVZkj9JPW(fTCC6JNHKR)N(O9znInhl)b(93p2zsh)Pp29oRK0VrlF8mKC9)03OWh4B0Yh43F)4HzC9z3p9XZqY1)t)(7hh8hh(XqY12p9XZqY1)t)(7h5zs6p9XZqY1)t)(7hzopZ1qsD7p9XZqY1)t)(7hd70ANjD8d8rUzK(tF8mKC9)0V)(XWoToMplZSFGpg2P1rstV)b(9JCQvF2nzJj9JMqUPmd)J91m2A)l7JDMgER2J2nBi3S0VSp6D(ToMpzssx6W3OWhxkH3qo9Jbi9Z1Cz4dq234hGcy4FSSmFGYzTJJoD)gT8XYY8bkVORt3VrHpUucV3ZKz(p9nU9wqqIl4fiyWjeXLMvb)2nwLo9FCLAlFJwEliibBjDQem4PMMveIvemDlP)JRuB53pog2385eLW7hrcs(OzC9ZtN4ERwP8YLhOFJ0FCW3zsASnrj8Ax6X(rOpAC(tZ6ZUF6JNgV7N(4yMmZT)3OWhhc5M1NDFKabp1pAizoZmzJj9JgsMZmPiKSt)4yMmZd8nk8XXmzMtSVrHpAizoZyrOB8JqqqqC6gYDqhHUX1NDSWKNTYP9EtO(A4BtObk5AyejqqqqqqK5rdjKXzLKcvcIfM8SvoT3HkFOBqLp0PzNraMEgHUGy50SZiatpeXdDJrKabbbbbXPBi3b1xdFHcwiwyHLtZoJaDVJfJZkjLrOGfQaJe)ngHkFObk5Ayejqqqqu3asGG(yyNwnKmNz(Y(4AJj9JJH9nF(XWoToMjZ8pWhnKmNz(gPjqlFCmtM5t2ys)4yyFZNF023i9hj83i9h7JgsQTVrHpoMjZClcDJFKt3qUd66cQORBC(1guadh66ckGnOj74DBMj0furss)GXDnNytOBPlqiIpnbj(cbhjhHUX1NDSWKNTYP9EtiEHMqwl0eQScnHmfAcXV1eY6TMqLDRjK5gJibccccjqqqqTzxl66gNFTvdy417zYmVorj8wl6gZNENvOsqTzxl66gNFTvdy417zYmVorj8wl6gZNENvOmhIblSWclSWclSGbIqceeeesGGGGiZJgsidujO0eHeiiiiY8OHeIdvcknribcccImpAiHScvcknribcccImpAiHkdQeuAIqceeeesGGGG8hqwPR9jwa2wWZNXL7DwHq5vcY5jH2zuhsGGGGGGGG4nHS2eQSMqgOsqwPR9jwa2wWZNXL7DwzPn7Arx348RTAadVEptM51agETOBmF6DwzKiKabbbrDdibccccjqqqqibcccIt3qUdIt83sn1Mqwj(BPMAtOYi(BPMAtidXFl1ujcju3Wh551S0Vr6p2hnKuc)nk8XXmzMZ(Bu43F)4Y9wTs5)0hd70kZSDO8pWhzMTdLV2ys)gT8XWoTYmBhkFTXK(b(4yyFZN1z(b6hx)jD4JRnM0pog2385hd70AOZVFGpsNN62pw01no)A7JJH9nFwxBmPFSVMnS)XXW(MpTxi3S(S7JxxqfDDJZV2Gcy4qxxqbSbnzhVBZmHUGkss6hmUR5eBcDlDbcr8PjiXxi4i5i0nU(SJfgrceeeuB21IUUX5xB1agE9EiNtDB9UPVvIz8oOsqPjcjqqqqTzxdk7hoY8Z69qoN62Arx348RnOsqZX53uKTdLZcdmjn2OCgAcftHLTRDRPG1ABz7xJSo22J1Axzn7hi2e6iZhPZH5GzPmsesGGGGAZUw01no)ARgWWR3d5CQBR3n9TwoVBisn8QfKgRqLGstesGGGGiZJgsOXqoN62itkjjujO5487DtF9oRfDhzwy9XK0yJYz9XiribcccImpAiHgd5CQBVpZ4CusOsqZX537ZmohLSO7iZcRpMKgBuoRpgjcjqqqqK5rdjuNjDKy8CitOsqeJUShx)80it6iX45qMSWiribcccImpAiH8DlYB5Ius64shGkb1PK0XLfw1eIy0DYqsDBr3rMLcnHU1eQZKosmEoKjJmsesGGGGiZJgsOuuSH5KcvcQtjPJll3Acrm6oziPUTO7iZcHAcvOjuNjDKy8CitgzKiKabbbrMhnKq(EkkYEC9ZtHkb1PK0XLLcfAcnhNFdeECWcdmjn2OCgAcLIInmNugzKiKabbbrMhnKqXBLRH5KcvcQtjPJll3Acrm6oziPUTO7iZsWBc1stOot6iX45qMmYiribcccImpAiH894TYXEC9ZtHkb1PK0XLLcfAcnhNFdeECWcdmjn2OCgAcfVvUgMtkJmsesGGGGqceeeezE0qcngY5u3gzsjjVpZ4CusOsqopjribccccjqqqq(dOXqoN62itkjjuPsqopjKXnangY5u3EFMX5OKqLkb58Kq7mQdjqqqqqqqqTzxl66gNFTvdy417HCo1T17M(wjMX7GkbLMiKabbbbbbbXPBi3bLUz6MPBMMiKabbbrj7u)b0yiNtDBKjLKeQujiNNeANrDibcccccccAmKZPUnYKssEFMX5OKqLGgd5CQBVpZ4CusIqceeeeLStrceeeeeee0yiNtDBKjLK8(mJZrjHkbngY5u3gzsjjjcjqqqqu3asGGGGqceeeezE0qcvUaqLGigDJmPKKfDhzwiyAI7gJeHeiiiiY8OHeQCwavcIy0nYKssw0DKzPqQSkDWzKiKabbbrMhnKqLlY03kfQeeXOBKjLKSO7iZsWBj1cPzKiKabbbrMhnKqLlsnCOsqeJUrMusYIUJmlSIGPzvQmsesGGGGiZJgsOy7GGkbrm6gzsjjl6oYSClDQTKAbgjcjqqqqK5rdjuqtqLGigDJmPKKfDhzwAHvexbwXisGGGGqceeeK)aQtjPJllfAcngY5u3gzsjjVpZ4CusgHkvcQtjPJllfAcvUamcTZOoORRY5Ddqbin9fjqqqqqqqqibcccccccYFa57wK3YfPK0XLoaTZOoKabbbbbbbbbbb1MDTORBC(1wnGHxVhY5u3wVB6BLygVdQeuHBqLpubcCJiKabbbbbbbrj7uKabbbbbbbbbbb1MDTORBC(1wnGHxVhY5u3wVB6BLygVdQeuHBeHeiiiiiiiiQBajqqqqqqqqibcccIs2P(dOoLKoUSuOj0yiNtDBKjLK8(mJZrjzeQujOoLKoUSuOju5SGrODg1bDDvoVBaYcsJnKabbbbbbbHeiiiiiiii)bKVBrElxKsshx6a0oJ6qceeeeeeeeeeeuB21IUUX5xB1agE9EiNtDB9UPVvIz8oOsq3GkFOce4gribcccccccIs2PibcccccccccccQn7Arx348RTAadVEpKZPUTE303kXmEhujOBeHeiiiiiiiiQBajqqqqqqqqibcccIs2P(dOoLKoUSuOj0yiNtDBKjLK8(mJZrjzeQujOoLKoUSuOju5IudNrODg1bDDvoVBaksn8MqMEp807Sc1c0A4wPBhQm6OjStHSdfAi7y9TqT6Y2bAw2oqNgNnODgLtHmC6ChKabbbbbbbHeiiiiiiiO2SRfDDJZV2Qbm869qoN626DtFReZ4DqLGAHiKabbbbbbb1MDTORBC(1wnGHxVhY5u3wVB6BTCE3qKA4vlinwHkbvGiKabbbbbbbHeiiiikzN6pG6us64YsHMqJHCo1TrMusY7ZmohLKrOsLG6us64YsHMqLlY03kLrODg1bDDvoVBakY03kfjqqqqqqqqibcccccccYFa57wK3YfPK0XLoaTZOoKabbbbbbbbbbb1MDTORBC(1wnGHxVhY5u3wVB6BLygVdQeeRGkFOce4gribcccccccIs2PibcccccccccccQn7Arx348RTAadVEpKZPUTE303kXmEhujiwresGGGGGGGGOUbKabbbbbbbHeiiiikzN6pG6us64YsHMqJHCo1TrMusY7ZmohLKrOsLG6us64YsHMqX2bXi0oJ6GUUIZmdz7a1oZhMBqbL9dqqqqibcccccccQn7Arx348RTAadVEpKZPUTE303kXmEhujOBPsesGGGGOKDQ)aQtjPJllfAcngY5u3gzsjjVpZ4CusgHkvcQtjPJllfAcf0eJq7mQd66kiZjtUFeAkhoodjqqqqqqqqTzxl66gNFTvdy417HCo1T17M(wjMX7GkbXkIqceeeeLStrceeeeeeeuB21IUUX5xB1agE9EiNtDB9UPVvIz8oOsqPjcjqqqqqqqqC6gYDqPBMUz6MPjcjqqqqu3asGGGGqceeeK)aY3trr2JRFEk0oJ6qceeeeeeeuB21IUUX5xB1agE9EiNtDB9UPVvIz8oOsqTzxl66gNFTvdy417HCo1T17M(wjMX7GkFOce4wQeHeiiiiQBajqqqqibcccYFa57XBLJ946NNcTZOoKabbbbbbb1MDTORBC(1wnGHxVhY5u3wVB6BLygVdQeuB21IUUX5xB1agE9EiNtDB9UPVvIz8oOYh6gbsLiKabbbrDdibccccjqqqqibcccIt3qUdIL2SRbL9dhz(z9EiNtDBTORBC(1wW2MDTORBC(1wnGHxVhY5u3wVB6BLygVJXMfsNUz6MPjcju3Whhd7B(8JxxqfDDJZV2Gcy4qxxqbSbnzhVBZmHUGkss6hmUR5eBcDlDbcr8PjiXxi4i5i0nU(SJfgrceeeeNUHCh0YdPeHeQB4JJZOJT(XqMdML(XqhDEQB)OjCZ)(XLs49l7JlLWB0px0Vrbc(X1Fs5FzFC9NuUfKgR9pYAZzYUfBy5pwMzS1bEM59mzM)tFJcFJ0FJBFJ0FJw(gP)gS6Bu43poJ6ToB)g3i0hDHNtCVvRuE)BC7JLL5duULhSs)yas)Cnxg(a0uotUEMFSSmFGYJ(5I(nA5J(XS7l7JDMgERT9d7SVbb)yNPH3kRJ6ToB)g3i0h9dFSORBC(1guadh6c6UPVENvOag(hh8DMKgBtucV23BD2(rOpU(tkp6Nl63Oab)4GVhmh6gx)80pAC2(4b3CsJl3SMVrlF0o(HD23ivI72hndd(1NDgY6Y9wTs59F6Bu4N(4Y9wTs5)0hxBmPFSVMnS)XbAzHhht2ys)iRZY2nfwmh7(XEyz05PUngEC4j8hR3zhNQXj22F6JHDALjLpsDlZSDO8VSpg2PvMz7q5FGpsNN62pMISDO8p2dlJop1TPGtp8e(JXuyz7A3pg6OZtD7hnHB(JmZ2HYxBmPFJcT8XotkjzXH(p97hdD(9Jmjn2O8p6mN0(p97hd70AOZVFGpg2PvMz7q5RnM0pWhpcjj7Jg3h43pg6wU3Qvk)N(93F)4yMmZ)PF)yNPH36h43Vbb)Pp2zA4T22pSZ(ge8JLL5du(9mzM)tFJcFJ0eG4UvivcrqcDl4Sk10ehb)g3EliyHujowrOBemvwDJ4yvWjiH(JRuB5BWQVrHF)OFm7(Y(4r2TwqAS2)iRnNj7wSHL)yzg(9mzM)tFJwEliy6ceSqWBHvPYQB3sZQcb)pUsTLF)iz2m8tFmStRo68u(x2hxdj1T)0h7ENvs63OaR(4zi56)PF)9JJKME)N(y37Sss)ykSFrlhN(4zi56)PpAFwJyZXYFGF)9JDM0XF6JDVZkj9B0Yhpdjx)p9nk8b(gT8b(93pYZK0F6JNHKR)N(93pg2P11qsD7h4Jd(Jd)yi5A7N(4zi56)PF)9JCZi9N(4zi56)PF)9JmNN5AiPU9N(4zi56)PF)9JhMX1ND)0hpdjx)p97VFmStRDM0XpWhd706y(SmZ(b(yyNwhjn9(h43pYPw9z3KnM0pAc5MYm8p2xZyR9VSp2zA4TApA3SHCZs)Y(O3536y(KjjDPdFJcFCPeEd50pgG0pxZLHpazFJFakGH)XYY8bkN1oo609B0YhllZhO8IUoD)gf(4sj8EptM5)0342BbbjUGxGGbNqexAwf8B3yv60)XvQT8nA5TGGeSL0PsWGNAAwriwrW0TK(pUsTLF)4yyFZNtucVFeji5JMX1ppDI7TALYlxEG(ns)XLs4n6Nl63Oab)OX5pnRp7(PpEA8UF6JJzYm3(FJcFCiKBwF29rce8u)OHK5mZKnM0pAizoZKIqYo9JJzYmpW3OWhhZKzoX(gf(OHK5mJfHUXpcbbbXPBi3bDe6gxF2XctE2kN27nH6RHVnHgOKRHrKabbbbbrMhnKqgNvskujiwyYZw50EhQ8HUbv(qNMDgby6ze6cILtZoJam9qep0ngrceeeeeeNUHChuFn8fkyHyHfwon7mc09owmoRKugHcwOcms83yeQ8HgOKRHrKabbbrDdibc6JHDA1qYCM5l7JRnM0pog2385hd706yMmZ)aF0qYCM5BKMaT8XXmzMZ(Bu4J2(gP)4yMmZNSXK(XXW(Mp)iH)gP)4yMmZTi0n(roDd5oORlOIUUX5xBqbmCORlOa2GMSJ3TzMqxqfjj9dg31CInHULUaHi(0eK4leCKCe6gxF2XctE2kN27nH4fAczTqtOYk0eYuOje)wtiR3Acv2TMqMBmIeiiiiKabbb1MDTORBC(1wnGHxVNjZ86eLWBLDeQeuB21IUUX5xB1agE9EMmZRtucVv2rOmhIblSWEwKoTfwWaribccccjqqqqK5rdjKbQeubIqceeeezE0qcXHkbLMiKabbbrMhnKqwHkbLMiKabbbrMhnKqLbvcknribccccjqqqq(dixEHyPn7Arx348RTAadVEptM51agELDeQujiNNKriJBaYLxiwSsx7tSaSTGNpJl37ScvQeKZtYi0oJ6qceeeeeeeeVjK1MqL1eYavcYkDTpXcW2cE(mUCVZklTzxl66gNFTvdy417zYmVgWWRSJmsesGGGGOUbKabbbHeiiiioDd5oioXFl1uBczL4VLAQnHkJ4VLAQnHme)TutLiKqDdFKNxZs)gP)yF0qsT9nk8X(OHKs4VrHF)9Jl3B1kL)tFmStRmZ2HY)aFKz2ou(AJj9B0Yhd70kZSDO81gt6h4JJH9nFwN5hOFC9N0HpU2ys)4yyFZNFmStRHo)(b(iDEQB)yrx348RTpog238zDTXK(X(A2W(hhd7B(0EHCZ6ZUpEDbv01no)AdkGHdDDbfWg0KD8UnZe6cQijPFW4UMtSj0T0fieXNMGeFHGJKJq346ZowyejqqqqTzxdk7hoY8Z69qoN62Arx348RnOsqZX53uKTdLZcdmjn2OCgAcftHLTRDRPG1ABz7xJSo22J1Axzn7hi2e6iZhPZH5GzPmsesGGGGAZUw01no)ARgWWR3d5CQBR3n9TsmJ3bvcQn7Arx348RTAadVEpKZPUTE303kXmEhuMdLMiKabbb1MDTORBC(1wnGHxzhReZ4DqLGstesGGGGiZJgsOXqoN62itkjjujO5487DtF9oRfDhzwy9XK0yJYz9XiribcccImpAiH6mPJeJNdzcvcIy0L946NNgzshjgphYKfgjcjqqqqK5rdjKVBrElxKsshx6aujOoLKoUSWQMqeJUtgsQBl6oYSuOj0TMqDM0rIXZHmzKrIqceeeezE0qc572nVbfPK0XLoavcQtjPJllSQjeXO7KHK62IUJmlbVjuHMqDM0rIXZHmzKrIqceeeezE0qcLIInmNuOsqDkjDCz5wtiIr3jdj1TfDhzwiutOcnH6mPJeJNdzYiJeHeiiiiY8OHeY3trr2JRFEkujOoLKoUSuOqtO548BGWJdwyGjPXgLZqtOuuSH5KYiJeHeiiiiY8OHekERCnmNuOsqDkjDCz5wtiIr3jdj1TfDhzwcEtOwAc1zshjgphYKrgjcjqqqqK5rdjKVhVvo2JRFEkujOoLKoUSuOqtO548BGWJdwyGjPXgLZqtO4TY1WCszKrIGGGqceeeesGGGGiZJgsOnVgYi7oujO0ebbbbHeiiiO2SRfDDJZV2Qbm8k7yLygVdQeuAIqceeeezE0qcnMjZCOsqmyHfwyHfwyHfmqesGGGGiZJgsiVRBC(129mzMdvcIblSWclSWclSGbIqceeeezE0qc1zshjgphYeQeeXOl7X1ppnYKosmEoKjlmsesGGGGiZJgsOAtOAtOAtO5pUNdDBtOAtO5pSxi3S(SRjuTjuTjuTjuTj08hrMusYIdqLGMJZVbcpoyHbMKgBuodnziOSF4iZpzGrIqceeeesGGGGAZUgzxBmNYvNtJItrOsqTzxJSRnMt5QZPrXPiuMdLMiKabbbHeiiii)buB21i7AJ5uU6CAuCkcfmGsdTZOoKabbbbbbbDK5qwd9dnhZHUfY7GyA88olTzxJSRXj2trgHgYibcccccccccccAZRHmYUdvcAZRHmYUdfSqTzxJSRXj2tXu2AOFiLiW9COBjcjqqqqqqqqu3asGGGGGGGGqceeeeeeeK)aAZRHmYUdfmGAZUgzxNyTj22fANrDibcccccccccccQn7Arx348RTAadVYowjMX7Gkb1MDnYUoXAtSTluMdLMiKabbbbbbbrj7uKabbbbbbbbbbb1MDTORBC(1wnGHxzhReZ4DqLG28AiJS7qzouAIqceeeeeeee1nGeiiiikzNIeiiiiiiiO2SRfDDJZV2Qbm8k7yLygVdQe01nIqceeee1nGeiiiiKabbb5pGAZUw01no)ARgWWRSJvIz8oiw)LGsdTZOoKabbbbbbb1MDTORBC(1wnGHxzhReZ4DqLGstesGGGGOUbKabbbHeiiii)buB21IUUX5xB1agELDSsmJ3bvQeuAODg1HeiiiiiiiioDd5oO0nt3mDZ0eHeiiiiQBaccccjqqqqibcccQn7Arx348RTAadVYowjMX7Gkb1MDTORBC(1wnGHxzhReZ4DqLpeRicccccjqqqqibcccYFa57POi7X1ppfANrDibcccccccQn7Arx348RTAadVYowjMX7Gkb1MDTORBC(1wnGHxzhReZ4DqLpubcClvIqceeee1nGeiiiiKabbb5pG894TYXEC9ZtH2zuhsGGGGGGGGAZUw01no)ARgWWRSJvIz8oOsqTzxl66gNFTvdy4v2XkXmEhu5dDJaPsesGGGGOUbKabbbHeiiiioDd5oiwAZUgu2pCK5N17HCo1T1IUUX5xBbBB21IUUX5xB1agE9EiNtDB9UPVvIz8UGLL2SRfDDJZV2Qbm8k7yLygVJrgBwiD6MPBMMiKqDdFCmSV5ZpEDbv01no)AdkGHdDDbfWg0KD8UnZe6cQijPFW4UMtSj0T0fieXNMGeFHGJKJq346ZowyejqqqqC6gYDqlpKsesOUHpooJo26hdzoyw6hdD05PU9JMWn)7hxkH3VSpo47mjn2MOeETl9y)i0hNr9wNTFJBe6JR)KYTG0yT)rwBot2Tydl)XYmJToWZmVNjZ8F6Bu4BK(BC7BK(B0Y3i93GvFJc)(X1Fs5FzF0fEoX9wTs59VXTpwwMpq5wEWk9Jbi9Z1Cz4dqt5m56z(XYY8bkp6Nl63OLpwMzSvR8COB4EMmZ)PVrHVrAcqC3kKkHiiHUfCwLAAIJGFJBVfeSqQehRi0ncMkRUrCSk4eKq)XvQT8nA5Bu4BWQVr6F)4GVhmh6gx)80pAC2(yNPH3kRJ6ToB)g3i0hndd(1NDgY6Y9wTs59F6Bu4N(4Y9wTs5)0hxBmPFSVMnS)XqhDEQB)OjCZFmStRmZ2HY)aFKop1TFmfz7q5Fm053pYK0yJY)iZSDO81gt63OqlFmStRmP8rQBzMTdL)L9XWoTg687h4J9WYOZtDBk40dpH)ymfw2U29JHDALz2ou(AJj9d8XEyz05PUngEC4j8hR3zhNQXj22F63pg6wU3Qvk)N(93F)4GVZK0yBIs41(ERZ2pc9X1Fs5r)Cr)gfi4h9dFSORBC(1guadh6cIDyNPF0Nd7qrMEUF7qbm8pEWnN04YnR5BC7J2XpSZ(gPsC3(4yMmZ)PF)yNPH36h43VbX9tFm0TCVvRu(p9XotkjzdZj9BC7gbVrO0)(ro1Qp7MSXK(XLs4nKt)yzKu3q5Yd0pY2E27JMX1ppDI7TALYlxEG(ns)XLs4nKt)yr3s5hMrkR3DtF9oRbmCwV5u86UPVEN1ag(vKPH36h9dFSORBC(1guadh6cQr2Dz38geu5m8wPCOcFC5ERwP8F6JHDA17MNY70pWhd70kZSDO8pWhzMTdL)XcPt)XWoTUgUv6AF6CxHEoD4l7JRnM0p2xZg2)yyNwNrnK7SpWhdD05PU9JMWn)rMz7q51mtk3Sz(hz9)XotkjzdZj9BC7gbVrO0FKop1TFK946ZoO50nLrs)4mQHCN9X0FKtnKrMusYgMt6hdk7hGSmpK56ZUpg2P1otkjzdZj9d8Xzud5oRMzs5MnZ)yW4JHDAn053pWhhd7B(SoZpq)46pPd)(rZWGF9zNHSUCVvRuE)N(gf(PpUCVvRu(p9X1gt6hnHCZh7HLrNN62y4XHNWFSENDCQgNyB)PpsNN62pY6OgYD2h7HLrNN62uWPhEc)XykSSDT7h7mPKKfh6)0VFCmSV5Z6m)a9JR)Ko8rN5K2)PVrHpgu2pCK5N)(rVBEkVt)aFm053pYK0yJY)4aTSWJJjBmPFK1zz7MclMJD)9JHUL7TALY)PF)93pEWnN04YnR5BqOpAh)Wo7Bui1p6cpN4ERwP8(342hNr9wNTFJcPt)rYSz4N(yyNwD05P8VSpUgsQB)Pp29oRK0VrbI7JNHKR)N(g3k8b(g3s)b(93pg2P1rstV)b(yNjD8N(y37Sss)gT87h5zs6p9XZqY1)t)(7hd706AiPU9l7Jd(Jd)yi5A7N(4zi56)PF)9JCZi9N(4zi56)PF)9JmNN5AiPU9N(4zi56)PF)9JhMX1ND)0hpdjx)p97VFCK007)0h7ENvs6htH9lA540VFmStRJ5ZYm7h4JHDATZKo(b(9JeM1oo609BCJ4i0VFJcP)Ppg6wU3Qvk)N(yNjLKSH5K(nUDJG3iu6F)iNA1NDt2ys)4sj8gYPFSmsQBOC5b6hzBp79rZ46NNoX9wTs5Llpq)gP)O3536y(KjjDPdFJcFCPeEd50pw0Tu(HzKY6D30xVZAadN1BofVUB6R3znGHFfzA4T(rJZFAwF29tF804D)0hhZKzU9FlyvWBPLcehRiU03yfXvOfwv4pUsTLpAizoZmzJj9JgsMZmPiKSt)4yMmZz)nk8XXmzMtSVr6pAizoZyrOB8JqqqqC6gYDqhHUX1NDSWKNTYP9EtO(A4BtObk5AyejqqqqqqK5rdjKXzLKcvcIfM8SvoT3HkFOBqLp0PzNraMEgHUGy50SZiatpeXdDJrKabbbbbXPBi3b1xdFHcwiwyHLtZoJaDVJfJZkjLrOGfQaJe)ngHkFObk5Ayejqqqqu3asGG(yyNwnKmNz(aFCTXK(XXW(Mp)yF0qsNSXK(rMHKD6hhc5M1NDFKaP(XWoT2hnK0pWh7JgsQTVrbcK6hnKmNz(gPjqlFSpAiPwe6g)ieeeeNUHCh0rOBC9zhlm5zRCAV3eQVg(o33eQVg(gm1eQpAiPZ9nH6JgsAWeJibcccccImpAiHmoRKuOsqSWKNTYP9ou5dDdQ8Hon7mcW0Zi0felNMDgby6HiEOBmIeiiiiiioDd5oO(A47CpuWcXclSCA2zeO7DSyCwjPmcfSqfyK4VXiu5dXsF0qsN7HUGkWiJnH6RHVbtqblelSWYPzNrGU3XIXzLKYiuWcvGrI)gJqLpel9rdjnyc6cQaJmIeiiiiQBajqqF023i9hj83i9hhZKz(KnM0p2xUXBD2EptM5FmStRJzYm)l7JJzYm3Iq34hHGGG40nK7GocDJRp7yHjpBLt79Mq8cnHSwOjuzfAczk0eIFRjK1BnHk7wtiZngrceeeeeeNUHCheVauWcXctE2kN27qLpel8Bqxq8cmYytiRfGcwiwyYZw50EhQ8HyX6nOliRfyKXMqLvakyHyHjpBLt7DOYhILYUbDbvwbgzSjKPauWcXctE2kN27qLpelMBqxqMcmYisGGGGOUbKab9rEEnl9BK(J9rdjLWFJcei4P(XXmzMh4Bu43F)OF4JfDDJZV2Gcy4qxqnYUl7M3GGkNH3kLdD7JMHb)6ZodzD5ERwP8(p9nk8tFC5ERwP8F6JRnM0pAc5Mp2dlJop1TXWJdpH)y9o74unoX2(tFKop1TFK1rnK7Sp2dlJop1TPGtp8e(JXuyz7A3p2zsjjlo0)PF)OZCs7)03OWhdk7hoY8ZF)yOZVFKjPXgL)rVBEkVt)aFCGww4XXKnM0pY6SSDtHfZXU)(Xq3Y9wTs5)0V)(7hxU3Qvk)N(yyNwzMTdL)b(4yyFZN1z(b6hx)jD4JDMusYgMt6342ncEJqP)4mQHCNvZmPCZM5Fmy8X1gt6h7Rzd7FmStRZOgYD2h4JmZ2HYRzMuUzZ8pgmk9XWoTg687h4J05PU9JShxF2bnNUPms6hzMTdL)XcPt)ro1qgzsjjByoPFmOSFaYY8qMRp7(yyNw7mPKKnmN0pWhNrnK7SpM(JHo68u3(rt4M)9JhCZjnUCZA(ge6J2XpSZ(gfs9JUWZjU3QvkV)nU9XzuV1z73Oq60FKmBg(Ppg2PvhDEk)l7JRHK62F6JDVZkj9BuG4(4zi56)PVXTcFGVXT0FGF)9JJKME)N(y37Sss)ykSFrlhN(9JDM0XF6JDVZkj9B0YVFKBgP)0hpdjx)p97VFmStRRHK62VSpo4po8JHKRTF6JNHKR)N(93pYZK0F6JNHKR)N(93pYCEMRHK62F6JNHKR)N(93pg2P1ot64h4JHDADK007FGpg2P1X8zzM9d8XdZ46ZUF6JNHKR)N(93F)iHzTJJoD)g3ioc973OqHF6JeM1oo609BuOabjaR(iNA1NDt2ys)4sj8gYPFSmsQBOC5b6hzBp79rZ46NNoX9wTs5Llpq)gP)4sj8gYPFSOBP8dZiL17UPVEN1agoR3CkED30xVZAad)kY0WB9Jl3B1kL)tFmStRmZ2HY)aFmStRE38uEN(b(4yyFZN1z(b6hx)jD4JDMusYgMt6342ncEJqP)4mQHCNvZmPCZM5Fmy8X1gt6h7Rzd7FmStRZOgYD2h4JmZ2HYRzMuUzZ8pY6)JHo68u3(rt4M)iDEQB)i7X1NDqZPBkJK(ro1qgzsjjByoPFmOSFaYY8qMRp7(yyNw7mPKKnmN0pWhNrnK7SpM(JmZ2HY)iHs)XWoTg687h43p6h(yrx348RnOago0fKDZBqqLZWBLYHk8rZWGF9zNHSUCVvRuE)N(gf(PpUCVvRu(p9X1gt6hnHCZh7HLrNN62y4XHNWFSENDCQgNyB)PpsNN62pY6OgYD2h7HLrNN62uWPhEc)XykSSDT7h9U5P8o9d8rN5K2)PVrHpgu2pCK5N)(XqNF)itsJnk)JDMusYId9F63poqll84yYgt6hzDw2UPWI5y3F)yOB5ERwP8F63F)9JhCZjnUCZA(ge6J2XpSZ(gfs9JUWZjU3QvkV)nU9XzuV1z73Oq60FKmBg(Ppg2PvhDEk)l7JRHK62F6JDVZkj9BuG4(4zi56)PF)9JJKME)N(y37Sss)ykSFrlhN(9JDM0XF6JDVZkj9B0YVFKBgP)0hpdjx)p97VFmStRRHK62pWhd706iPP3)aFKNjP)0hpdjx)p97VFK58mxdj1T)0hpdjx)p97VFmStRDM0XpWhh8hh(XqY12p9XZqY1)t)(7hd706y(SmZ(b(4HzC9z3p9XZqY1)t)(7VFm0TCVvRu(p9XotkjzdZj9BC7gbVrO0)(73OWTF6JeM1oo609BuOabjaR(iNA1NDt2ys)4sj8gYPFSmsQBOC5b6hzBp79rZ46NNoX9wTs5Llpq)gP)O3536y(KjjDPdFJcFCPeEd50pw0Tu(HzKY6D30xVZAadN1BofVUB6R3znGHFfzA4T(rJZFAwF29tF804D)0h7JgsQfHUXpcbbbXPBi3bDe6gxF2XctE2kN27nH6RHVZ9nH6RHVbtnH6Jgs6CFtO(OHKgmXisGGGGGGiZJgsiJZkjfQeelm5zRCAVdv(q3GkFOtZoJam9mcDbXYPzNraMEiIh6gJibcccccIt3qUdQVg(o3dfSqSWclNMDgb6EhlgNvskJqblubgj(Bmcv(qS0hnK05EOlOcmYytO(A4BWeuWcXclSCA2zeO7DSyCwjPmcfSqfyK4VXiu5dXsF0qsdMGUGkWiJibcccI6gqce0hnKmNzMSXK(rdjZzMues2PFCmtM5S)gf(4yMmZj23i9hnKmNzSi0n(riiiioDd5oOJq346ZowyYZw50EVjuFn8Tj0aLCnmIeiiiiiiY8OHeY4SssHkbXctE2kN27qLp0nOYh60SZiatpJqxqSCA2zeGPhI4HUXisGGGGGG40nK7G6RHVqblelSWYPzNrGU3XIXzLKYiuWcvGrI)gJqLp0aLCnmIeiiiiQBajqqFmStRgsMZmFGpU2ys)4yyFZNFCmtM5b(gf(yF0qsj83OabcEQFCiKBwF29rcK6h7JgsQTVrbcK6hnKmNz(gPjqlFCmtM52)TGvbVLwkqCSI4sFJvexHwyvH)4k1w(OTVr6ps4Vr6poMjZ8jBmPFSVCJ36S9EMmZ)yyNwhZKz(x2hhZKzUfHUXpcbbbXPBi3bDe6gxF2XctE2kN27nH4fAczTqtOYk0eYuOje)wtiR3Acv2TMqMBmIeiiiiiioDd5oiEbOGfIfM8SvoT3HkFiw43GUG4fyKXMqwlafSqSWKNTYP9ou5dXI1BqxqwlWiJnHkRauWcXctE2kN27qLpelLDd6cQScmYytitbOGfIfM8SvoT3HkFiwm3GUGmfyKrKabbbrDdibc6J88Aw63i9hd70AF0qs)aFSpAiPt2ys)iZqYo93F)4Y9wTs5)0hd70kZSDO8pWhhd7B(SoZpq)46pPdFSZKss2WCs)g3UrWBek9hdD05PU9JMWn)X1gt6h7Rzd7FmStRZOgYD2h4JmZ2HYRzMuUzZ8pgmk9XWoTg687h4J05PU9JShxF2bnNUPms6hNrnK7SAMjLB2m)JbJpYPgYitkjzdZj9JbL9dqwMhYC9z3hd70ANjLKSH5K(b(4mQHCN9X0FKz2ou(hju6F)OF4JfDDJZV2Gcy4qxq2nVbbvodVvkh62hndd(1NDgY6Y9wTs59F6Bu4N(4Y9wTs5)0hxBmPF0eYnFShwgDEQBJHhhEc)X6D2XPACIT9N(iDEQB)iRJAi3zFShwgDEQBtbNE4j8hJPWY21UF07MNY70pWhDMtA)N(gf(yqz)WrMF(7h7mPKKfh6)0VFm053pYK0yJY)4aTSWJJjBmPFK1zz7MclMJD)9JHUL7TALY)PF)93pEWnN04YnR5BqOpAh)Wo7Bui1p6cpN4ERwP8(342hNr9wNTFJcPt)rYSz4N(yyNwD05P8VSpUgsQB)Pp29oRK0VrbI7JNHKR)N(93pg2P1rstV)b(yNjD8N(y37Sss)gT87h5zs6p9XZqY1)t)(7hd706AiPU9d8Xb)XHFmKCT9tF8mKC9)0V)(rUzK(tF8mKC9)0V)(rMZZCnKu3(tF8mKC9)0V)(XdZ46ZUF6JNHKR)N(93posA69F6JDVZkj9JPW(fTCC63pg2P1X8zzM9d8XWoT2zsh)a)(Xq3Y9wTs5)0h7mPKKnmN0VXTBe8gHs)7V)(X5)gfy1Tc)(pa--[[
Author : Twintop
Version : 2016-08-17
Made by Twintop
Copy/Pasta
]]--

--- WA Sections ---
{
    "m": "d",
    "s": "2.2.1.1",
    "d": {
        "expanded": true,
        "id": "Insanity Bar",
        "additional_triggers": [],
        "disjunctive": "all",
        "regionType": "group",
        "activeTriggerMode": -10,
        "selfPoint": "BOTTOMLEFT",
        "load": {
            "race": {
                "multi": []
            },
            "difficulty": {
                "multi": []
            },
            "use_class": "true",
            "role": {
                "multi": []
            },
            "faction": {
                "multi": []
            },
            "class": {
                "single": "PRIEST"
            },
            "talent": {
                "multi": []
            },
            "pvptalent": {
                "multi": []
            }
        },
        "yOffset": -200,
        "numTriggers": 1
    },
    "v": 1421,
    "a": [],
    "c": [
        {
            "width": 5.9076886177063,
            "displayText": "%c",
            "id": "Insanity Bar - Options and Trigger",
            "additional_triggers": [
                {
                    "untrigger": [],
                    "trigger": {
                        "custom_hide": "timed",
                        "custom": "-- Insanity Bar -- By Twintop - Illidan-US, 2016/08/17\nfunction(event,time,type,_,sourceGUID,sourcename,_,_,destGUID,destname,_,_,spellid,spellname,_,_,_,_,_,_,_,spellcritical,_,_,_,spellmultistrike)\n    local CurrentTime = GetTime();\n    if event == \"COMBAT_LOG_EVENT_UNFILTERED\" or event == \"COMBAT_LOG_EVENT\" then\n        \n        WA_Voidform_Total_Stacks = WA_Voidform_Total_Stacks or 0;\n        WA_Voidform_Previous_Stack_Time = WA_Voidform_Previous_Stack_Time or 0;\n        WA_Voidform_Drain_Stacks = WA_Voidform_Drain_Stacks or 0;\n        WA_Voidform_VoidTorrent_Stacks = WA_Voidform_VoidTorrent_Stacks or 0;\n        WA_Voidform_Dispersion_Stacks = WA_Voidform_Dispersion_Stacks or 0;\n        \n        if WA_Voidform_Total_Stacks >= 100 then\n            \n            if (CurrentTime - WA_Voidform_Previous_Stack_Time) >= 1 then\n                \n                WA_Voidform_Previous_Stack_Time = CurrentTime;\n                WA_Voidform_Total_Stacks = WA_Voidform_Total_Stacks + 1;\n                \n                \n                if WA_Voidform_VoidTorrent_Start == nil and WA_Voidform_Dispersion_Start == nil then\n                    \n                    WA_Voidform_Drain_Stacks = WA_Voidform_Drain_Stacks + 1;\n                    \n                elseif WA_Voidform_VoidTorrent_Start ~= nil then\n                    \n                    WA_Voidform_VoidTorrent_Stacks = WA_Voidform_VoidTorrent_Stacks + 1;\n                    \n                else\n                    \n                    WA_Voidform_Dispersion_Stacks = WA_Voidform_Dispersion_Stacks + 1;\n                    \n                end                \n            end\n            \n        end\n        \n        \n        if sourceGUID == UnitGUID(\"player\") then\n            \n            if spellid == 194249 then\n                \n                if type == \"SPELL_AURA_APPLIED\" then -- Entered Voidform\n                    \n                    WA_Voidform_Previous_Stack_Time = CurrentTime;\n                    WA_Voidform_VoidTorrent_Start = nil;\n                    WA_Voidform_Dispersion_Start = nil;\n                    WA_Voidform_Drain_Stacks = 1;\n                    WA_Voidform_Start_Time = CurrentTime;\n                    WA_Voidform_Total_Stacks = 1;\n                    WA_Voidform_VoidTorrent_Stacks = 0;\n                    WA_Voidform_Dispersion_Stacks = 0;\n                    \n                elseif type == \"SPELL_AURA_APPLIED_DOSE\" then -- New Voidform Stack\n                    \n                    WA_Voidform_Previous_Stack_Time = CurrentTime;\n                    WA_Voidform_Total_Stacks = WA_Voidform_Total_Stacks + 1;\n                    \n                    if WA_Voidform_VoidTorrent_Start == nil and WA_Voidform_Dispersion_Start == nil then\n                        \n                        WA_Voidform_Drain_Stacks = WA_Voidform_Drain_Stacks + 1;\n                        \n                    elseif WA_Voidform_VoidTorrent_Start ~= nil then\n                        \n                        WA_Voidform_VoidTorrent_Stacks = WA_Voidform_VoidTorrent_Stacks + 1;\n                        \n                    else\n                        \n                        WA_Voidform_Dispersion_Stacks = WA_Voidform_Dispersion_Stacks + 1;\n                        \n                    end\n                    \n                elseif type == \"SPELL_AURA_REMOVED\" then -- Exited Voidform\n                    if WA_Insanity_Bar_Voidform_Summary == true then\n                        print(\"Voidform Info:\");\n                        print(\"--------------------------\");\n                        print(string.format(\"Voidform Duration: %.2f seconds\", (CurrentTime-WA_Voidform_Start_Time)));\n                        \n                        if WA_Voidform_Total_Stacks > 100 then\n                            print(string.format(\"Voidform Stacks: 100 (+%.0f)\", (WA_Voidform_Total_Stacks-100)));\n                        else\n                            print(string.format(\"Voidform Stacks: %.0f\", WA_Voidform_Total_Stacks));\n                        end\n                        \n                        print(string.format(\"Dispersion Stacks: %.0f\", WA_Voidform_Dispersion_Stacks));\n                        print(string.format(\"Void Torrent Stacks: %.0f\", WA_Voidform_VoidTorrent_Stacks));\n                        print(string.format(\"Final Drain: %.0f stacks; %.1f / sec\", WA_Voidform_Drain_Stacks, WA_Voidform_Current_Drain_Rate));\n                    end\n                    \n                    WA_Voidform_VoidTorrent_Start = nil;\n                    WA_Voidform_Dispersion_Start = nil;\n                    WA_Voidform_Drain_Stacks = 0;\n                    WA_Voidform_Start_Time = nil;\n                    WA_Voidform_Total_Stacks = 0;\n                    WA_Voidform_VoidTorrent_Stacks = 0;\n                    WA_Voidform_Dispersion_Stacks = 0;\n                    \n                end\n                \n            elseif spellid == 205065 then\n                \n                if type == \"SPELL_AURA_APPLIED\" then -- Started channeling Void Torrent\n                    \n                    WA_Voidform_VoidTorrent_Start = CurrentTime;\n                    \n                elseif type == \"SPELL_AURA_REMOVED\" and WA_Voidform_VoidTorrent_Start ~= nil then -- Stopped channeling Void Torrent\n                    \n                    WA_Voidform_VoidTorrent_Start = nil;\n                    \n                end\n                \n            elseif spellid == 47585 then\n                \n                if type == \"SPELL_AURA_APPLIED\" then -- Started channeling Dispersion\n                    \n                    WA_Voidform_Dispersion_Start = CurrentTime;\n                    \n                elseif type == \"SPELL_AURA_REMOVED\" and WA_Voidform_Dispersion_Start ~= nil then -- Stopped channeling Dispersion\n                    \n                    WA_Voidform_Dispersion_Start = nil;\n                    \n                end\n                \n            elseif spellid == 212570 then\n                \n                if type == \"SPELL_AURA_APPLIED\" then -- Gain Surrender to Madness\n                    \n                    WA_Voidform_S2M_Activated = true;\n                    WA_Voidform_S2M_Start = CurrentTime;\n                    \n                elseif type == \"SPELL_AURA_REMOVED\" then -- Lose Surrender to Madness\n                    \n                    WA_Voidform_S2M_Activated = false;\n                    \n                end\n                \n            end\n            \n        elseif destGUID == UnitGUID(\"player\") and (type == \"UNIT_DIED\" or type == \"UNIT_DESTROYED\" or type == \"SPELL_INSTAKILL\") and WA_Voidform_S2M_Activated == true then\n            \n            WA_Voidform_S2M_Activated = false;\n            \n            if WA_Insanity_Bar_S2M_Wilhelm == true then\n                PlaySoundFile(\"Interface\\\\AddOns\\\\WeakAuras\\\\PowerAurasMedia\\\\Sounds\\\\wilhelm.ogg\", \"Master\");\n            end\n            \n            if WA_Insanity_Bar_S2M_Summary == true then\n                print(\"Surrender to Madness Info:\");\n                print(\"--------------------------\");\n                print(string.format(\"S2M Duration: %.2f seconds\", (CurrentTime-WA_Voidform_S2M_Start)));\n                print(string.format(\"Voidform Duration: %.2f seconds\", (CurrentTime-WA_Voidform_Start_Time)));\n                \n                if WA_Voidform_Total_Stacks > 100 then\n                    print(string.format(\"Voidform Stacks: 100 (+%.0f)\", (WA_Voidform_Total_Stacks-100)));\n                else\n                    print(string.format(\"Voidform Stacks: %.0f\", WA_Voidform_Total_Stacks));\n                end\n                \n                print(string.format(\"Dispersion Stacks: %.0f\", WA_Voidform_Dispersion_Stacks));\n                print(string.format(\"Void Torrent Stacks: %.0f\", WA_Voidform_VoidTorrent_Stacks));\n                print(string.format(\"Final Drain: %.0f stacks; %.1f / sec\", WA_Voidform_Drain_Stacks, WA_Voidform_Current_Drain_Rate));\n            end\n            \n            WA_Voidform_S2M_Start = nil;\n            WA_Voidform_VoidTorrent_Start = nil;\n            WA_Voidform_Dispersion_Start = nil;\n            WA_Voidform_Drain_Stacks = 0;\n            WA_Voidform_Start_Time = nil;\n            WA_Voidform_Total_Stacks = 0;\n            WA_Voidform_VoidTorrent_Stacks = 0;\n            WA_Voidform_Dispersion_Stacks = 0;\n            \n        end\n        \n    end \nend",
                        "custom_type": "status",
                        "events": "COMBAT_LOG_EVENT_UNFILTERED PLAYER_REGEN_DISABLED PLAYER_REGEN_ENABLED UNIT_AURA",
                        "event": "Health",
                        "type": "custom",
                        "subeventSuffix": "_CAST_START",
                        "subeventPrefix": "SPELL",
                        "check": "event"
                    }
                }
            ],
            "customText": "\n\n",
            "disjunctive": "any",
            "regionType": "text",
            "activeTriggerMode": 0,
            "load": {
                "difficulty": {
                    "multi": []
                },
                "faction": {
                    "multi": []
                },
                "use_spec": true,
                "class": {
                    "single": "PRIEST"
                },
                "talent": {
                    "multi": []
                },
                "race": {
                    "multi": []
                },
                "spec": {
                    "single": 3
                },
                "use_class": true,
                "role": {
                    "multi": []
                },
                "pvptalent": {
                    "multi": []
                }
            },
            "height": 11.815377235413,
            "trigger": {
                "custom_hide": "timed",
                "use_powertype": true,
                "unevent": "auto",
                "powertype": 13,
                "use_power": true,
                "event": "Power",
                "use_unit": true,
                "use_percentpower": false,
                "custom_type": "status",
                "type": "status"
            },
            "actions": {
                "init": {
                    "custom": "-- Insanity Bar -- By Twintop - Illidan-US, 2016/08/17\n------------------------------------------------------\n-- This is where you can customize the look and feel of the Insanity Bar.\n-- Colors are in the following format: Hexdecimal, AlphaRedGreenBlue, I.E.: AARRGGBB\n-- If you make edits to the following values and the Insanity Bar works, DO NOT expect support! I am not responsible for any issues that result from changes made after import.\n-- You have been warned!\n------------------------------------------------------\n-- AFTER YOU ALTER THESE VARIABLES, do /console reloadui\n------------------------------------------------------\n\n-- Bar and Text Colors\n\nWA_Insanity_Bar_Color_Bar_Status1 = \"FF763BAF\"; --Unable to trigger Voidform\nWA_Insanity_Bar_Color_Bar_Status2 = \"FF5C2F89\"; --Can trigger Voidform\nWA_Insanity_Bar_Color_Bar_Status2_Flash = \"FFAA1863\"; --Can trigger Voidform - Bar Flash Color\nWA_Insanity_Bar_Color_Bar_Status3 = \"FF431863\"; --Currently in Voidform\nWA_Insanity_Bar_Color_Bar_Status3_Warning = \"FFFFFF00\"; --You will fall out of Voidform within the next 2 GCDs if you don't generate Insanity quickly!\nWA_Insanity_Bar_Color_Bar_Status3_End = \"FFFF0000\"; --You will fall out of Voidform within the next GCD if you don't generate Insanity quickly!\nWA_Insanity_Bar_Color_Bar_Incoming = \"FFFFFFFF\"; --Incoming Insanity from a hardcast\nWA_Insanity_Bar_Color_Bar_AS = \"FFDF73FF\"; --Incoming Insanity from Auspicious Spirits\nWA_Insanity_Bar_Color_Text_Current = \"FFC2A3E0\"; --Text color of the current amount of Insanity\nWA_Insanity_Bar_Color_Text_Incoming = \"FFFFFFFF\"; --Text color of the incoming Insanity value from a hardcast\nWA_Insanity_Bar_Color_Text_AS = \"FFDF00FF\"; --Text color of the incoming Insanity value from Auspicious Spirits\nWA_Insanity_Bar_Color_Text_Left = \"00FFFFFF\"; --Text color of the information on the left side of the bar\nWA_Insanity_Bar_Color_Text_Middle = \"00FFFFFF\"; --Text color of the information in the middle of the bar during Voidform\n\n-- Bar Width and Height\n\nWA_Insanity_Bar_Width = 547; --Width of the bar, in pixels. Minimum 100px.\nWA_Insanity_Bar_Height = 26; --Height of the bar, in pixels. Minimum 1px.\n\n-- Bar Text\n\nWA_Insanity_Bar_Font_Size = 18; --Font size of all bar text. Minimum 4.\n\n-- Other Options\n\nWA_Insanity_Bar_Voidform_Summary = false; --Print out a summary of your Voidform to chat when you exit.\nWA_Insanity_Bar_S2M_Summary = true; --Print out a summary of your Surrender to Madness to chat when you die. Horribly.\nWA_Insanity_Bar_S2M_Wilhelm = true; --Play the Wilhelm Scream when you die in Surrender to Madness\n\n----------------------------------\n----------------------------------\n-- DO NOT EDIT BELOW THIS LINE! --\n----------------------------------\n----------------------------------\n\ngetRGBAFromString = function(s) \n    local _a = 1;\n    local _r = 0;\n    local _g = 1;\n    local _b = 0;\n    \n    if not (s == nil) then\n        \n        _a = tonumber(string.sub(s, 1, 2), 16);\n        _r = tonumber(string.sub(s, 3, 4), 16);\n        _g = tonumber(string.sub(s, 5, 6), 16);\n        _b = tonumber(string.sub(s, 7, 8), 16);\n        \n    end\n    \n    return _r, _g, _b, _a;\nend\n\nWA_Insanity_getRemainingTimeAndStackCount = function()         \n    WA_Voidform_Current_Insanity = WA_Voidform_Current_Insanity or 0;\n    WA_Voidform_Previous_Check_Time = WA_Voidform_Previous_Check_Time or 0;\n    WA_Voidform_VoidTorrent_Offset = WA_Voidform_VoidTorrent_Offset or 0;\n    WA_Voidform_Dispersion_Offset = WA_Voidform_Dispersion_Offset or 0;\n    WA_Voidform_Start_Time = WA_Voidform_Start_Time or 0;\n    WA_Voidform_Drain_Stacks = WA_Voidform_Drain_Stacks or 0;\n    WA_Voidform_Remaining_Time = WA_Voidform_Remaining_Time or 0;\n    WA_Voidform_Current_Drain_Rate =  WA_Voidform_Current_Drain_Rate or 0;\n    \n    local currentTime = GetTime();\n    WA_Voidform_Current_Insanity = UnitPower(\"player\", SPELL_POWER_SHADOW_ORBS, forceUpdate);\n    local _, _, _, vfCount, _, vfDuration, _, _, _, _, vfSpellId = UnitBuff(\"player\",GetSpellInfo(228264));\n    \n    if vfSpellId == nil then\n        WA_Voidform_Drain_Stacks = 0;\n        WA_Voidform_Current_Drain_Rate = 0;\n        return 0, 0, 0;\n    else\n        local down, up, lagHome, lagWorld = GetNetStats();\n        local TimeDiff = currentTime - WA_Voidform_Previous_Stack_Time;        \n        local remainingInsanity = tonumber(WA_Voidform_Current_Insanity);\n        \n        local remainingTime = 0;        \n        local moreStacks = 0;\n        local latency = lagWorld / 1000;\n        local workingStack = WA_Voidform_Drain_Stacks;\n        local startingStack = workingStack;\n        \n        if (remainingInsanity > 0) then\n            while (remainingInsanity > 0)\n            do\n                moreStacks = moreStacks+1;\n                local insanityDrain = 9.0 + ((workingStack - 1)/2);                \n                local stackTime = 1.0;\n                \n                if workingStack == startingStack then\n                    \n                    stackTime = 1.0 - TimeDiff + latency;\n                    \n                end\n                \n                \n                if (stackTime > 0) then                    \n                    if (insanityDrain * stackTime) >= remainingInsanity then                       \n                        stackTime = remainingInsanity / insanityDrain;\n                        remainingInsanity = 0;\n                    else\n                        remainingInsanity = remainingInsanity - (insanityDrain * stackTime);\n                    end\n                    \n                    remainingTime = remainingTime + stackTime;\n                end               \n                \n                workingStack = workingStack + 1;\n            end\n        end       \n        \n        WA_Voidform_Remaining_Time = remainingTime;\n        WA_Voidform_Current_Drain_Rate = 9.0 + ((WA_Voidform_Drain_Stacks - 1)/2);\n        \n        return remainingTime, vfCount, moreStacks;\n    end  \nend\n\nif WA_Insanity_Bar_Width <= 100 then\n    WA_Insanity_Bar_Width = 547;\nend\n\nif WA_Insanity_Bar_Height <= 1 then\n    WA_Insanity_Bar_Height = 26;\nend\n\nif WA_Insanity_Bar_Font_Size <= 4 then\n    WA_Insanity_Bar_Font_Size = 18;\nend\n\n\n\nWeakAurasSaved[\"displays\"][\"Insanity Bar - Border - Insanity Ready\"][\"width\"] = WA_Insanity_Bar_Width;\nWeakAurasSaved[\"displays\"][\"Insanity Bar - Main Bar\"][\"width\"] = WA_Insanity_Bar_Width;\nWeakAurasSaved[\"displays\"][\"Insanity Bar - Casting Bar\"][\"width\"] = WA_Insanity_Bar_Width;\nWeakAurasSaved[\"displays\"][\"Insanity Bar - Auspicious Spirits Bar\"][\"width\"] = WA_Insanity_Bar_Width;\nWeakAurasSaved[\"displays\"][\"Insanity Bar - Border - Insanity Ready\"][\"height\"] = WA_Insanity_Bar_Height;\nWeakAurasSaved[\"displays\"][\"Insanity Bar - Main Bar\"][\"height\"] = WA_Insanity_Bar_Height;\nWeakAurasSaved[\"displays\"][\"Insanity Bar - Casting Bar\"][\"height\"] = WA_Insanity_Bar_Height;\nWeakAurasSaved[\"displays\"][\"Insanity Bar - Auspicious Spirits Bar\"][\"height\"] = WA_Insanity_Bar_Height;\nWeakAurasSaved[\"displays\"][\"Insanity Bar - Text - Left\"][\"xOffset\"] = -(WA_Insanity_Bar_Width/2);\nWeakAurasSaved[\"displays\"][\"Insanity Bar - Text - Middle\"][\"xOffset\"] = 0;\nWeakAurasSaved[\"displays\"][\"Insanity Bar - Text - Right\"][\"xOffset\"] = (WA_Insanity_Bar_Width/2);\nWeakAurasSaved[\"displays\"][\"Insanity Bar - Text - Left\"][\"fontSize\"] = WA_Insanity_Bar_Font_Size;\nWeakAurasSaved[\"displays\"][\"Insanity Bar - Text - Middle\"][\"fontSize\"] = WA_Insanity_Bar_Font_Size;\nWeakAurasSaved[\"displays\"][\"Insanity Bar - Text - Right\"][\"fontSize\"] = WA_Insanity_Bar_Font_Size;\nWeakAurasSaved[\"displays\"][\"Insanity Bar - Non-LotV Marker 1\"][\"xOffset\"] = (WA_Insanity_Bar_Width/2);\nWeakAurasSaved[\"displays\"][\"Insanity Bar - Non-LotV Marker 2\"][\"xOffset\"] = (WA_Insanity_Bar_Width/2);\nWeakAurasSaved[\"displays\"][\"Insanity Bar - LotV Marker 1\"][\"xOffset\"] = (WA_Insanity_Bar_Width/5);\nWeakAurasSaved[\"displays\"][\"Insanity Bar - LotV Marker 2\"][\"xOffset\"] = (WA_Insanity_Bar_Width/5);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
                    "do_custom": true
                },
                "finish": {
                    "do_sound": false
                }
            },
            "numTriggers": 2
        },
        {
            "width": 67.938385009766,
            "id": "Insanity Bar - Text - Left",
            "disjunctive": "all",
            "regionType": "text",
            "activeTriggerMode": -10,
            "selfPoint": "LEFT",
            "justify": "CENTER",
            "numTriggers": 1,
            "frameStrata": 6,
            "displayText": "%c",
            "xOffset": -273.5,
            "customText": "-- Insanity Bar -- By Twintop - Illidan-US, 2016/08/17\nfunction()\n    \n    local haste = UnitSpellHaste(\"player\");\n    local _, _, _, liCount, _, liDuration, _, _, _, _, liSpellId = UnitBuff(\"player\",GetSpellInfo(197937));\n    \n    if WA_Insanity_getRemainingTimeAndStackCount ~= nil then\n        local remainingTime, stackCount, moreStacks = WA_Insanity_getRemainingTimeAndStackCount();        \n        \n        WA_Insanity_Bar_Color_Text_Left = WA_Insanity_Bar_Color_Text_Left or \"00FFFFFF\";\n        \n        if stackCount == 0 and moreStacks == 0 then\n            if liCount ~= nil and liCount > 0 then\n                return string.format(\"|c%s%.2f%%%% - %.0f LI\", WA_Insanity_Bar_Color_Text_Left, haste, liCount);\n            else\n                return string.format(\"|c%s%.2f%%%%\", WA_Insanity_Bar_Color_Text_Left, haste);\n            end            \n        elseif stackCount == 100 then\n            return string.format(\"|c%s%.2f%%%% - %.0f VF\", WA_Insanity_Bar_Color_Text_Left, haste, stackCount);\n        else\n            return string.format(\"|c%s%.2f%%%% - %.0f (+%.0f) VF\", WA_Insanity_Bar_Color_Text_Left, haste, stackCount, moreStacks);\n        end    \n        \n    else\n        \n        if stackCount == 0 and moreStacks == 0 then\n            if liCount ~= nil and liCount > 0 then\n                return string.format(\"|c%s%.2f%%%% - %.0f LI\", WA_Insanity_Bar_Color_Text_Left, haste, liCount);\n            else\n                return string.format(\"|c%s%.2f%%%%\", WA_Insanity_Bar_Color_Text_Left, haste);\n            end            \n        else\n            return \"\";\n        end\n        \n    end\nend",
            "load": {
                "difficulty": {
                    "multi": []
                },
                "faction": {
                    "multi": []
                },
                "use_spec": true,
                "class": {
                    "single": "PRIEST"
                },
                "talent": {
                    "multi": []
                },
                "race": {
                    "multi": []
                },
                "spec": {
                    "single": 3
                },
                "use_class": true,
                "role": {
                    "multi": []
                },
                "use_combat": true,
                "pvptalent": {
                    "multi": []
                }
            },
            "init_completed": 1,
            "trigger": {
                "powertype": 13,
                "custom_hide": "timed",
                "use_power": true,
                "event": "Power",
                "type": "status",
                "use_powertype": true,
                "use_unit": true,
                "unevent": "auto"
            },
            "height": 17.723064422607,
            "fontSize": 18
        },
        {
            "trigger": {
                "powertype": 13,
                "custom_hide": "timed",
                "use_power": true,
                "event": "Power",
                "type": "status",
                "use_powertype": true,
                "use_unit": true,
                "unevent": "auto"
            },
            "frameStrata": 6,
            "displayText": "%c",
            "id": "Insanity Bar - Text - Middle",
            "load": {
                "difficulty": {
                    "multi": []
                },
                "faction": {
                    "multi": []
                },
                "use_spec": true,
                "class": {
                    "single": "PRIEST"
                },
                "talent": {
                    "multi": []
                },
                "race": {
                    "multi": []
                },
                "spec": {
                    "single": 3
                },
                "use_class": true,
                "role": {
                    "multi": []
                },
                "use_combat": true,
                "pvptalent": {
                    "multi": []
                }
            },
            "customText": "-- Insanity Bar -- By Twintop - Illidan-US, 2016/08/17\nfunction()\n    WA_Voidform_Current_Drain_Rate = WA_Voidform_Current_Drain_Rate or 0;\n    \n    if WA_Insanity_getRemainingTimeAndStackCount ~= nil then\n        local remainingTime, stackCount, moreStacks = WA_Insanity_getRemainingTimeAndStackCount(); \n        \n        if WA_Voidform_Current_Drain_Rate == 0 then\n            return \"\";            \n        else            \n            return string.format(\"|c%s%.1fs - %.1f/s\", WA_Insanity_Bar_Color_Text_Middle, remainingTime, WA_Voidform_Current_Drain_Rate);            \n        end\n        \n    end\nend\n\n\n\n\n",
            "disjunctive": "all",
            "regionType": "text",
            "init_completed": 1,
            "activeTriggerMode": -10,
            "selfPoint": "CENTER",
            "numTriggers": 1,
            "justify": "CENTER",
            "width": 7.384693145752,
            "height": 17.723064422607,
            "fontSize": 18
        },
        {
            "width": 28.061569213867,
            "id": "Insanity Bar - Text - Right",
            "additional_triggers": [],
            "regionType": "text",
            "activeTriggerMode": 0,
            "init_completed": 1,
            "justify": "RIGHT",
            "numTriggers": 1,
            "frameStrata": 6,
            "displayText": "%c",
            "xOffset": 273.5,
            "customText": "-- Insanity Bar -- By Twintop - Illidan-US, 2016/08/17\nfunction()\n    WA_Insanity_Bar_Color_Text_Current = WA_Insanity_Bar_Color_Text_Current or \"FFC2A3E0\";\n    WA_Insanity_Bar_Color_Text_Incoming = WA_Insanity_Bar_Color_Text_Incoming or \"FFFFFFFF\";\n    WA_Insanity_Bar_Color_Text_AS = WA_Insanity_Bar_Color_Text_AS or \"FFDF00FF\";\n    \n    WA_Voidform_Current_Insanity = UnitPower(\"player\", SPELL_POWER_SHADOW_ORBS, forceUpdate);\n    WA_Insanity_Bar_Current_Cast_Gain = WA_Insanity_Bar_Current_Cast_Gain or 0;\n    local Current_Cast_Gain = WA_Insanity_Bar_Current_Cast_Gain;\n    WA_Insanity_Bar_AS_Gain = WA_Insanity_Bar_AS_Gain or 0;\n    WA_Insanity_Bar_Current_Cast_MindSear_Flag = WA_Insanity_Bar_Current_Cast_MindSear_Flag or 0;\n    \n    local specGroup = GetActiveSpecGroup();\n    local isFotMSelected = select(4, GetTalentInfo(1, 2, specGroup));   \n    local PIName = select(2, GetTalentInfo(6, 1, specGroup));\n    local isPIActive = select(11, UnitBuff(\"player\", PIName));\n    local S2MName = select(2, GetTalentInfo(7, 3, specGroup));\n    local isS2MActive = select(11, UnitBuff(\"player\", S2MName));\n    \n    if isFotMSelected then\n        \n        if WA_Insanity_Bar_Current_Cast_MindSear_Flag == 1 then\n            Current_Cast_Gain = string.format(\"~%.1f\", Current_Cast_Gain);    \n        else\n            Current_Cast_Gain = string.format(\"%.1f\", Current_Cast_Gain);\n        end\n        \n        if WA_Insanity_Bar_Current_Cast_Gain > 0 and WA_Insanity_Bar_AS_Gain > 0 then\n            return string.format(\"|c%s%s|r + |c%s%.1f|r + |c%s%.0f%%%%|r\", WA_Insanity_Bar_Color_Text_Incoming, Current_Cast_Gain, WA_Insanity_Bar_Color_Text_AS, WA_Insanity_Bar_AS_Gain, WA_Insanity_Bar_Color_Text_Current, WA_Voidform_Current_Insanity);\n        elseif WA_Insanity_Bar_Current_Cast_Gain > 0 then\n            return string.format(\"|c%s%s|r + |c%s%.0f%%%%|r\", WA_Insanity_Bar_Color_Text_Incoming, Current_Cast_Gain, WA_Insanity_Bar_Color_Text_Current, WA_Voidform_Current_Insanity);\n        elseif WA_Insanity_Bar_AS_Gain > 0 then\n            return string.format(\"|c%s%.1f|r + |c%s%.0f%%%%|r\", WA_Insanity_Bar_Color_Text_AS, WA_Insanity_Bar_AS_Gain, WA_Insanity_Bar_Color_Text_Current, WA_Voidform_Current_Insanity);\n        else\n            return string.format(\"|c%s%.0f%%%%|r\", WA_Insanity_Bar_Color_Text_Current, WA_Voidform_Current_Insanity);        \n        end\n        \n    else\n        \n        if WA_Insanity_Bar_Current_Cast_MindSear_Flag ==1 then\n            Current_Cast_Gain = string.format(\"~%.0f\", Current_Cast_Gain);    \n        else\n            Current_Cast_Gain = string.format(\"%.0f\", Current_Cast_Gain);\n        end\n        \n        if WA_Insanity_Bar_Current_Cast_Gain > 0 and WA_Insanity_Bar_AS_Gain > 0 then\n            return string.format(\"|c%s%s|r + |c%s%.0f|r + |c%s%.0f%%%%|r\", WA_Insanity_Bar_Color_Text_Incoming, Current_Cast_Gain, WA_Insanity_Bar_Color_Text_AS, WA_Insanity_Bar_AS_Gain, WA_Insanity_Bar_Color_Text_Current, WA_Voidform_Current_Insanity);\n        elseif WA_Insanity_Bar_Current_Cast_Gain > 0 then\n            return string.format(\"|c%s%s|r + |c%s%.0f%%%%|r\", WA_Insanity_Bar_Color_Text_Incoming, Current_Cast_Gain, WA_Insanity_Bar_Color_Text_Current, WA_Voidform_Current_Insanity);\n        elseif WA_Insanity_Bar_AS_Gain > 0 then\n            return string.format(\"|c%s%.0f|r + |c%s%.0f%%%%|r\", WA_Insanity_Bar_Color_Text_AS, WA_Insanity_Bar_AS_Gain, WA_Insanity_Bar_Color_Text_Current, WA_Voidform_Current_Insanity);\n        else\n            return string.format(\"|c%s%.0f%%%%|r\", WA_Insanity_Bar_Color_Text_Current, WA_Voidform_Current_Insanity);        \n        end\n        \n    end\n    \nend",
            "load": {
                "use_never": false,
                "faction": {
                    "multi": []
                },
                "use_spec": true,
                "class": {
                    "single": "PRIEST"
                },
                "talent": {
                    "multi": []
                },
                "race": {
                    "multi": []
                },
                "spec": {
                    "single": 3
                },
                "use_class": true,
                "role": {
                    "multi": []
                },
                "difficulty": {
                    "multi": []
                },
                "use_combat": true,
                "pvptalent": {
                    "multi": []
                }
            },
            "trigger": {
                "custom_hide": "timed",
                "use_powertype": true,
                "unevent": "auto",
                "powertype": 13,
                "use_power": true,
                "event": "Power",
                "use_unit": true,
                "use_percentpower": false,
                "type": "status"
            },
            "color": [
                null,
                0.9843137254902,
                0.9921568627451
            ],
            "selfPoint": "RIGHT",
            "actions": {
                "finish": {
                    "sound": " custom",
                    "do_sound": false
                }
            },
            "height": 17.723064422607,
            "fontSize": 18
        },
        {
            "additional_triggers": [
                {
                    "untrigger": {
                        "spellName": 228260
                    },
                    "trigger": {
                        "use_spellName": true,
                        "debuffType": "HELPFUL",
                        "unit": "player",
                        "names": [],
                        "realSpellName": "Void Eruption",
                        "spellIds": [],
                        "unevent": "auto",
                        "use_unit": true,
                        "event": "Action Usable",
                        "type": "status",
                        "subeventSuffix": "_CAST_START",
                        "spellName": 228260,
                        "subeventPrefix": "SPELL"
                    }
                },
                {
                    "untrigger": [],
                    "trigger": {
                        "unit": "player",
                        "debuffType": "HELPFUL",
                        "inverse": true,
                        "subeventPrefix": "SPELL",
                        "event": "Health",
                        "type": "aura",
                        "subeventSuffix": "_CAST_START",
                        "names": [
                            "Voidform"
                        ],
                        "spellIds": []
                    }
                }
            ],
            "regionType": "aurabar",
            "animation": {
                "main": {
                    "colorA": 1,
                    "x": 0,
                    "y": 0,
                    "colorType": "custom",
                    "alpha": 0.3,
                    "colorG": 1,
                    "colorR": 1,
                    "colorB": 1,
                    "alphaType": "alphaPulse",
                    "scalex": 1,
                    "duration": ".75",
                    "scaley": 1,
                    "type": "custom",
                    "use_alpha": true,
                    "rotate": 0,
                    "use_color": true,
                    "alphaFunc": "    return function(progress, start, delta)\n      local angle = (progress * 2 * math.pi) - (math.pi / 2)\n      return start + (((math.sin(angle) + 1)/2) * delta)\n    end\n  ",
                    "colorFunc": "return -- Insanity Bar -- By Twintop - Illidan-US, 2016/08/17\nfunction(progress, r1, g1, b1, a1, r2, g2, b2, a2)\n    \n    WA_Insanity_Bar_Color_Bar_Status1 = WA_Insanity_Bar_Color_Bar_Status1 or \"FF763BAF\";\n    WA_Insanity_Bar_Color_Bar_Status2_Flash = WA_Insanity_Bar_Color_Bar_Status2_Flash or \"995C2F89\";\n    WA_Insanity_Bar_Color_Bar_Status2 = WA_Insanity_Bar_Color_Bar_Status2 or \"FF5C2F89\";\n    WA_Insanity_Bar_Color_Bar_Status3 = WA_Insanity_Bar_Color_Bar_Status3 or\"FF431863\";\n    \n    WA_Voidform_Drain_Stacks = WA_Voidform_Drain_Stacks or 0;\n    WA_Voidform_Current_Insanity = WA_Voidform_Current_Insanity or 0;\n    \n    local specGroup = GetActiveSpecGroup();\n    local isLotVSelected = select(4, GetTalentInfo(7, 1, specGroup));\n    local a = 1;\n    local r = 0;\n    local g = 0;\n    local b = 0;\n    \n    getRGBAFromString = function(s) \n        local _a = 1;\n        local _r = 0;\n        local _g = 1;\n        local _b = 0;\n        \n        if not (s == nil) then\n            \n            _a = tonumber(string.sub(s, 1, 2), 16);\n            _r = tonumber(string.sub(s, 3, 4), 16);\n            _g = tonumber(string.sub(s, 5, 6), 16);\n            _b = tonumber(string.sub(s, 7, 8), 16);\n            \n        end\n        \n        return _r, _g, _b, _a;\n    end\n    \n    \n    if WA_Voidform_Drain_Stacks > 0 then\n        \n        r, g, b, a = getRGBAFromString(WA_Insanity_Bar_Color_Bar_Status3);  \n        \n    elseif WA_Voidform_Current_Insanity == 100 or (isLotVSelected and WA_Voidform_Current_Insanity >= 70) then\n        \n        r, g, b, a = getRGBAFromString(WA_Insanity_Bar_Color_Bar_Status2_Flash);\n        \n    else\n        \n        r, g, b, a = getRGBAFromString(WA_Insanity_Bar_Color_Bar_Status1);\n        \n    end\n    \n    return r/255, g/255, b/255, a/255;\nend\n\n\n\n"
                }
            },
            "activeTriggerMode": 0,
            "init_completed": 1,
            "texture": "Blizzard Raid Bar",
            "borderColor": [
                0.95686274509804,
                0.95294117647059,
                null,
                1
            ],
            "borderEdge": "Tooltip enlarged",
            "displayTextLeft": " ",
            "timerSize": 18,
            "actions": {
                "start": {
                    "glow_action": "show",
                    "do_custom": false,
                    "glow_frame": "WeakAuras:Insanity Bar - Main Bar",
                    "do_glow": false
                }
            },
            "borderSize": 12,
            "color": [],
            "backdropColor": [
                0,
                0,
                0,
                0.31410133838654
            ],
            "disjunctive": "all",
            "border": true,
            "barColor": [
                0.38039215686275,
                null,
                0.75686274509804
            ],
            "fontFlags": "OUTLINE",
            "height": 26,
            "width": 547,
            "borderOffset": 3,
            "timerFlags": "OUTLINE",
            "numTriggers": 3,
            "frameStrata": 5,
            "displayTextRight": " ",
            "icon": false,
            "id": "Insanity Bar - Border - Insanity Ready",
            "borderInset": 0,
            "customText": "\n\n",
            "timer": false,
            "text": false,
            "stacks": false,
            "textSize": 18,
            "sparkDesaturate": false,
            "load": {
                "use_never": false,
                "faction": {
                    "multi": []
                },
                "use_spec": true,
                "class": {
                    "single": "PRIEST",
                    "multi": {
                        "ROGUE": true
                    }
                },
                "talent": {
                    "multi": []
                },
                "race": {
                    "multi": []
                },
                "spec": {
                    "single": 3,
                    "multi": [
                        true,
                        null,
                        true
                    ]
                },
                "use_class": true,
                "role": {
                    "multi": []
                },
                "difficulty": {
                    "multi": []
                },
                "use_combat": true,
                "pvptalent": {
                    "multi": []
                }
            },
            "textColor": [
                null,
                0.99607843137255,
                0.98039215686274
            ],
            "xOffset": -0.00006103515625,
            "trigger": {
                "custom_hide": "timed",
                "use_powertype": true,
                "spellName": 0,
                "powertype": 13,
                "use_unit": true,
                "use_power": true,
                "event": "Power",
                "type": "status",
                "use_percentpower": false,
                "unevent": "auto",
                "use_spellName": true
            },
            "backgroundColor": [
                0.92549019607843,
                0.90588235294118,
                1,
                0
            ]
        },
        {
            "additional_triggers": [],
            "regionType": "aurabar",
            "animation": {
                "main": {
                    "colorA": 1,
                    "x": 0,
                    "y": 0,
                    "colorType": "custom",
                    "alpha": 0.3,
                    "colorG": 1,
                    "colorR": 1,
                    "colorB": 1,
                    "alphaType": "alphaPulse",
                    "scalex": 1,
                    "duration": ".75",
                    "scaley": 1,
                    "type": "custom",
                    "use_alpha": false,
                    "rotate": 0,
                    "use_color": true,
                    "alphaFunc": "    return function(progress, start, delta)\n      local angle = (progress * 2 * math.pi) - (math.pi / 2)\n      return start + (((math.sin(angle) + 1)/2) * delta)\n    end\n  ",
                    "colorFunc": "return -- Insanity Bar -- By Twintop - Illidan-US, 2016/08/17\nfunction(progress, r1, g1, b1, a1, r2, g2, b2, a2)\n    \n    WA_Insanity_Bar_Color_Bar_Status1 = WA_Insanity_Bar_Color_Bar_Status1 or \"FF763BAF\";\n    WA_Insanity_Bar_Color_Bar_Status2 = WA_Insanity_Bar_Color_Bar_Status2 or \"FF5C2F89\";\n    WA_Insanity_Bar_Color_Bar_Status3 = WA_Insanity_Bar_Color_Bar_Status3 or\"FF431863\";\n    WA_Insanity_Bar_Color_Bar_Status3_Warning = WA_Insanity_Bar_Color_Bar_Status3_Warning or\"FFFFFF00\";\n    WA_Insanity_Bar_Color_Bar_Status3_End = WA_Insanity_Bar_Color_Bar_Status3_End or\"FFFF0000\";\n    \n    WA_Voidform_Drain_Stacks = WA_Voidform_Drain_Stacks or 0;\n    WA_Voidform_Current_Insanity = WA_Voidform_Current_Insanity or 0;\n    \n    local specGroup = GetActiveSpecGroup();\n    local isLotVSelected = select(4, GetTalentInfo(7, 1, specGroup));\n    local a = 1;\n    local r = 0;\n    local g = 0;\n    local b = 0;\n    \n    if WA_Voidform_Drain_Stacks > 0 then\n        local haste = UnitSpellHaste(\"player\");\n        \n        local gcd = 1.5 / (1 + haste);\n        \n        if gcd < 0.75 then\n            \n            gcd = 0.75;\n            \n        end\n        \n        if gcd > WA_Voidform_Remaining_Time then        \n            \n            r, g, b, a = getRGBAFromString(WA_Insanity_Bar_Color_Bar_Status3_End);  \n            \n        elseif gcd*2 > WA_Voidform_Remaining_Time then\n            \n            r, g, b, a = getRGBAFromString(WA_Insanity_Bar_Color_Bar_Status3_Warning);  \n            \n        else\n            \n            r, g, b, a = getRGBAFromString(WA_Insanity_Bar_Color_Bar_Status3);  \n            \n        end\n        \n        \n    elseif WA_Voidform_Current_Insanity == 100 or (isLotVSelected and WA_Voidform_Current_Insanity >= 70) then\n        \n        r, g, b, a = getRGBAFromString(WA_Insanity_Bar_Color_Bar_Status2);\n        \n    else\n        \n        r, g, b, a = getRGBAFromString(WA_Insanity_Bar_Color_Bar_Status1);\n        \n    end\n    \n    return r/255, g/255, b/255, a/255;\nend"
                }
            },
            "activeTriggerMode": 0,
            "init_completed": 1,
            "texture": "Blizzard Raid Bar",
            "xOffset": -0.00006103515625,
            "borderInset": 1,
            "displayTextLeft": " ",
            "timerSize": 18,
            "height": 26,
            "borderSize": 12,
            "spark": true,
            "id": "Insanity Bar - Main Bar",
            "textSize": 18,
            "color": [],
            "backdropColor": [
                0,
                0,
                0,
                0.31410133838654
            ],
            "width": 547,
            "border": true,
            "barColor": [
                0.38039215686275,
                null,
                0.75686274509804
            ],
            "fontFlags": "OUTLINE",
            "borderBackdrop": "None",
            "frameStrata": 4,
            "borderOffset": 3,
            "timerFlags": "OUTLINE",
            "numTriggers": 1,
            "disjunctive": "any",
            "displayTextRight": " ",
            "icon": false,
            "actions": {
                "start": {
                    "glow_action": "show",
                    "do_custom": false,
                    "glow_frame": "WeakAuras:Insanity Bar - Main Bar",
                    "do_glow": false
                },
                "finish": {
                    "sound": " custom",
                    "do_sound": false,
                    "sound_channel": "SFX"
                }
            },
            "backgroundColor": [
                0.92549019607843,
                0.90588235294118,
                1,
                0
            ],
            "customText": "-- Insanity Bar -- By Twintop - Illidan-US, 2016/07/27\nfunction()\n    return \"\";\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
            "timer": false,
            "text": false,
            "stacks": false,
            "load": {
                "use_never": false,
                "faction": {
                    "multi": []
                },
                "use_spec": true,
                "class": {
                    "single": "PRIEST",
                    "multi": {
                        "ROGUE": true
                    }
                },
                "talent": {
                    "multi": []
                },
                "race": {
                    "multi": []
                },
                "spec": {
                    "single": 3,
                    "multi": [
                        true,
                        null,
                        true
                    ]
                },
                "use_class": true,
                "role": {
                    "multi": []
                },
                "difficulty": {
                    "multi": []
                },
                "use_combat": true,
                "pvptalent": {
                    "multi": []
                }
            },
            "sparkDesaturate": false,
            "borderColor": [
                0.17254901960784,
                0,
                0.34509803921569,
                1
            ],
            "textColor": [
                null,
                0.99607843137255,
                0.98039215686274
            ],
            "sparkColor": [
                0.95294117647059,
                0.94117647058823
            ],
            "trigger": {
                "custom_hide": "timed",
                "use_powertype": true,
                "unevent": "auto",
                "powertype": 13,
                "use_power": true,
                "event": "Power",
                "use_unit": true,
                "use_percentpower": false,
                "type": "status"
            },
            "borderEdge": "Blizzard Tooltip"
        },
        {
            "additional_triggers": [
                {
                    "untrigger": [],
                    "trigger": {
                        "fullscan": true,
                        "unit": "player",
                        "use_unit": true,
                        "debuffType": "HELPFUL",
                        "use_powertype": true,
                        "names": [],
                        "unevent": "auto",
                        "powertype": 13,
                        "spellIds": [],
                        "use_power": true,
                        "event": "Power",
                        "subeventPrefix": "SPELL",
                        "use_percentpower": false,
                        "subeventSuffix": "_CAST_START",
                        "type": "status"
                    }
                }
            ],
            "regionType": "aurabar",
            "animation": {
                "main": {
                    "colorFunc": "return -- Insanity Bar -- By Twintop - Illidan-US, 2016/08/17\nfunction(progress, r1, g1, b1, a1, r2, g2, b2, a2)\n    \n    WA_Insanity_Bar_Color_Text_Incoming = WA_Insanity_Bar_Color_Text_Incoming or \"FFFFFFFF\";\n    \n    local a = 0;\n    local r = 0;\n    local g = 0;\n    local b = 0;\n    \n    if getRGBAFromString ~= nil then\n        r, g, b, a = getRGBAFromString(WA_Insanity_Bar_Color_Bar_Incoming);\n    end\n    \n    \n    return r/255, g/255, b/255, a/255;\nend",
                    "x": 0,
                    "y": 0,
                    "colorType": "custom",
                    "alpha": 0.3,
                    "colorG": 1,
                    "colorR": 1,
                    "colorB": 1,
                    "alphaType": "alphaPulse",
                    "scalex": 1,
                    "duration": ".75",
                    "scaley": 1,
                    "colorA": 1,
                    "type": "custom",
                    "rotate": 0,
                    "use_color": true,
                    "use_alpha": false,
                    "alphaFunc": "    return function(progress, start, delta)\n      local angle = (progress * 2 * math.pi) - (math.pi / 2)\n      return start + (((math.sin(angle) + 1)/2) * delta)\n    end\n  "
                }
            },
            "trigger": {
                "custom_hide": "timed",
                "use_powertype": true,
                "use_unit": true,
                "unevent": "auto",
                "powertype": 3,
                "custom": "-- Insanity Bar -- By Twintop - Illidan-US, 2016/08/17\nfunction()\n    return true;\nend",
                "use_power": true,
                "event": "Insanity",
                "type": "custom",
                "custom_type": "status",
                "customDuration": "-- Insanity Bar -- By Twintop - Illidan-US, 2016/08/17\nfunction()\n    WA_Insanity_Bar_Current_Cast_Gain = 0;\n    WA_Voidform_Current_Insanity = UnitPower(\"player\", SPELL_POWER_SHADOW_ORBS, forceUpdate);\n    WA_Insanity_Bar_Current_Cast_MindSear_Flag = 0;\n    local currentSpell = UnitCastingInfo('player');\n    local currentChannel = UnitChannelInfo('player');\n    local specGroup = GetActiveSpecGroup();\n    local isFotMSelected = select(4, GetTalentInfo(1, 2, specGroup));\n    local PIName = select(2, GetTalentInfo(6, 1, specGroup));\n    local isPIActive = select(11, UnitBuff(\"player\", PIName));\n    local S2MName = select(2, GetTalentInfo(7, 3, specGroup));\n    local isS2MActive = select(11, UnitBuff(\"player\", S2MName));\n    \n    local currentSpellChannel = nil;\n    \n    if currentSpell == nil and currentChannel == nil then\n        WA_Insanity_Bar_Current_Cast_Gain = 0;\n        return 0,0,0,0;\n    elseif currentSpell == nil then\n        currentSpellChannel = currentChannel;\n    else\n        currentSpellChannel = currentSpell;\n    end\n    \n    local MB = GetSpellInfo(8092);\n    local MF = GetSpellInfo(15407);\n    local MSpike = GetSpellInfo(73510);\n    local MSear = GetSpellInfo(48045);\n    local SWV = GetSpellInfo(205351);\n    local VT = GetSpellInfo(34914)\n    \n    if select(1, currentSpellChannel) == select(1, MB) then --Mind Blast\n        \n        if isFotMSelected then\n            WA_Insanity_Bar_Current_Cast_Gain = 12 * 1.2;\n        else\n            WA_Insanity_Bar_Current_Cast_Gain = 12;\n        end\n        \n    elseif select(1, currentSpellChannel) == select(1, MF) then --Mind Flay\n        \n        if isFotMSelected then\n            WA_Insanity_Bar_Current_Cast_Gain = 2 * 1.2;\n        else\n            WA_Insanity_Bar_Current_Cast_Gain = 2;\n        end\n        \n    elseif select(1, currentSpellChannel) == select(1, MSear) then --Mind Sear, assuming 3 targets because we don't know how many there are!\n        \n        WA_Insanity_Bar_Current_Cast_Gain = 3;\n        WA_Insanity_Bar_Current_Cast_MindSear_Flag = 1;\n        \n    elseif select(1, currentSpellChannel) == select(1, MSpike) then --Mind Spike\n        \n        if isFotMSelected then\n            WA_Insanity_Bar_Current_Cast_Gain = 4 * 1.2;\n        else\n            WA_Insanity_Bar_Current_Cast_Gain = 4;\n        end\n        \n    elseif select(1, currentSpellChannel) == select(1, SWV) then --Shadow Word: Void    \n        WA_Insanity_Bar_Current_Cast_Gain = 25;\n    elseif select(1, currentSpellChannel) == select(1, VT) then --Vampric Touch\n        WA_Insanity_Bar_Current_Cast_Gain = 4;\n    else\n        WA_Insanity_Bar_Current_Cast_Gain = 0;\n        return 0,0,0,0;\n    end\n    \n    if isPIActive then\n        WA_Insanity_Bar_Current_Cast_Gain = WA_Insanity_Bar_Current_Cast_Gain * 1.25;\n    end\n    \n    if isS2MActive then\n        WA_Insanity_Bar_Current_Cast_Gain = WA_Insanity_Bar_Current_Cast_Gain * 2.5;\n    end\n    \n    \n    return (WA_Voidform_Current_Insanity+WA_Insanity_Bar_Current_Cast_Gain),100,0,0;\nend",
                "check": "update"
            },
            "init_completed": 1,
            "texture": "Blizzard Raid Bar",
            "borderColor": [
                0.92156862745098,
                0.90588235294118,
                null,
                1
            ],
            "borderEdge": "Blizzard Tooltip",
            "displayTextLeft": " ",
            "timerSize": 18,
            "height": 26,
            "borderSize": 3,
            "id": "Insanity Bar - Casting Bar",
            "backdropColor": [
                0,
                0,
                0,
                1
            ],
            "spark": true,
            "backgroundColor": [
                0.92156862745098,
                0.90588235294118,
                1,
                0
            ],
            "barColor": [
                null,
                0.97647058823529,
                0.99607843137255
            ],
            "fontFlags": "OUTLINE",
            "textSize": 18,
            "width": 547,
            "borderOffset": 3,
            "timerFlags": "OUTLINE",
            "numTriggers": 2,
            "frameStrata": 3,
            "displayTextRight": " ",
            "icon": false,
            "disjunctive": "any",
            "borderInset": 1,
            "customText": "\n\n",
            "timer": false,
            "text": false,
            "sparkHeight": 26,
            "load": {
                "use_never": false,
                "faction": {
                    "multi": []
                },
                "use_spec": true,
                "class": {
                    "single": "PRIEST",
                    "multi": {
                        "ROGUE": true
                    }
                },
                "talent": {
                    "multi": []
                },
                "race": {
                    "multi": []
                },
                "spec": {
                    "single": 3,
                    "multi": [
                        true,
                        null,
                        true
                    ]
                },
                "use_class": true,
                "role": {
                    "multi": []
                },
                "difficulty": {
                    "multi": []
                },
                "use_combat": true,
                "pvptalent": {
                    "multi": []
                }
            },
            "stacks": false,
            "sparkDesaturate": false,
            "textColor": [
                null,
                0.99607843137255,
                0.98039215686274
            ],
            "sparkWidth": 8,
            "activeTriggerMode": 0,
            "color": []
        },
        {
            "additional_triggers": [
                {
                    "untrigger": [],
                    "trigger": {
                        "unit": "player",
                        "use_powertype": true,
                        "unevent": "auto",
                        "powertype": 13,
                        "subeventSuffix": "_CAST_START",
                        "use_power": true,
                        "event": "Power",
                        "use_unit": true,
                        "use_percentpower": false,
                        "subeventPrefix": "SPELL",
                        "type": "status"
                    }
                }
            ],
            "regionType": "aurabar",
            "animation": {
                "main": {
                    "colorA": 1,
                    "x": 0,
                    "y": 0,
                    "colorType": "custom",
                    "alpha": 0.3,
                    "colorG": 1,
                    "colorR": 1,
                    "colorB": 1,
                    "alphaType": "alphaPulse",
                    "scalex": 1,
                    "duration": ".75",
                    "scaley": 1,
                    "type": "custom",
                    "use_alpha": false,
                    "rotate": 0,
                    "use_color": true,
                    "alphaFunc": "    return function(progress, start, delta)\n      local angle = (progress * 2 * math.pi) - (math.pi / 2)\n      return start + (((math.sin(angle) + 1)/2) * delta)\n    end\n  ",
                    "colorFunc": "return -- Insanity Bar -- By Twintop - Illidan-US, 2016/08/17\nfunction(progress, r1, g1, b1, a1, r2, g2, b2, a2)\n    \n    WA_Insanity_Bar_Color_Text_AS = WA_Insanity_Bar_Color_Text_AS or \"FFDF00FF\";\n    \n    local a = 1;\n    local r = 0;\n    local g = 0;\n    local b = 0;\n    \n    if not (WA_Insanity_Bar_Color_Bar_AS == nil) and not (getRGBAFromString == nil) then\n        r, g, b, a = getRGBAFromString(WA_Insanity_Bar_Color_Bar_AS);\n    end\n    \n    return r/255, g/255, b/255, a/255;\nend"
                }
            },
            "activeTriggerMode": 0,
            "init_completed": 1,
            "texture": "Blizzard Raid Bar",
            "borderColor": [
                0.92156862745098,
                0.90588235294118,
                null,
                1
            ],
            "borderEdge": "Blizzard Tooltip",
            "displayTextLeft": " ",
            "timerSize": 18,
            "height": 26,
            "borderSize": 3,
            "color": [],
            "disjunctive": "any",
            "spark": true,
            "backgroundColor": [
                0.92156862745098,
                0.90588235294118,
                1,
                0
            ],
            "barColor": [
                null,
                null,
                0.89019607843137
            ],
            "fontFlags": "OUTLINE",
            "width": 547,
            "frameStrata": 2,
            "sparkDesaturate": false,
            "timerFlags": "OUTLINE",
            "numTriggers": 2,
            "borderOffset": 3,
            "displayTextRight": " ",
            "icon": false,
            "borderInset": 1,
            "trigger": {
                "custom_hide": "timed",
                "use_powertype": true,
                "use_unit": true,
                "unevent": "auto",
                "powertype": 3,
                "custom": "-- Insanity Bar -- By Twintop - Illidan-US, 2016/08/17\nfunction()\n    return true;\nend",
                "use_power": true,
                "event": "Insanity",
                "type": "custom",
                "custom_type": "status",
                "customDuration": "-- Insanity Bar -- By Twintop - Illidan-US, 2016/08/17\nfunction()\n    WA_Voidform_Current_Insanity = UnitPower(\"player\", SPELL_POWER_SHADOW_ORBS, forceUpdate);\n    WA_Insanity_Bar_Current_Cast_Gain = WA_Insanity_Bar_Current_Cast_Gain or 0;\n    WA_Insanity_Bar_AS_Gain = 0;\n    local currentSpell = UnitCastingInfo('player');\n    local specGroup = GetActiveSpecGroup();\n    local isFotMSelected = select(4, GetTalentInfo(1, 2, specGroup));\n    local isLotVSelected = select(4, GetTalentInfo(7, 1, specGroup));\n    local PIName = select(2, GetTalentInfo(6, 1, specGroup));\n    local isPIActive = select(11, UnitBuff(\"player\", PIName));\n    local S2MName = select(2, GetTalentInfo(7, 3, specGroup));\n    local isS2MActive = select(11, UnitBuff(\"player\", S2MName));   \n    \n    local totalSAs = 0;    \n    WA_Insanity_Bar_AS_Gain = 0;\n    local color = \"FFFFFFFF\";\n    local insanityColor = \"FFFFFFFF\";\n    local specGroup = GetActiveSpecGroup();\n    local _, _, _, vfCount, _, vfDuration, _, _, _, _, vfSpellId = UnitBuff(\"player\",\"Voidform\");\n    \n    WA_SA_NUM_UNITS = WA_SA_NUM_UNITS or 0;\n    \n    if WA_SA_NUM_UNITS > 0 then\n        for guid,count in pairs(WA_SA_STATS) do\n            totalSAs = totalSAs + WA_SA_STATS[guid].Count;\n        end\n        \n        if totalSAs > WA_SA_TOTAL then\n            WA_Insanity_Bar_AS_Gain = WA_SA_TOTAL or 0;\n        else\n            WA_Insanity_Bar_AS_Gain = totalSAs or 0;\n        end\n    else\n        WA_Insanity_Bar_AS_Gain = -2;\n    end\n    \n    if WA_Insanity_Bar_AS_Gain <= 0 then\n        WA_Insanity_Bar_AS_Gain = 0;\n    end\n    \n    if WA_Insanity_Bar_AS_Gain == 0 then\n        return 0,0,0,0;\n    end    \n    \n    WA_Insanity_Bar_AS_Gain = WA_Insanity_Bar_AS_Gain * 4;    \n    \n    if isPIActive then\n        WA_Insanity_Bar_AS_Gain = WA_Insanity_Bar_AS_Gain * 1.25;\n    end\n    \n    if isS2MActive then\n        WA_Insanity_Bar_AS_Gain = WA_Insanity_Bar_AS_Gain * 2.5;\n    end\n    \n    return (WA_Voidform_Current_Insanity+WA_Insanity_Bar_Current_Cast_Gain+(WA_Insanity_Bar_AS_Gain)),100,0,0;\nend",
                "check": "update"
            },
            "customText": "\n\n",
            "timer": false,
            "text": false,
            "sparkHeight": 26,
            "textSize": 18,
            "load": {
                "use_never": false,
                "faction": {
                    "multi": []
                },
                "use_spec": true,
                "class": {
                    "single": "PRIEST",
                    "multi": {
                        "ROGUE": true
                    }
                },
                "use_talent": true,
                "race": {
                    "multi": []
                },
                "spec": {
                    "single": 3,
                    "multi": [
                        true,
                        null,
                        true
                    ]
                },
                "use_class": true,
                "role": {
                    "multi": []
                },
                "difficulty": {
                    "multi": []
                },
                "use_combat": true,
                "talent": {
                    "single": 14,
                    "multi": []
                },
                "pvptalent": {
                    "multi": []
                }
            },
            "stacks": false,
            "textColor": [
                null,
                0.99607843137255,
                0.98039215686274
            ],
            "sparkWidth": 8,
            "backdropColor": [
                0,
                0,
                0,
                1
            ],
            "id": "Insanity Bar - Auspicious Spirits Bar"
        },
        {
            "frameStrata": 6,
            "additional_triggers": [
                {
                    "untrigger": [],
                    "trigger": {
                        "custom_hide": "timed",
                        "debuffType": "HELPFUL",
                        "spellIds": [],
                        "unit": "player",
                        "subeventPrefix": "SPELL",
                        "event": "Health",
                        "type": "aura",
                        "subeventSuffix": "_CAST_START",
                        "names": [
                            "Voidform"
                        ],
                        "inverse": true
                    }
                }
            ],
            "id": "Insanity Bar - Non-LotV Marker 1",
            "xOffset": 273.5,
            "load": {
                "use_never": false,
                "faction": {
                    "multi": []
                },
                "use_spec": true,
                "class": {
                    "single": "PRIEST"
                },
                "use_talent": false,
                "race": {
                    "multi": []
                },
                "spec": {
                    "single": 3
                },
                "use_class": true,
                "role": {
                    "multi": []
                },
                "use_combat": true,
                "difficulty": {
                    "multi": []
                },
                "talent": {
                    "single": 19,
                    "multi": [
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        true,
                        true
                    ]
                },
                "pvptalent": {
                    "multi": []
                }
            },
            "height": 100,
            "regionType": "texture",
            "width": 15,
            "trigger": {
                "power_operator": "<",
                "spellName": 228260,
                "custom_hide": "timed",
                "power": "100",
                "use_targetRequired": false,
                "use_unit": true,
                "health_operator": ">",
                "unevent": "auto",
                "use_spellName": true,
                "realSpellName": "Void Eruption",
                "use_power": true,
                "use_health": true,
                "type": "status",
                "use_inverse": true,
                "health": "0",
                "event": "Action Usable"
            },
            "init_completed": 1,
            "numTriggers": 2,
            "untrigger": {
                "spellName": 228260
            },
            "activeTriggerMode": 0,
            "blendMode": "ADD",
            "texture": "Interface\\CastingBar\\UI-CastingBar-Spark"
        },
        {
            "xOffset": 273.5,
            "frameStrata": 6,
            "load": {
                "use_never": false,
                "use_combat": true,
                "use_spec": true,
                "class": {
                    "single": "PRIEST"
                },
                "use_talent": false,
                "race": {
                    "multi": []
                },
                "spec": {
                    "single": 3
                },
                "use_class": true,
                "role": {
                    "multi": []
                },
                "faction": {
                    "multi": []
                },
                "difficulty": {
                    "multi": []
                },
                "talent": {
                    "single": 19,
                    "multi": [
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        true,
                        true
                    ]
                },
                "pvptalent": {
                    "multi": []
                }
            },
            "id": "Insanity Bar - Non-LotV Marker 2",
            "additional_triggers": [
                {
                    "untrigger": [],
                    "trigger": {
                        "unit": "player",
                        "debuffType": "HELPFUL",
                        "inverse": true,
                        "subeventPrefix": "SPELL",
                        "event": "Health",
                        "type": "aura",
                        "subeventSuffix": "_CAST_START",
                        "names": [
                            "Voidform"
                        ],
                        "spellIds": []
                    }
                }
            ],
            "height": 100,
            "width": 15,
            "regionType": "texture",
            "animation": {
                "main": {
                    "use_scale": true,
                    "x": 0,
                    "y": 0,
                    "colorType": "straightColor",
                    "scaleFunc": "    return function(progress, startX, startY, scaleX, scaleY)\n      local angle = (progress * 2 * math.pi) - (math.pi / 2)\n      return startX + (((math.sin(angle) + 1)/2) * (scaleX - 1)), startY + (((math.sin(angle) + 1)/2) * (scaleY - 1))\n    end\n  ",
                    "colorG": 0,
                    "colorR": 0.52549019607843,
                    "colorB": 1,
                    "alphaType": "alphaPulse",
                    "scalex": 1.75,
                    "duration": ".5",
                    "scaley": 1.5,
                    "colorA": 1,
                    "rotate": 0,
                    "scaleType": "pulse",
                    "colorFunc": "    return function(progress, r1, g1, b1, a1, r2, g2, b2, a2)\n      return r1 + (progress * (r2 - r1)), g1 + (progress * (g2 - g1)), b1 + (progress * (b2 - b1)), a1 + (progress * (a2 - a1))\n    end\n  ",
                    "use_alpha": true,
                    "type": "custom",
                    "use_color": false,
                    "alphaFunc": "    return function(progress, start, delta)\n      local angle = (progress * 2 * math.pi) - (math.pi / 2)\n      return start + (((math.sin(angle) + 1)/2) * delta)\n    end\n  ",
                    "alpha": 0.3
                }
            },
            "activeTriggerMode": 0,
            "init_completed": 1,
            "numTriggers": 2,
            "untrigger": {
                "spellName": 228260
            },
            "trigger": {
                "power_operator": ">=",
                "custom_hide": "timed",
                "power": "100",
                "health": "0",
                "unevent": "auto",
                "spellName": 228260,
                "health_operator": ">",
                "use_spellName": true,
                "use_power": true,
                "use_health": true,
                "use_unit": true,
                "realSpellName": "Void Eruption",
                "event": "Action Usable",
                "type": "status"
            },
            "blendMode": "ADD",
            "texture": "Interface\\CastingBar\\UI-CastingBar-Spark"
        },
        {
            "frameStrata": 6,
            "id": "Insanity Bar - LotV Marker 1",
            "additional_triggers": [
                {
                    "untrigger": [],
                    "trigger": {
                        "unit": "player",
                        "debuffType": "HELPFUL",
                        "spellIds": [],
                        "subeventPrefix": "SPELL",
                        "event": "Health",
                        "type": "aura",
                        "subeventSuffix": "_CAST_START",
                        "names": [
                            "Voidform"
                        ],
                        "inverse": true
                    }
                }
            ],
            "xOffset": 109.4,
            "load": {
                "use_never": false,
                "use_combat": true,
                "use_spec": true,
                "class": {
                    "single": "PRIEST"
                },
                "use_talent": true,
                "race": {
                    "multi": []
                },
                "spec": {
                    "single": 3
                },
                "use_class": true,
                "role": {
                    "multi": []
                },
                "faction": {
                    "multi": []
                },
                "difficulty": {
                    "multi": []
                },
                "talent": {
                    "single": 19,
                    "multi": []
                },
                "pvptalent": {
                    "multi": []
                }
            },
            "regionType": "texture",
            "height": 100,
            "activeTriggerMode": 0,
            "width": 15,
            "numTriggers": 2,
            "untrigger": {
                "spellName": 228260
            },
            "trigger": {
                "power_operator": "<",
                "custom_hide": "timed",
                "power": "60",
                "health_operator": ">",
                "health": "0",
                "use_spellName": true,
                "unevent": "auto",
                "realSpellName": "Void Eruption",
                "event": "Action Usable",
                "use_power": true,
                "use_health": true,
                "type": "status",
                "use_inverse": true,
                "use_unit": true,
                "spellName": 228260
            },
            "blendMode": "ADD",
            "texture": "Interface\\CastingBar\\UI-CastingBar-Spark"
        },
        {
            "trigger": {
                "power_operator": ">=",
                "custom_hide": "timed",
                "power": "60",
                "health_operator": ">",
                "unevent": "auto",
                "spellName": 228260,
                "health": "0",
                "use_spellName": true,
                "use_power": true,
                "use_health": true,
                "use_unit": true,
                "realSpellName": "Void Eruption",
                "event": "Action Usable",
                "type": "status"
            },
            "frameStrata": 6,
            "load": {
                "use_never": false,
                "faction": {
                    "multi": []
                },
                "use_spec": true,
                "class": {
                    "single": "PRIEST"
                },
                "use_talent": true,
                "race": {
                    "multi": []
                },
                "spec": {
                    "single": 3
                },
                "use_class": true,
                "role": {
                    "multi": []
                },
                "use_combat": true,
                "difficulty": {
                    "multi": []
                },
                "talent": {
                    "single": 19,
                    "multi": []
                },
                "pvptalent": {
                    "multi": []
                }
            },
            "id": "Insanity Bar - LotV Marker 2",
            "additional_triggers": [
                {
                    "untrigger": [],
                    "trigger": {
                        "unit": "player",
                        "debuffType": "HELPFUL",
                        "spellIds": [],
                        "subeventPrefix": "SPELL",
                        "event": "Health",
                        "type": "aura",
                        "subeventSuffix": "_CAST_START",
                        "names": [
                            "Voidform"
                        ],
                        "inverse": true
                    }
                }
            ],
            "height": 100,
            "width": 15,
            "regionType": "texture",
            "animation": {
                "main": {
                    "colorA": 1,
                    "x": 0,
                    "y": 0,
                    "colorType": "straightColor",
                    "use_alpha": true,
                    "colorG": 0,
                    "colorR": 0.52549019607843,
                    "colorB": 1,
                    "alphaType": "alphaPulse",
                    "scalex": 1.75,
                    "duration": ".5",
                    "scaley": 1.5,
                    "rotate": 0,
                    "use_scale": true,
                    "scaleType": "pulse",
                    "colorFunc": "    return function(progress, r1, g1, b1, a1, r2, g2, b2, a2)\n      return r1 + (progress * (r2 - r1)), g1 + (progress * (g2 - g1)), b1 + (progress * (b2 - b1)), a1 + (progress * (a2 - a1))\n    end\n  ",
                    "alphaFunc": "    return function(progress, start, delta)\n      local angle = (progress * 2 * math.pi) - (math.pi / 2)\n      return start + (((math.sin(angle) + 1)/2) * delta)\n    end\n  ",
                    "type": "custom",
                    "use_color": false,
                    "scaleFunc": "    return function(progress, startX, startY, scaleX, scaleY)\n      local angle = (progress * 2 * math.pi) - (math.pi / 2)\n      return startX + (((math.sin(angle) + 1)/2) * (scaleX - 1)), startY + (((math.sin(angle) + 1)/2) * (scaleY - 1))\n    end\n  ",
                    "alpha": 0.3
                }
            },
            "activeTriggerMode": 0,
            "init_completed": 1,
            "numTriggers": 2,
            "untrigger": {
                "spellName": 228260
            },
            "xOffset": 109.4,
            "blendMode": "ADD",
            "texture": "Interface\\CastingBar\\UI-CastingBar-Spark"
        }
    ]
}